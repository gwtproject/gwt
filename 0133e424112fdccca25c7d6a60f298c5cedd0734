{
  "comments": [
    {
      "key": {
        "uuid": "e2c4558a_38fd12f4",
        "filename": "user/super/com/google/gwt/emul/java/lang/String.java",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 5385
      },
      "writtenOn": "2017-10-02T19:07:26Z",
      "side": 1,
      "message": "I don\u0027t think this needs to be a critical check we want this to compile out.",
      "range": {
        "startLine": 362,
        "startChar": 4,
        "endLine": 362,
        "endChar": 36
      },
      "revId": "0133e424112fdccca25c7d6a60f298c5cedd0734",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae5331a8_f26978a8",
        "filename": "user/super/com/google/gwt/emul/java/lang/String.java",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 5031
      },
      "writtenOn": "2017-10-02T19:38:34Z",
      "side": 1,
      "message": "I would agree if that method would be able to return null so you might end up with type errors in JS. But with NaN the JS code usually does not care and continues as usual. I once had this with a JS Date instance returning NaN for everything (because GWT date emulation does not fail for dates too large). Was pretty annoying to figure out. I could imagine the same might happen here. Performance sensitive code that does not want to pay for bound checking should use the char array directly.",
      "parentUuid": "e2c4558a_38fd12f4",
      "range": {
        "startLine": 362,
        "startChar": 4,
        "endLine": 362,
        "endChar": 36
      },
      "revId": "0133e424112fdccca25c7d6a60f298c5cedd0734",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df09a6cb_afcb991c",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/InternalPreconditions.java",
        "patchSetId": 4
      },
      "lineNbr": 525,
      "author": {
        "id": 5385
      },
      "writtenOn": "2017-10-02T19:07:26Z",
      "side": 1,
      "message": "This is not how the Precondition class work, we should use assertions here in dev mode so that people learn that they can not rely on stringindexoutofbounds in their code.",
      "range": {
        "startLine": 525,
        "startChar": 0,
        "endLine": 525,
        "endChar": 87
      },
      "revId": "0133e424112fdccca25c7d6a60f298c5cedd0734",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9e00252_ab7326ba",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/InternalPreconditions.java",
        "patchSetId": 4
      },
      "lineNbr": 525,
      "author": {
        "id": 5110
      },
      "writtenOn": "2017-10-02T19:31:05Z",
      "side": 1,
      "message": "technically if it is a critical check, this is a correct implementation but I agree this shouldn\u0027t be a critical check because that would be a big performance hit.",
      "parentUuid": "df09a6cb_afcb991c",
      "range": {
        "startLine": 525,
        "startChar": 0,
        "endLine": 525,
        "endChar": 87
      },
      "revId": "0133e424112fdccca25c7d6a60f298c5cedd0734",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ff91328_eb6f4353",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/InternalPreconditions.java",
        "patchSetId": 4
      },
      "lineNbr": 525,
      "author": {
        "id": 5031
      },
      "writtenOn": "2017-10-02T19:38:34Z",
      "side": 1,
      "message": "Can\u0027t follow. This class already has a method throwing SIOOBE, so it seems totally fine to me.",
      "parentUuid": "df09a6cb_afcb991c",
      "range": {
        "startLine": 525,
        "startChar": 0,
        "endLine": 525,
        "endChar": 87
      },
      "revId": "0133e424112fdccca25c7d6a60f298c5cedd0734",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ed80a13_cc9ccc94",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/InternalPreconditions.java",
        "patchSetId": 4
      },
      "lineNbr": 525,
      "author": {
        "id": 5130
      },
      "writtenOn": "2017-10-02T19:46:42Z",
      "side": 1,
      "message": "See past comments so far - I started off without the critical check, and then added it when two people objected to _not_ being critical.\n\nLikewise, see the original bug report, which seems to suggest that they want to make it at least stronger than assertions - I had it as BOUNDS, but CRITICAL also seems reasonable. You guys want to fight it out?",
      "parentUuid": "d9e00252_ab7326ba",
      "range": {
        "startLine": 525,
        "startChar": 0,
        "endLine": 525,
        "endChar": 87
      },
      "revId": "0133e424112fdccca25c7d6a60f298c5cedd0734",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}