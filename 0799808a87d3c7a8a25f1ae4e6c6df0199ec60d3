{
  "comments": [
    {
      "key": {
        "uuid": "0f98a432_5ecff533",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 42,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "Why are we initializing this to 10? Could this just be:\nthis(new int[0]);",
      "range": {
        "startLine": 42,
        "startChar": 16,
        "endLine": 42,
        "endChar": 19
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_561a92c2",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 42,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f98a432_5ecff533",
      "range": {
        "startLine": 42,
        "startChar": 16,
        "endLine": 42,
        "endChar": 19
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f40dc42_108064d5",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 47,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "this(new int[wordIndex(nbits - 1) + 1]);",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 10
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ffc242a_b4874d22",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 47,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-06-10T01:48:52Z",
      "side": 1,
      "message": "cannot call this after another method.",
      "parentUuid": "4f40dc42_108064d5",
      "range": {
        "startLine": 47,
        "startChar": 9,
        "endLine": 47,
        "endChar": 10
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f91e80d_bfe9578d",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 54,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "I think we want this to be in InternalPreconditions (so it can be turned off), but we do not have a fitting method just yet.\n\n@goktug should we just be adding a new method?",
      "range": {
        "startLine": 54,
        "startChar": 22,
        "endLine": 54,
        "endChar": 32
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ffc242a_7491c55c",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 54,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-06-10T01:48:52Z",
      "side": 1,
      "message": "Yes, we can add a method there but I think it is insignificant so we can skip it as well.",
      "parentUuid": "2f91e80d_bfe9578d",
      "range": {
        "startLine": 54,
        "startChar": 22,
        "endLine": 54,
        "endChar": 32
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f98a432_3edea9e7",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 126,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "lets add a comment there that this code has a potential problem:\n\nIf we grow the array more than 1024 places the array with degenerate into a map, we can work around this by adding 0 to the arrays. I think its not worth doing right now, but we should leave a reference here.",
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_9678aadc",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 126,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Done.\n\nWhat is needed to make it stay as an array? Arrays.fill it?",
      "parentUuid": "0f98a432_3edea9e7",
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f98a432_5e2055a5",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 160,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "this is different from the code in line 179 which kinda makes it hard to review, we should stick with one pattern here.",
      "range": {
        "startLine": 160,
        "startChar": 38,
        "endLine": 160,
        "endChar": 39
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_f67d9eca",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 160,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f98a432_5e2055a5",
      "range": {
        "startLine": 160,
        "startChar": 38,
        "endLine": 160,
        "endChar": 39
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f91e80d_dfb77b9b",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 197,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "we are doing this (small) optimization here, but not in maskInWord and others.\nI would remove this or at least invert the condition here to read:\n\nif(word \u003d\u003d 0) {\n  return;\n}",
      "range": {
        "startLine": 197,
        "startChar": 12,
        "endLine": 197,
        "endChar": 13
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_d68222e4",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 197,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f91e80d_dfb77b9b",
      "range": {
        "startLine": 197,
        "startChar": 12,
        "endLine": 197,
        "endChar": 13
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f91e80d_9fb1f3a7",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 215,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "This ensure int is not needed. Any assignment to the array is guarded with the WORD_MASK and thus we will never assign anything that is not an int.",
      "range": {
        "startLine": 215,
        "startChar": 11,
        "endLine": 215,
        "endChar": 20
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_3668b605",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 215,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Since we just set array length and not fill it with zeros, I guess it can return undefined, doesn\u0027t it?",
      "parentUuid": "2f91e80d_9fb1f3a7",
      "range": {
        "startLine": 215,
        "startChar": 11,
        "endLine": 215,
        "endChar": 20
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f98a432_3e1d495a",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 233,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "this is porentially already going through the whole array in a linear fashion",
      "range": {
        "startLine": 233,
        "startChar": 20,
        "endLine": 233,
        "endChar": 36
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_1665ba2d",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 233,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "I\u0027ve optimized the code to update last set index after every modification in the set",
      "parentUuid": "0f98a432_3e1d495a",
      "range": {
        "startLine": 233,
        "startChar": 20,
        "endLine": 233,
        "endChar": 36
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd3dd29f_ce754369",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 233,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-07-07T20:37:59Z",
      "side": 1,
      "message": "I think this is not a good idea, it makes the code harder to read and more error prone. I would prefer if we would not do this.",
      "parentUuid": "a0116f0b_1665ba2d",
      "range": {
        "startLine": 233,
        "startChar": 20,
        "endLine": 233,
        "endChar": 36
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d4dfe58_7106f8c6",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 233,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-07T21:47:18Z",
      "side": 1,
      "message": "We have to do it because we cant rely on array length.\n\nAnswering to your other question about it:\n\u003e As an indicator can\u0027t we just compare array length here?\n\nWe cant do that because OpenJDK implementation does not consider trailing unset indices. That\u0027s why we need to know last set index in the array.",
      "parentUuid": "fd3dd29f_ce754369",
      "range": {
        "startLine": 233,
        "startChar": 20,
        "endLine": 233,
        "endChar": 36
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa295886_0e6a8b99",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 233,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-07-09T08:53:38Z",
      "side": 1,
      "message": "I am saying lets not keep that extra information that we need to update in many methods and calculate the value like before by going backwards through the array. I think that is simpler",
      "parentUuid": "5d4dfe58_7106f8c6",
      "range": {
        "startLine": 233,
        "startChar": 20,
        "endLine": 233,
        "endChar": 36
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af75d8ba_13664cd9",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 244,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "int both \u003d Math.min(array.length, set.array.length);\nint index \u003d 0;\n\nfor (; index \u003c limit; index++) {\n  array[index] \u0026\u003d set.array[index]; \n}\n\nfor (; index \u003c array.length; index++) {\n  array[index] \u003d 0;\n}",
      "range": {
        "startLine": 234,
        "startChar": 4,
        "endLine": 244,
        "endChar": 5
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_76722ef9",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 244,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af75d8ba_13664cd9",
      "range": {
        "startLine": 234,
        "startChar": 4,
        "endLine": 244,
        "endChar": 5
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f91e80d_ff7b5fa6",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 271,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "see changes in and(BitSet s)",
      "range": {
        "startLine": 264,
        "startChar": 4,
        "endLine": 271,
        "endChar": 5
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d193675_d370b456",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 271,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f91e80d_ff7b5fa6",
      "range": {
        "startLine": 264,
        "startChar": 4,
        "endLine": 271,
        "endChar": 5
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f91e80d_bf85d7b4",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 277,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "array[i]",
      "range": {
        "startLine": 277,
        "startChar": 32,
        "endLine": 277,
        "endChar": 48
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00a23b11_318c4af5",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 277,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "See my comment for wordAt",
      "parentUuid": "2f91e80d_bf85d7b4",
      "range": {
        "startLine": 277,
        "startChar": 32,
        "endLine": 277,
        "endChar": 48
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f98a432_be287978",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 291,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "have you tried if the JDK does just return here instead of throwing?",
      "range": {
        "startLine": 291,
        "startChar": 6,
        "endLine": 291,
        "endChar": 12
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdaeb264_a9e11932",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 291,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Yes, the behaviour is consistent",
      "parentUuid": "0f98a432_be287978",
      "range": {
        "startLine": 291,
        "startChar": 6,
        "endLine": 291,
        "endChar": 12
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfa12c60_dc00eda7",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 306,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "have you tried if the JDK does just return here instead of throwing?",
      "range": {
        "startLine": 306,
        "startChar": 6,
        "endLine": 306,
        "endChar": 12
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_566f320b",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 306,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Yes, the behaviour is consistent",
      "parentUuid": "cfa12c60_dc00eda7",
      "range": {
        "startLine": 306,
        "startChar": 6,
        "endLine": 306,
        "endChar": 12
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f98a432_9e149d3b",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 348,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-09T15:02:00Z",
      "side": 1,
      "message": "last word index is a potential very slow method right? Its doing a linear serach from the end of the array till it finds a word that has a non zero value.\n\nI think we should not do this.\n\nAs an indicator can\u0027t we just compare array length here?",
      "range": {
        "startLine": 348,
        "startChar": 8,
        "endLine": 348,
        "endChar": 24
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0116f0b_b65cc66c",
        "filename": "user/super/com/google/gwt/emul/java/util/BitSet.java",
        "patchSetId": 32
      },
      "lineNbr": 348,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-07-01T15:11:44Z",
      "side": 1,
      "message": "Replied above, made an optimization",
      "parentUuid": "0f98a432_9e149d3b",
      "range": {
        "startLine": 348,
        "startChar": 8,
        "endLine": 348,
        "endChar": 24
      },
      "revId": "0799808a87d3c7a8a25f1ae4e6c6df0199ec60d3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}