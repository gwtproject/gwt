{
  "comments": [
    {
      "key": {
        "uuid": "1065f695_5da0d7e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 5445
      },
      "writtenOn": "2015-04-29T19:55:42Z",
      "side": 1,
      "message": "[warning] Subject line and body should be separated by a blank line.",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300cbaed_7b58495b",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-04-30T19:23:54Z",
      "side": 1,
      "message": "I\u0027m not familiar with this code at all but taking a quick look, this will remove the indices for columns and a lot of code paths seems to rely on it (e.g. column style names).",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300cbaed_a1be309e",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6825
      },
      "writtenOn": "2015-04-30T20:37:29Z",
      "side": 1,
      "message": "There could be a lot of subtle issues with this. I certainly appreciate a thorough review of this code over breaking internal and external teams.\n\nThere are these existing bugs that are related. And looking at forum posts online, people seemed to have had a variety issues around this. And issues seems to have changed with years/different browser versions.\n\nhttps://code.google.com/p/google-web-toolkit/issues/detail?id\u003d6405\nhttps://code.google.com/p/google-web-toolkit/issues/detail?id\u003d6711\n\nAll the references to the colgroup field seem to handle the case of cols being removed. For example, addColumnStyleName calls ensureTableColElement to create the col as needed.\n\nAlso the col elements don\u0027t seem to contain stateful information. They have a width and style attached. However, once a column at that particular position is displayed again, the relevant col is being set with information from that column.",
      "parentUuid": "300cbaed_7b58495b",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0c50acf_4862ffbe",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6449
      },
      "writtenOn": "2015-05-01T16:41:12Z",
      "side": 1,
      "message": "I share Goktug\u0027s nervousness around completely dropping the old DOM with this call. I did a little Web search around Chrome quirks with columns sizing and found this:\nhttp://stackoverflow.com/questions/12212608/why-is-my-table-cell-width-wrong-in-chrome\n\nIt seems that a setting table-layout: fixed might make Chrome behave like other browsers and not show the columns of width 0. Did you consider a more CSS-based approach like that?",
      "parentUuid": "300cbaed_a1be309e",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d078be71_a5f90801",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6825
      },
      "writtenOn": "2015-05-01T21:12:33Z",
      "side": 1,
      "message": "To be clear: It\u0027s a Firefox issue. I saw posts on the web that suggested an old version of Chrome had similar issues.\n\nOur table uses table-layout:fixed.\n\nFirefox eventually lays out the table correctly. So, it seems that Firefox has the right rules. It simply doesn\u0027t seem to recalculate the width after a column is removed. For example, if I add and remove \"display: none\" on the table, the layout is fixed.\n\nCellTable tries to be smart by detaching the body section before modifying it. Maybe, the actual bug has something to do with the detached body section NOT recalculating the width when it should.\n\n\nI tried creating a repro with pure JavaScript in codebin. There are two cases: (a) Setting col to \"width: 0px; display: none\" (current CellTable behavior) and (b) Removing the col (behavior of this CL). Strangely, both are affected by the Firefox bug. (It works fine in Chrome.)\nhttps://codebin.googleplex.com/#/hxp7ne5p5xc\n\n\n\nThoughts about col indices:\n- All calls to col are guarded by ensureTableColElement(). This methods re-creates col elements as needed. So, there shouldn\u0027t be an array index exception or similar.\n\n- Setting the column width involves storing a mapping between columns and width. So, even if the columns are re-added in a different order, the right width is remembered. The mapping is in AbstractCellTable.columnWidths.\n\n- Adding a style to a column is NOT remembered. So, if column 5 receives a style, is removed, and re-added, the style is missing. The way how this works seems buggy. It should remember the mapping between column and style as is done for the column width. As of now, if columns are re-added in a different order, they\u0027ll get the wrong style.\n\n\nCorrect behavior:\nAs an outsider, the correct behavior would seem to be to:\n\n1. Remove col elements for columns that no longer exist.\n\n2. The column width and column style should be added on the Column class. That way if columns are re-added in different orders or different columns are added, the column supplies what it wants rather than some leftover from a previous (possibly unrelated) column. Also, it\u0027s strange to set column attributes in two different places (on the column directly and indirectly on the CellTable).\n\n\nAlternative:\nAn alternative fix would be if there is a way to trigger the table to recalculate the widths for Firefox only. I only know of ways that are clunky, like hiding/showing the whole table.\n\n\nEven though, I wrote a lot, I\u0027m looking for guidance on what to do on this. I simply tried to do my homework before bugging you.",
      "parentUuid": "b0c50acf_4862ffbe",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7042b231_45012ebe",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6449
      },
      "writtenOn": "2015-05-05T20:35:58Z",
      "side": 1,
      "message": "Ah, thanks for helping me understand. You\u0027ve clearly thought about this deeply.\n\nI agree now that allowing columns to be deleted seems like the right way to go moving forward. I imagine this could be the default behavior for GWT 3.0, which is going to be a breaking release anyway.\n\nBut let\u0027s talk about transition plan: for now could the user pass an arg into refreshColumnWidths to use the new behavior?  Or maybe there\u0027s a columnRefreshStrategy enum property that you add to CellTable. The default value of the enum could use the old behavior, but clients could set the strategy to DELETE_OLD columns if they wanted the new. Just some thoughts...",
      "parentUuid": "d078be71_a5f90801",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d19f971_b389b8bf",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6825
      },
      "writtenOn": "2015-05-05T21:53:43Z",
      "side": 1,
      "message": "I can add a flag. Because refreshColumnWidths is called indirectly by other methods, a flag on CellTable would make more sense.\n\nI\u0027d suggest to be more aggressive and set the new behavior to default. For our project having it non-default is completely sufficient. However for GWT, it\u0027s probably better to avoid keeping old behavior around. The code passed 100,000 TAP tests internally. (Although, probably view tests check for whitespace on the page.) And I checked with the display planner team, who made the most recent changes to the code. It seems relatively safe to switch over given that people could always back out with the flag.",
      "parentUuid": "7042b231_45012ebe",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d19f971_76330e28",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-05-05T22:03:34Z",
      "side": 1,
      "message": "The problem is, at the opensource side, if this breaks the app, people will try to debug it by themselves or worse they will just give up and do not update to the latest GWT version - I don\u0027t want that to happen, especially for this release.\n\nOn the other hand if somebody hits the problem, it is easy to point them to the workaround. This is not ideal situation but that is what I prefer right now.",
      "parentUuid": "6d19f971_b389b8bf",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d19f971_b64c06cf",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6825
      },
      "writtenOn": "2015-05-05T22:27:08Z",
      "side": 1,
      "message": "Done.\n\nFeel free to adjust the naming and details of the flag.",
      "parentUuid": "6d19f971_76330e28",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d19f971_0b9ee8ad",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6449
      },
      "writtenOn": "2015-05-06T18:48:11Z",
      "side": 1,
      "message": "Thomas, do you think we\u0027ll have many more \"legacy\" behaviors like this? If so, then your \"legacyBehavior\" flag makes sense. If the list is small, then I would recommend a well-named, specific flag with a method like \"setLegacyZeroWidthColumnHiding(boolean)\".",
      "parentUuid": "6d19f971_b64c06cf",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd24a5a6_60ae9be8",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6825
      },
      "writtenOn": "2015-05-06T19:07:38Z",
      "side": 1,
      "message": "I\u0027d hope that there aren\u0027t too many more legacy flags in this class. And particularly, I\u0027d hope that there aren\u0027t multiple legacy flags for column groups specifically, so that \"colGroupLegacyBehavior\" needs to be more qualified.\n\n\"colGroupLegacyZeroWidthColumnHidingLegacyBehavior\" is quite wordy.\n\nThough, if you and goktug agree on a preferred name, I\u0027ll put that into the change.",
      "parentUuid": "6d19f971_0b9ee8ad",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d1e2d58_ea528838",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-05-06T19:14:02Z",
      "side": 1,
      "message": "removeColumnsOnHide?",
      "parentUuid": "cd24a5a6_60ae9be8",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d8435cc_48ff3378",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6825
      },
      "writtenOn": "2015-05-06T20:41:58Z",
      "side": 1,
      "message": "Done.\n\nPersonally, I find \"removeColumnsOnHide\" ambiguous. There is a distinction between a user removing a column from CellTable (the TD is gone) and CellTable removing a col from the colgroup element.\n\nBecause both are columns, I used colgroup in the name. That\u0027s unambiguous.\n\nThe term \"hide\" is also a bit novel. It\u0027s correct that the actual behavior in the app probably is that columns are hidden and shown. However, the method in AbstractCellTable is called removeColumn. So, the more correct name would be removeColumnsOnRemove, which obviously sounds a bit silly.\n\nIt\u0027s a little tricky to explain all of that with a concise name. That\u0027s why I simply called it \u0027behavior.\u0027",
      "parentUuid": "8d1e2d58_ea528838",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d8435cc_0b504560",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-05-06T21:27:11Z",
      "side": 1,
      "message": "Does reversing help? For example:\n\n setHideColumnsOnRemove(false)\n\nFeel free to choose the one that sounds better to you.",
      "parentUuid": "4d8435cc_48ff3378",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d8435cc_5c85b554",
        "filename": "user/src/com/google/gwt/user/cellview/client/CellTable.java",
        "patchSetId": 3
      },
      "lineNbr": 901,
      "author": {
        "id": 6825
      },
      "writtenOn": "2015-05-06T22:41:13Z",
      "side": 1,
      "message": "Reversing it doesn\u0027t make it clearer for me.\n\nI\u0027ve already changed the code to your first suggestion.",
      "parentUuid": "4d8435cc_0b504560",
      "revId": "08f2d4f2d257ebaa8f6f0ecc33b51f18a247328d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}