{
  "comments": [
    {
      "key": {
        "uuid": "dc14878a_793d8b7a",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/InternalPreconditions.java",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-25T02:00:54Z",
      "side": 1,
      "message": "I think this is a very slight API difference that we should avoid trying to mimic. I would rather stick to a single version instead: all these specializations starts accumulating in code size.",
      "revId": "0954ce77fed4ffcefec130be1d9a403ab91c7774",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ca257c0_40d7ae02",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/InternalPreconditions.java",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-25T08:26:23Z",
      "side": 1,
      "message": "What are the options for tests then?\nCurrently Colin has tests for out of range exception in streams\nand he expects only AIOBE. But gwt also produces IAE.\n\nSo what are the options for this case?\n- dont test out of range errors\n- catch both AIOBE and IAE as expected\n- Dont throw IAE in InternPrecoditions\u0027 range check methods,\nthrow only dedicated *IndexOutOfBoundsException\n\nWhat do you think?",
      "parentUuid": "dc14878a_793d8b7a",
      "revId": "0954ce77fed4ffcefec130be1d9a403ab91c7774",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ca257c0_0000865c",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/InternalPreconditions.java",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-05-25T08:28:13Z",
      "side": 1,
      "message": "IMHO the added code size is negligible. Compiled with OBF its probably less than 100 bytes that will be added on top of all the code you pull in if you start using spliterators or streams. If we start to become inconsistent to JavaDoc you would need to add comments on the call sites / tests to make sure future maintainers/contributors do not stumble upon these inconsistencies. Then it would not only be this method but also checkStringBounds() that can be removed, especially because places where its used only declare IndexOutOfBoundsException in JavaDoc.",
      "parentUuid": "5ca257c0_40d7ae02",
      "revId": "0954ce77fed4ffcefec130be1d9a403ab91c7774",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ca257c0_002f66e4",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/InternalPreconditions.java",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-25T08:36:57Z",
      "side": 1,
      "message": "But on the other hand it becomes hard to maintain all this specific methods.\nPersonally I would just not throw IAE in these methods, only *IndexOutOfBoundsException and put a comment about it in Preconditions javadoc",
      "parentUuid": "5ca257c0_0000865c",
      "revId": "0954ce77fed4ffcefec130be1d9a403ab91c7774",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}