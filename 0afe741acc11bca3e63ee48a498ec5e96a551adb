{
  "comments": [
    {
      "key": {
        "uuid": "9de5b2b3_f41289c0",
        "filename": "user/super/com/google/gwt/emul/java/lang/Enum.java",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 5030
      },
      "writtenOn": "2018-02-03T09:00:31Z",
      "side": 1,
      "message": "In terms of code style, as JsNonNull is a type-use annotation, should it rather be written as\n\n public final @JsNonNull String name() {\n\n?",
      "revId": "0afe741acc11bca3e63ee48a498ec5e96a551adb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40fa82fd_f4f37930",
        "filename": "user/super/com/google/gwt/emul/java/lang/Enum.java",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 6910
      },
      "writtenOn": "2018-02-03T11:06:49Z",
      "side": 1,
      "message": "Looks goot for me. It is uesed like the jsr-305 Nonnull annotations. They are for types also.\n\nNow other tools like findbugs will not detect this method to be nonnullable. Would it be better to use both annotations? But this is not necessary because this is only for emulated classes",
      "parentUuid": "9de5b2b3_f41289c0",
      "revId": "0afe741acc11bca3e63ee48a498ec5e96a551adb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a48701f_b433e976",
        "filename": "user/super/com/google/gwt/emul/java/lang/Enum.java",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 5105
      },
      "writtenOn": "2018-02-07T20:05:13Z",
      "side": 1,
      "message": "Reordering done.",
      "parentUuid": "40fa82fd_f4f37930",
      "revId": "0afe741acc11bca3e63ee48a498ec5e96a551adb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}