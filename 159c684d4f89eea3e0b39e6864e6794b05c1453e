{
  "comments": [
    {
      "key": {
        "uuid": "8497f201_36b0f7bf",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-04T17:47:06Z",
      "side": 0,
      "message": "Shouldn\u0027t these tests continue to work once the LongEmulation patch is in?",
      "range": {
        "startLine": 351,
        "startChar": 0,
        "endLine": 365,
        "endChar": 7
      },
      "revId": "159c684d4f89eea3e0b39e6864e6794b05c1453e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_d683d3cc",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-04T17:49:33Z",
      "side": 0,
      "message": "I never tried but they should work. So I guess you prefer to rename the tests and keep them?",
      "parentUuid": "8497f201_36b0f7bf",
      "range": {
        "startLine": 351,
        "startChar": 0,
        "endLine": 365,
        "endChar": 7
      },
      "revId": "159c684d4f89eea3e0b39e6864e6794b05c1453e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_369eb723",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-04T17:51:57Z",
      "side": 0,
      "message": "I think that\u0027s better as people will be relying on this behaviour.",
      "parentUuid": "8497f201_d683d3cc",
      "range": {
        "startLine": 351,
        "startChar": 0,
        "endLine": 365,
        "endChar": 7
      },
      "revId": "159c684d4f89eea3e0b39e6864e6794b05c1453e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_e92950ca",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 5001
      },
      "writtenOn": "2015-09-04T19:28:53Z",
      "side": 0,
      "message": "Yes, basically we need to continue to test that passing/returning small longs can work as is.\n\nmaybe testSmallLongs()\n\nShould we put in a test that fails if a returned long to JS is a Big one? If would be nice if there was a \u0027checked mode\u0027 that threw an exception or warning if a JsInterop method ever tried to return a Big long, or if a JMethodCall ever tried to invoke something with a Big long.  But I suppose people will still see a runtime exception, it just will be a bizarre one, for example:\n\n[1, 2, 3] + [4, 5, 6] \u003d \"[1,2, 34, 5, 6]\"",
      "parentUuid": "8497f201_369eb723",
      "range": {
        "startLine": 351,
        "startChar": 0,
        "endLine": 365,
        "endChar": 7
      },
      "revId": "159c684d4f89eea3e0b39e6864e6794b05c1453e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_c9325428",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-04T19:37:39Z",
      "side": 0,
      "message": "If it is not plus operation, the operation end up with a NaN. It would be nice to have checked mode though that requires us to put bridges again. Maybe we could have annotation on the long types, not specific to jsinerop, and any assignments/returns are in safe range.\n\nFor jsinterop specific, we should/will give a warning when long shows up in the signature.",
      "parentUuid": "8497f201_e92950ca",
      "range": {
        "startLine": 351,
        "startChar": 0,
        "endLine": 365,
        "endChar": 7
      },
      "revId": "159c684d4f89eea3e0b39e6864e6794b05c1453e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}