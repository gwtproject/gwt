{
  "comments": [
    {
      "key": {
        "uuid": "d6ae1193_622047e4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 340,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "We do a check with checkLocalNames and it does check for all hierarchy and we do another check here just at this level. It seems like there is some redundancy but no tests are failing. I\u0027m kind of lost here.",
      "range": {
        "startLine": 340,
        "startChar": 14,
        "endLine": 340,
        "endChar": 97
      },
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_62ce8795",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 358,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "unused",
      "range": {
        "startLine": 358,
        "startChar": 45,
        "endLine": 358,
        "endChar": 49
      },
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_82fc7b9d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 359,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "Wouldn\u0027t this iteration re-print all collision that are reported by parent? I thought you wanted avoid that?",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_e2e297f7",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 370,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "seems like this is kind of late to bail out for this case; kind of confuses.",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_22ed6fe5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 372,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "should this be the member being JsNative vs the type being JsNative?",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_a2017f53",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 378,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "This method seems out of order (placed in between to related methods).",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_e2b0d717",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 581,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "This doesn\u0027t return any property accessors and it is quite confusing as the property accessor name collisions are checked in a different code branch. I will be quite suprised if we are not missing any field vs setter or vice versa collision detection.\n\nBottom line I can\u0027t really assert we are covering everything by just reading the code.",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}