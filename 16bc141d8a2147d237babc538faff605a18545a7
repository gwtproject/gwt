{
  "comments": [
    {
      "key": {
        "uuid": "d6ae1193_2203af27",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 324,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T05:05:54Z",
      "side": 1,
      "message": "It took me a while to understand why this is doing correctly what it is doing always.\n\nMaybe what thing that could help us to simplify this class in general is to track that we printed an error for a member and don\u0027t print it again and do the checks if it is like a flat object. Let\u0027s talk more tomorrow.",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7642c5df_20c4c4c5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 324,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-10-29T20:04:23Z",
      "side": 1,
      "message": "Refactored the code.",
      "parentUuid": "d6ae1193_2203af27",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_622047e4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 340,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "We do a check with checkLocalNames and it does check for all hierarchy and we do another check here just at this level. It seems like there is some redundancy but no tests are failing. I\u0027m kind of lost here.",
      "range": {
        "startLine": 340,
        "startChar": 14,
        "endLine": 340,
        "endChar": 97
      },
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7642c5df_40c1d0b4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 340,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-10-29T20:04:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6ae1193_622047e4",
      "range": {
        "startLine": 340,
        "startChar": 14,
        "endLine": 340,
        "endChar": 97
      },
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_225f2f51",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 340,
      "author": {
        "id": 5305
      },
      "writtenOn": "2015-10-30T08:59:42Z",
      "side": 1,
      "message": "It is not redundant. The local name above does not check JsProperty names.  And the ideas is to only report the error on only one of the methods involved in a conflict. So I choose to report it on the first (because these are accumulated by name and subclasses before supers, only one of the paths will be satisfied.\n\nIt felt bad to have some property checks here and some with the local names.",
      "parentUuid": "d6ae1193_622047e4",
      "range": {
        "startLine": 340,
        "startChar": 14,
        "endLine": 340,
        "endChar": 97
      },
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_62ce8795",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 358,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "unused",
      "range": {
        "startLine": 358,
        "startChar": 45,
        "endLine": 358,
        "endChar": 49
      },
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7642c5df_e0aedc07",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 358,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-10-29T20:04:23Z",
      "side": 1,
      "message": "now it is.",
      "parentUuid": "d6ae1193_62ce8795",
      "range": {
        "startLine": 358,
        "startChar": 45,
        "endLine": 358,
        "endChar": 49
      },
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_82fc7b9d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 359,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "Wouldn\u0027t this iteration re-print all collision that are reported by parent? I thought you wanted avoid that?",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7642c5df_00b42854",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 359,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-10-29T20:04:23Z",
      "side": 1,
      "message": "Fixed.",
      "parentUuid": "d6ae1193_82fc7b9d",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_422d03cb",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 359,
      "author": {
        "id": 5305
      },
      "writtenOn": "2015-10-30T08:59:42Z",
      "side": 1,
      "message": "Missing an escape clause. Should bail out at line 367 if member.getEnclosingType() !\u003d type",
      "parentUuid": "d6ae1193_82fc7b9d",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_e2e297f7",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 370,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "seems like this is kind of late to bail out for this case; kind of confuses.",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_a22c1fce",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 370,
      "author": {
        "id": 5305
      },
      "writtenOn": "2015-10-30T08:59:42Z",
      "side": 1,
      "message": "I don\u0027t think it is too late, all names that are taken by a member of a native jstype will bail out here.",
      "parentUuid": "d6ae1193_e2e297f7",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_22ed6fe5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 372,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "should this be the member being JsNative vs the type being JsNative?",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_a2017f53",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 378,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "This method seems out of order (placed in between to related methods).",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_e2b0d717",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 581,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:13:42Z",
      "side": 1,
      "message": "This doesn\u0027t return any property accessors and it is quite confusing as the property accessor name collisions are checked in a different code branch. I will be quite suprised if we are not missing any field vs setter or vice versa collision detection.\n\nBottom line I can\u0027t really assert we are covering everything by just reading the code.",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_22064f5f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 581,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:19:09Z",
      "side": 1,
      "message": "I bet this will not fail in following scenario:\n\nA {\n  @JsProperty(\"x\")\n  void getAbc();\n}\n\nB extends A {\n  @JsProperty(\"x\")\n  void getKlm();\n}\n\nI think you started with refactoring the existing code and at the time existing code written there was no way to customize the name, so that was forcing getter to override other getters.\n\nBeing said that, you could still do following which doesn\u0027t override getter but causes conflict:\n\nA {\n  @JsProperty\n  boolean getAbc();\n}\n\nB extends A {\n  @JsProperty\n  boolean isAbc();\n}\n\nThis feels like deja vu. I might already asked for such a test earlier, need to check...",
      "parentUuid": "d6ae1193_e2b0d717",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ae1193_82f2bb97",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JsInteropRestrictionChecker.java",
        "patchSetId": 23
      },
      "lineNbr": 581,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-10-27T04:58:55Z",
      "side": 1,
      "message": "Actually I just saw there is a check for this...",
      "parentUuid": "d6ae1193_22064f5f",
      "revId": "16bc141d8a2147d237babc538faff605a18545a7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}