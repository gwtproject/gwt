{
  "comments": [
    {
      "key": {
        "uuid": "43d246e8_e5de8758",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/CanSetType.java",
        "patchSetId": 14
      },
      "lineNbr": 22,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "Remove. (discussed offline)",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_bcb0a1d0",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/CanSetType.java",
        "patchSetId": 14
      },
      "lineNbr": 22,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_e5de8758",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_85277bde",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JArrayType.java",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "pls add a comment that describes the check here to help the reader.",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_1cd70ded",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JArrayType.java",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_85277bde",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_238567dd",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 393,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "Let\u0027s put back Cloneable/Serializable logic back as we discussed offline.",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_fc37c9ac",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 393,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "I fixed this going through castTriviallySucceeds.",
      "parentUuid": "43d246e8_238567dd",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_c339fb85",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 401,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "inline as we discussed offline.",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_7cdf398e",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 401,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_c339fb85",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_83a533f8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 433,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "move to canCast and also add test that instanceof is optimized in TypeTightenerTest.",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_1cceeddc",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 433,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done in the follow up, and it was actually a correctness issue for cast succeedsTrivially.",
      "parentUuid": "43d246e8_83a533f8",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_5eff24a5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 478,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "remove",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_3cfe51e8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 478,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_5eff24a5",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_9e7fcc26",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 519,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "update the comment",
      "range": {
        "startLine": 516,
        "startChar": 0,
        "endLine": 519,
        "endChar": 52
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_dc67654e",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 519,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_9e7fcc26",
      "range": {
        "startLine": 516,
        "startChar": 0,
        "endLine": 519,
        "endChar": 52
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_7e43081f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 529,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "remove line",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_1c726d0f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 529,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_7e43081f",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_7e8468a6",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 542,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "A v A \u003d A",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_5c5d157f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 542,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_7e8468a6",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_7e6d4874",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 559,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "comment:\n\n // We should not have any analysis properties from this point forward.",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237f124e_353fe839",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 559,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-04-09T01:15:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_7e6d4874",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_3ee5804c",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 593,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "This is actually handled earlier. Perhaps change it like this:\n\n\n    JInterfaceType interfaceType \u003d thisType instanceof JInterfaceType ? (JInterfaceType) thisType :\n        (thatType instanceof JInterfaceType ? (JInterfaceType) thatType : null);\n\n    JReferenceType nonInterfaceType \u003d interfaceType \u003d\u003d thisType ? thatType : thisType;\n\n    // See if the class or the array is castable to the interface type.\n    if (interfaceType !\u003d null \u0026\u0026 typeOracle.castSucceedsTrivially(nonInterfaceType, interfaceType)) {\n      return interfaceType;\n    }\n\n\n    // unrelated: the best commonality can be Object\n    return typeJavaLangObject;",
      "range": {
        "startLine": 593,
        "startChar": 15,
        "endLine": 593,
        "endChar": 45
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_972bf6ab",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 593,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_3ee5804c",
      "range": {
        "startLine": 593,
        "startChar": 15,
        "endLine": 593,
        "endChar": 45
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_19377615",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 628,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "We don\u0027t have array of analysis type, right? (IIRC, we can only have analyze type decorator for array.)",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_5747ae7f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 628,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "That is what the comment (which was previously there) is trying to say I believe. Let me rephrase it.",
      "parentUuid": "43d246e8_19377615",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_7927a2df",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 642,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "isn\u0027t redundant?",
      "range": {
        "startLine": 638,
        "startChar": 0,
        "endLine": 642,
        "endChar": 5
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_1729a67f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 642,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "No. The previous \"line\" generalizes the leaf type (which is the non array type) not the element type. Before here we are only considering arrays with same dimensions.\n\nThis block generalized arrays of different dimensions, which could be handled generically by generalizeType,\n\nMaybe the first this should be if one is trivially castable to the other, then we can do more precise generalization if not.",
      "parentUuid": "43d246e8_7927a2df",
      "range": {
        "startLine": 638,
        "startChar": 0,
        "endLine": 642,
        "endChar": 5
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_f9f4f2a1",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 660,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "What about IParent, IChild1, IChild2 scenario?",
      "range": {
        "startLine": 648,
        "startChar": 0,
        "endLine": 660,
        "endChar": 3
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_f75ec2fc",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 660,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "This is not handled precisely. The main reason is that the interface \"hierarchy\" is actually a graph (a DAG) not a tree, and there might more than one single general type. Object is always a valid answer.\n\nLet\u0027s discuss this issue and maybe do it in a follow up.",
      "parentUuid": "43d246e8_f9f4f2a1",
      "range": {
        "startLine": 648,
        "startChar": 0,
        "endLine": 660,
        "endChar": 3
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3d89a3c_d38f34f8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 660,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-31T23:28:13Z",
      "side": 1,
      "message": "Object is always valid answers because it is the most general answer for anything :)\nThis seems like a missed opportunity, let\u0027s follow up on this..",
      "parentUuid": "43308612_f75ec2fc",
      "range": {
        "startLine": 648,
        "startChar": 0,
        "endLine": 660,
        "endChar": 3
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237f124e_b5cf78dd",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 14
      },
      "lineNbr": 660,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-04-09T01:15:06Z",
      "side": 1,
      "message": "Correct. That was the functionality before. Let\u0027s leave the potential improvement as a follow up if we see the need (e.g. in collections)",
      "parentUuid": "e3d89a3c_d38f34f8",
      "range": {
        "startLine": 648,
        "startChar": 0,
        "endLine": 660,
        "endChar": 3
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_199c5641",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JReferenceType.java",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "underlyingType",
      "range": {
        "startLine": 135,
        "startChar": 39,
        "endLine": 135,
        "endChar": 63
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_f7e36246",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JReferenceType.java",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_199c5641",
      "range": {
        "startLine": 135,
        "startChar": 39,
        "endLine": 135,
        "endChar": 63
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_39391aa1",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JReferenceType.java",
        "patchSetId": 14
      },
      "lineNbr": 187,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "nit: see go/java-practices/enums and go/java-practices/impossible\nfollowing seems better.\n\n    case NULLABLE_EXACT:\n    case NULLABLE_NOT_EXACT:\n      return this;\n  }\n  throw new AssertionError();\n\nor \n\n    case NULLABLE_EXACT:\n    case NULLABLE_NOT_EXACT:\n      return this;\n    default:\n      throw new AssertionError();",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_b7ac3a1a",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JReferenceType.java",
        "patchSetId": 14
      },
      "lineNbr": 187,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_39391aa1",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_99db66ee",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JReferenceType.java",
        "patchSetId": 14
      },
      "lineNbr": 250,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "I\u0027m not sure where this is used but I guess shouldn\u0027t be effected by analysis types?",
      "range": {
        "startLine": 248,
        "startChar": 0,
        "endLine": 250,
        "endChar": 3
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_d73e1e3c",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JReferenceType.java",
        "patchSetId": 14
      },
      "lineNbr": 250,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "For some reason in the AST stored after GwtAstBuilder there might be analysis types. This code seems to guarantee they they are stitched correctly and non nullness in preserved.",
      "parentUuid": "43d246e8_99db66ee",
      "range": {
        "startLine": 248,
        "startChar": 0,
        "endLine": 250,
        "endChar": 3
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_19ef76b2",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JReferenceType.java",
        "patchSetId": 14
      },
      "lineNbr": 252,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "private?",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_77f8f2f8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JReferenceType.java",
        "patchSetId": 14
      },
      "lineNbr": 252,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "It is overridden by the null type instance.",
      "parentUuid": "43d246e8_19ef76b2",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_990926de",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 699,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "Do we have unit tests for this?",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_37794af7",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 699,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Yes in JjsTypeTest, not sure about the coverage though.",
      "parentUuid": "43d246e8_990926de",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_d9232e5a",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 709,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "Perhaps I\u0027m wrong but isn\u0027t this simplified by doing this recursive and removing one array dim at a time?",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_977e56dd",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 709,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Well, I don\u0027t think it will be simplified that much as you would have to account for arrays of primitive types anyway.",
      "parentUuid": "43d246e8_d9232e5a",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_59fade3d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 731,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "is this possible?",
      "range": {
        "startLine": 731,
        "startChar": 11,
        "endLine": 731,
        "endChar": 42
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_09d50a3a",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 731,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Yes. The null type is not really an analysis type in some sense. If a type is pruned, references to it will become references to the null type. \n\nAlthough the assertion that int[][] -\u003e null[] should be true is dubious.",
      "parentUuid": "43d246e8_59fade3d",
      "range": {
        "startLine": 731,
        "startChar": 11,
        "endLine": 731,
        "endChar": 42
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3d89a3c_e8b9a75a",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 731,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-31T23:28:13Z",
      "side": 1,
      "message": "Seems like you also think this is not good? let\u0027s take a look at an example:\n\n A[] a; // A is never instantiated\n a \u003d new int[10]; // succeeds because cast is removed??\n\nSimilarly non-array example seems like behaves bad:\n\n A a; // A is never instantiated\n a \u003d new B(); // succeeds !?\n\nAnyway, we can keep the behavior unchanged in this patch but seems like a bug we need to fix.",
      "parentUuid": "43308612_09d50a3a",
      "range": {
        "startLine": 731,
        "startChar": 11,
        "endLine": 731,
        "endChar": 42
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237f124e_1017527f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 731,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-04-09T01:15:06Z",
      "side": 1,
      "message": "Although by design the above snippets can not appear.\n\nSay you have\n\n  A[] a;\n  a \u003d new B[10];\n\nwhere B is a subclass of A. If B is instantiated then A is also considered instantiated. So lets look at the case where A and B are not instantiated (the other case A instantiated and be not instantiated is covered elsewhere).\n\nIn the relevant case the code will be transformed as\n\n  null[] a;\n  a \u003d new null[10];\n\nThe the seconds snippet also can not occur because B is instantiated hence A is also considered instantiated.",
      "parentUuid": "e3d89a3c_e8b9a75a",
      "range": {
        "startLine": 731,
        "startChar": 11,
        "endLine": 731,
        "endChar": 42
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_720fbfdf",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 1098,
      "author": {
        "id": 5445
      },
      "writtenOn": "2015-03-27T22:10:52Z",
      "side": 1,
      "message": "[info] Line matches the illegal pattern \u0027more than one blank line\u0027.",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_c9b042d2",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 14
      },
      "lineNbr": 1098,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_720fbfdf",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_b9766a55",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ArrayNormalizer.java",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "// There is no need to check as the static check already proved the cast is correct.",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_09d4eae4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ArrayNormalizer.java",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_b9766a55",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_19c216d6",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JjsUtils.java",
        "patchSetId": 14
      },
      "lineNbr": 245,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "is it?",
      "range": {
        "startLine": 245,
        "startChar": 36,
        "endLine": 245,
        "endChar": 82
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_29b44eb2",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JjsUtils.java",
        "patchSetId": 14
      },
      "lineNbr": 245,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Ahh, outdated comment.",
      "parentUuid": "43d246e8_19c216d6",
      "range": {
        "startLine": 245,
        "startChar": 36,
        "endLine": 245,
        "endChar": 82
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_991366df",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 436,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "Removed comments seemed useful?",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_f9d2b287",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 508,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "nit: shouldn\u0027t this later replaced by another pass that optimized null checks based on canBeNull?",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_49739268",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 508,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Yep. It is actually done in DeadCodeElimination. I\u0027ll do a small patch that removes this.",
      "parentUuid": "43d246e8_f9d2b287",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_12443309",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 629,
      "author": {
        "id": 5445
      },
      "writtenOn": "2015-03-27T22:10:52Z",
      "side": 1,
      "message": "[info] Line matches the illegal pattern \u0027more than one blank line\u0027.",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_e981c697",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 629,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_12443309",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_197a16eb",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 724,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "Seem like cannot be null",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_29ba8e4e",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 724,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Actually the whole point of getAssigmentsIfValid is to return null when there are incompatibilities (e.g. assigning a primitive type without the cast).",
      "parentUuid": "43d246e8_197a16eb",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3d89a3c_934ccc50",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 724,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-31T23:28:13Z",
      "side": 1,
      "message": "I see, I didn\u0027t see the return null below.\n\nIn the example you describe (assigning a primitive without a cast), is that even possible? I mean we should always have the boxing code generated by JDT in place, right? Anyway if you are sure about this, it would be a good idea to document the scenario in the comments below.",
      "parentUuid": "43308612_29ba8e4e",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237f124e_90bb62b1",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 724,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-04-09T01:15:06Z",
      "side": 1,
      "message": "This only happens in compiler generated code, which we could probably change. E.g. Class.createForClass receives the type id as a JavaScriptObject. The compiler depending on the mode can pass an int or a string. \n\nThe intention here is NOT to touch that parameter so no cast, no boxing/unboxing. This is generated directly in the AST by ImplementClassLiteralsAsFields. Probably more correct would be to overload the methods and generate the right code.\n\nI\u0027ll document this here and leave the fix for a followup.",
      "parentUuid": "e3d89a3c_934ccc50",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_796a4217",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 738,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 738,
        "startChar": 52,
        "endLine": 738,
        "endChar": 71
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_49aa72fa",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 738,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_796a4217",
      "range": {
        "startLine": 738,
        "startChar": 52,
        "endLine": 738,
        "endChar": 71
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_994e06c4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 782,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "update doc",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_4907129f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 782,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_994e06c4",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_3247f70f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 798,
      "author": {
        "id": 5445
      },
      "writtenOn": "2015-03-27T22:10:52Z",
      "side": 1,
      "message": "[info] Line matches the illegal pattern \u0027more than one blank line\u0027.",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237f124e_905fe2f8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 798,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-04-09T01:15:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d246e8_3247f70f",
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d246e8_59441ea3",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 803,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-03-28T02:09:40Z",
      "side": 1,
      "message": "Is this possible?",
      "range": {
        "startLine": 801,
        "startChar": 0,
        "endLine": 803,
        "endChar": 5
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43308612_692bf6fe",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 14
      },
      "lineNbr": 803,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-03-31T18:20:47Z",
      "side": 1,
      "message": "In general, yes. And I think from the callers it might be.",
      "parentUuid": "43d246e8_59441ea3",
      "range": {
        "startLine": 801,
        "startChar": 0,
        "endLine": 803,
        "endChar": 5
      },
      "revId": "179c7f7f0602349fb9c063c6ff9473aee71606c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}