{
  "comments": [
    {
      "key": {
        "uuid": "1ceed1c6_2db58dd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 27,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-03-08T08:35:01Z",
      "side": 1,
      "message": "[warning] Commit message lines should be 72 characters or fewer.",
      "revId": "1bae478cc9e8d111bb7c36e1b58a0aa47c0a6f4d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2ba1c2_493d61ef",
        "filename": "dev/core/src/com/google/gwt/dev/javac/CompilationUnitTypeOracleUpdater.java",
        "patchSetId": 22
      },
      "lineNbr": 755,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-03-08T16:17:43Z",
      "side": 1,
      "message": "It is surprising to me that primitive types have class literals; but I just found out that there is also void.class. Is void.class not also needed here?\n\nCan you elaborate on why JsInterface apt processor made this necessary?",
      "range": {
        "startLine": 747,
        "startChar": 0,
        "endLine": 755,
        "endChar": 3
      },
      "revId": "1bae478cc9e8d111bb7c36e1b58a0aa47c0a6f4d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2ba1c2_6c04b3e2",
        "filename": "dev/core/src/com/google/gwt/dev/javac/CompilationUnitTypeOracleUpdater.java",
        "patchSetId": 22
      },
      "lineNbr": 755,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-03-14T22:15:02Z",
      "side": 1,
      "message": "Not the JsInterface apt processor. Any Java annotation that JDT sees which has a parameter which accepts a class literal will fail with primitives, e.g. anything like @Foo(int.class)  This is thus a general compiler bug fix.\n\nI will add void.",
      "parentUuid": "9c2ba1c2_493d61ef",
      "revId": "1bae478cc9e8d111bb7c36e1b58a0aa47c0a6f4d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2ba1c2_09436984",
        "filename": "dev/core/src/com/google/gwt/dev/javac/testing/impl/JavaResourceBase.java",
        "patchSetId": 22
      },
      "lineNbr": 349,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-03-08T16:17:43Z",
      "side": 1,
      "message": "Maybe move all these to JavaAstConstructor? JavaResourceBase seem to have mocks for standard Jre classes where JAvaAstConstructor has for intinsic and gwt library classes.\n\nWe probably should rename JavaResourceBase \u003d\u003e JreResourcelMocks and JavaAstConstructor \u003d\u003eGwtResourceMocks.",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 349,
        "endChar": 0
      },
      "revId": "1bae478cc9e8d111bb7c36e1b58a0aa47c0a6f4d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2ba1c2_2cd91b9b",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 22
      },
      "lineNbr": 47,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-03-08T16:17:43Z",
      "side": 1,
      "message": "Use Set in the field declaration.",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "1bae478cc9e8d111bb7c36e1b58a0aa47c0a6f4d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2ba1c2_0cded782",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 22
      },
      "lineNbr": 1519,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-03-08T16:17:43Z",
      "side": 1,
      "message": "Update comment",
      "range": {
        "startLine": 1519,
        "startChar": 63,
        "endLine": 1519,
        "endChar": 73
      },
      "revId": "1bae478cc9e8d111bb7c36e1b58a0aa47c0a6f4d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2ba1c2_6ce31347",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 22
      },
      "lineNbr": 1538,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-03-08T16:17:43Z",
      "side": 1,
      "message": "is the intention here to return a noop? Either return null and handle at caller site or return and empty mutliexpression.",
      "range": {
        "startLine": 1538,
        "startChar": 15,
        "endLine": 1538,
        "endChar": 60
      },
      "revId": "1bae478cc9e8d111bb7c36e1b58a0aa47c0a6f4d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}