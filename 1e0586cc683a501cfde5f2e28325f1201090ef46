{
  "comments": [
    {
      "key": {
        "uuid": "0fabf157_d9254390",
        "filename": "user/src/com/google/gwt/animation/client/AnimationSchedulerImplStandard.java",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 5030
      },
      "writtenOn": "2014-02-12T10:17:59Z",
      "side": 1,
      "message": "\u0027time\u0027 is a DOMHighResTimeStamp, and we haven\u0027t changed the meaning of the argument to the AnimationCallback. This breaks our Animation class. See issue 8570.\n\nI think we should first fix this code to use Duration.currentTimeMillis() (or JsDate.now()), and then later we can try to move to high-res timestamps; but I\u0027m sure that second step will break people (like it just broke our own code)",
      "revId": "1e0586cc683a501cfde5f2e28325f1201090ef46",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f405174_31083844",
        "filename": "user/src/com/google/gwt/animation/client/AnimationSchedulerImplStandard.java",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 5385
      },
      "writtenOn": "2014-02-12T13:12:10Z",
      "side": 1,
      "message": "How about making the polyfill relative as well e.g. getting Duration.currentTimeMillis() once for all animations and dispatch the delta\n\nI think in the long term we want to be as close to the browser API as possible, but changing these semantics right now might be tough. I would rather fix up dialog and stick with the \"right\" future APIs, any takers?",
      "parentUuid": "0fabf157_d9254390",
      "revId": "1e0586cc683a501cfde5f2e28325f1201090ef46",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3ec9eb_139c1c9d",
        "filename": "user/src/com/google/gwt/animation/client/AnimationSchedulerImplStandard.java",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 5030
      },
      "writtenOn": "2014-02-12T13:41:05Z",
      "side": 1,
      "message": "OK, let\u0027s do that then.\n\nAnimationScheduler is only used in Animation right now, which is what\u0027s broken and can easily be fixed (just ignore the value passed to the AnimationCallback and use Duration.currentTimeMillis() instead).\n\nSo maybe I\u0027ll fix Animation first, tweaking the AnimationCallback javadoc too; then maybe I\u0027ll change the polyfill (but I don\u0027t think it actually even needs to change; I have to think a bit more about it)",
      "parentUuid": "0f405174_31083844",
      "revId": "1e0586cc683a501cfde5f2e28325f1201090ef46",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fabf157_d978e309",
        "filename": "user/src/com/google/gwt/animation/client/AnimationSchedulerImplStandard.java",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 5030
      },
      "writtenOn": "2014-02-13T10:23:17Z",
      "side": 1,
      "message": "Gosh! It\u0027s not as easy as it seemed! The problem mostly is because of the AnimationTest: it passes specific timestamps to the callback, but the fix to Animation is to actually ignore them, so we need to refactor things a bit.\n\nI was thinking of adding a getCurrentTimeStamp() or similar to AnimationScheduler that would return $wnd.performance.now() or currentTimeMillis() depending on the implementation, and could easily be faked in StubAnimationScheduler, but now the problem is that Safari doesn\u0027t implement performance.now(), and I don\u0027t think we want it to fallback to the Timer implementation (we could also use currentTimeMillis in AnimationSchedulerImplStandard instead of the high-res timestamp when performance.now isn\u0027t available, but it somehow defeats our efforts to change the AnimationCallback semantics)\n\nAnyway: https://gwt-review.googlesource.com/6400 and https://gwt-review.googlesource.com/6401",
      "parentUuid": "4f3ec9eb_139c1c9d",
      "revId": "1e0586cc683a501cfde5f2e28325f1201090ef46",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}