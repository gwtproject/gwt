{
  "comments": [
    {
      "key": {
        "uuid": "df2c3030_e840ee6a",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 2
      },
      "lineNbr": 2807,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-06-06T00:16:36Z",
      "side": 1,
      "message": "Is it only Object, or could you also cast from Number?\ne.g.\n\nNumber x \u003d new Integer(5);\nint y \u003d (int)x?",
      "revId": "20d8c465caa6c481c0a00d92920593bc601ba7ea",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f81844b_15bd5650",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 2
      },
      "lineNbr": 2807,
      "author": {
        "id": 5030
      },
      "writtenOn": "2014-06-06T01:28:22Z",
      "side": 1,
      "message": "\u003e The type Object means any reference type other than the eight wrapper classes Boolean, Byte, Short, Character, Integer, Long, Float, Double.\n\nSource: http://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.5",
      "parentUuid": "df2c3030_e840ee6a",
      "revId": "20d8c465caa6c481c0a00d92920593bc601ba7ea",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2c3030_e37a5095",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 2
      },
      "lineNbr": 2807,
      "author": {
        "id": 5570
      },
      "writtenOn": "2014-06-06T16:47:14Z",
      "side": 1,
      "message": "I\u0027m more worried that the check here is for compileTypeId \u003d\u003d TypeIds.T_JavaLangObject\n\nI\u0027d want to see a test to ensure that something like\n\nComparable x \u003d 5;  would work.\n\nI don\u0027t have JDT semantics memorized, but would implicitConversion \u0026 TypeIds.COMPILE_TYPE_MASKreturn T_JavaLangObject for any reference type (e.g. Comparable, Serializable)?",
      "parentUuid": "7f81844b_15bd5650",
      "revId": "20d8c465caa6c481c0a00d92920593bc601ba7ea",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1b2808_12579000",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 2
      },
      "lineNbr": 2807,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-06-06T17:24:28Z",
      "side": 1,
      "message": "Actually Java 7 JDT rejects all but cast from Object to primitive types, hence the second byte of implicit conversion only provides T_JavaLangObject.\n\nThat was fixed in newer versions of the JDT so we will have to revisit this topic after the upgrade.\n\nI changed the code defensibly so that will probably work in newer JDTs by always inserting a cast for reference types. But looking at newer JDTs TypeIds.java, only T_JavaLangObject is there as a reference type (appart from T_null and T_JavaLangString), so I am guessing that any other reference type will be represented as Object in this context.",
      "parentUuid": "df2c3030_e37a5095",
      "revId": "20d8c465caa6c481c0a00d92920593bc601ba7ea",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}