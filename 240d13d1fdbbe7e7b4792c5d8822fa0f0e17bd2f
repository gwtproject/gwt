{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cffc214d_b555b73f",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 8835
      },
      "writtenOn": "2021-03-06T06:57:19Z",
      "side": 1,
      "message": "If I understand correctly the bug description this method *always* returns canonical form of NaN. So it implies that doubleToLongBits() is also boken on Firefox. Could you clarify ?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 57
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93d114ee_ac97587b",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 5110
      },
      "writtenOn": "2021-03-06T07:13:29Z",
      "side": 1,
      "message": "The difference between the 2 methods is; doubleToLongBits already needs to return the canonical form of NaN so it has the correct behavior in Firefox.",
      "parentUuid": "cffc214d_b555b73f",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 57
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04cc155e_8e1c4dcd",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 5105
      },
      "writtenOn": "2021-03-06T08:40:24Z",
      "side": 1,
      "message": "I see doubleToRawLongBits is actually a public api of Double that was NOT previously implemented by our JRE.\n\nChange the description to say \n\n// This method is kept private due to a broken implementation in Firefox.\n\nOr something similar, I found the comment a bit confusing.",
      "parentUuid": "93d114ee_ac97587b",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 57
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ec20cb7_6dff41da",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 5110
      },
      "writtenOn": "2021-03-06T09:23:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04cc155e_8e1c4dcd",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 57
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1742f9c_a05e1835",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/JsUtils.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 5105
      },
      "writtenOn": "2021-03-06T08:40:24Z",
      "side": 1,
      "message": "This should not be necessary \u003c\u003c 32 should already leave the 32 lsbs as 0.",
      "range": {
        "startLine": 127,
        "startChar": 51,
        "endLine": 127,
        "endChar": 73
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e4ab513_f5f7c4ee",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/JsUtils.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 5110
      },
      "writtenOn": "2021-03-06T09:23:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1742f9c_a05e1835",
      "range": {
        "startLine": 127,
        "startChar": 51,
        "endLine": 127,
        "endChar": 73
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98d4c062_80be6a22",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/JsUtils.java",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 5105
      },
      "writtenOn": "2021-03-06T08:40:24Z",
      "side": 1,
      "message": "Hmm. This is necessary because LongUtils.fromInt interprets the int as signed, right?",
      "range": {
        "startLine": 128,
        "startChar": 36,
        "endLine": 128,
        "endChar": 58
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdeec28e_a68d5426",
        "filename": "user/super/com/google/gwt/emul/javaemul/internal/JsUtils.java",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 5110
      },
      "writtenOn": "2021-03-06T09:23:56Z",
      "side": 1,
      "message": "You mean casting to long right? Yes that would be signed extension.",
      "parentUuid": "98d4c062_80be6a22",
      "range": {
        "startLine": 128,
        "startChar": 36,
        "endLine": 128,
        "endChar": 58
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29ad29ee_684cd12f",
        "filename": "user/test/com/google/gwt/emultest/java/lang/DoubleTest.java",
        "patchSetId": 2
      },
      "lineNbr": 543,
      "author": {
        "id": 5105
      },
      "writtenOn": "2021-03-06T08:40:24Z",
      "side": 1,
      "message": "how it this broken in firefox? Could you be more specific?\n\nSo doubleToLongBits which relies on doubleToRawLongBits works fine in firefox. So this means that in firefox you are always getting normalized fp values?",
      "range": {
        "startLine": 543,
        "startChar": 5,
        "endLine": 543,
        "endChar": 44
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0e4e060_95aa56eb",
        "filename": "user/test/com/google/gwt/emultest/java/lang/DoubleTest.java",
        "patchSetId": 2
      },
      "lineNbr": 543,
      "author": {
        "id": 5110
      },
      "writtenOn": "2021-03-06T09:23:56Z",
      "side": 1,
      "message": "Yes, updated comment.",
      "parentUuid": "29ad29ee_684cd12f",
      "range": {
        "startLine": 543,
        "startChar": 5,
        "endLine": 543,
        "endChar": 44
      },
      "revId": "240d13d1fdbbe7e7b4792c5d8822fa0f0e17bd2f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    }
  ]
}