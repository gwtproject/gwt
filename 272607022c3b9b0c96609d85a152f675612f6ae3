{
  "comments": [
    {
      "key": {
        "uuid": "9714aa34_dcd441cc",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 24
      },
      "lineNbr": 297,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-13T09:02:01Z",
      "side": 1,
      "message": "I wonder what if \nHashSet::add\nmakes sense to put here?",
      "range": {
        "startLine": 297,
        "startChar": 8,
        "endLine": 297,
        "endChar": 23
      },
      "revId": "272607022c3b9b0c96609d85a152f675612f6ae3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1239a8b4_9e1c3b02",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 24
      },
      "lineNbr": 297,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-05-17T02:23:49Z",
      "side": 1,
      "message": "As we can see from #9333, it appears to already attempt to specialize. Its a good thought though, I\u0027ll change it.",
      "parentUuid": "9714aa34_dcd441cc",
      "range": {
        "startLine": 297,
        "startChar": 8,
        "endLine": 297,
        "endChar": 23
      },
      "revId": "272607022c3b9b0c96609d85a152f675612f6ae3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1239a8b4_37a35cc6",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 24
      },
      "lineNbr": 297,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-05-17T05:03:15Z",
      "side": 1,
      "message": "Done, sort of. Turns out, you can\u0027t say HashSet::add if you want the no-finisher version of Collector.of, since the A in Collector\u003cT, A, R\u003e for this method is forced to be R (aka Set\u003cT\u003e).\n\nAlternatively, provide an identity finisher, though Function.identity() isn\u0027t acceptable to Java itself:\n\n\u003e Error:(99, 34) java: incompatible types: inferred type does not conform to equality constraint(s)\n    inferred: java.util.Set\u003cT\u003e\n    equality constraints(s): java.util.Set\u003cT\u003e,java.util.HashSet\u003cT\u003e\n\nNor does Function.\u003cSet\u003cT\u003e\u003eidentity() or \u003cHashSet\u003cT\u003e\u003e work:\n\n\u003e Error: java: incompatible types: java.util.function.Function\u003cjava.util.HashSet,java.util.HashSet\u003e cannot be converted to java.util.function.Function\u003cjava.util.HashSet\u003cT\u003e,java.util.Set\u003cT\u003e\u003e",
      "parentUuid": "1239a8b4_9e1c3b02",
      "range": {
        "startLine": 297,
        "startChar": 8,
        "endLine": 297,
        "endChar": 23
      },
      "revId": "272607022c3b9b0c96609d85a152f675612f6ae3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9714aa34_fcd705ce",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 24
      },
      "lineNbr": 305,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-13T09:02:01Z",
      "side": 1,
      "message": "!contains",
      "revId": "272607022c3b9b0c96609d85a152f675612f6ae3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1239a8b4_7e1f8ff6",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 24
      },
      "lineNbr": 305,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-05-17T02:23:49Z",
      "side": 1,
      "message": "Whoa, dumb, nice catch.",
      "parentUuid": "9714aa34_fcd705ce",
      "revId": "272607022c3b9b0c96609d85a152f675612f6ae3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1239a8b4_77ade4ad",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 24
      },
      "lineNbr": 305,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-05-17T05:03:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1239a8b4_7e1f8ff6",
      "revId": "272607022c3b9b0c96609d85a152f675612f6ae3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77dc96fd_508ccc3f",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 24
      },
      "lineNbr": 311,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-05-17T00:47:16Z",
      "side": 1,
      "message": "Maybe I miss something but why can this method safely assume that characteristics of size \u003d\u003d 1 will contain IDENTIFY_FINISH and not one of the other two constants? Looks like a bug to me.",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 311,
        "endChar": 5
      },
      "revId": "272607022c3b9b0c96609d85a152f675612f6ae3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1239a8b4_97425050",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 24
      },
      "lineNbr": 311,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-05-17T02:23:49Z",
      "side": 1,
      "message": "if I fix the first if (see Andrei\u0027s comment), then this makes sense, since if characteristics doesn\u0027t contain IDENTITY_FINISH, then we already returned. By the time we get here, if size is one, then we are planning on removing the only option anyway.",
      "parentUuid": "77dc96fd_508ccc3f",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 311,
        "endChar": 5
      },
      "revId": "272607022c3b9b0c96609d85a152f675612f6ae3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}