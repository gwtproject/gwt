{
  "comments": [
    {
      "key": {
        "uuid": "4e25349f_3640f883",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:19:30Z",
      "side": 1,
      "message": "EnumSet.copyOf(Arrays.asList(characteristics)) ?\ninstead of creating HashSet in the collectorimpl constructor.\nyou could also remove the first constructor",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_4bb9dda1",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "That\u0027s (approx) what it used to do, but the suggestion was made to not run it twice",
      "parentUuid": "4e25349f_3640f883",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_aba8914e",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "Okay, try out this implementation - the array is checked for empty or 1 value, and uses tbroyer\u0027s suggestion of EnumSet, and all three cases are immutable on creation. I\u0027m not sure there is a downside of multiple ctors as long as there are multiple methods that can\u0027t trivially be inlined into each other.",
      "parentUuid": "4e25349f_3640f883",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_1645fc93",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 78,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:19:30Z",
      "side": 1,
      "message": "Does it make this class public visible because you put CollectorImpl into public interface?",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_eb9e892d",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 78,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "Technically it does, however without a Collector.CollectorImpl in the jdk (since this is super source), no one will be able to reference it, right?",
      "parentUuid": "4e25349f_1645fc93",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e89420c3_21632a17",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 78,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-04-25T13:47:01Z",
      "side": 1,
      "message": "Yeah, but everyone tries to not expose classes if possible so maybe move it as a separate class?",
      "parentUuid": "085974e9_eb9e892d",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_f64960ae",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:19:30Z",
      "side": 1,
      "message": "private?",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_0b9c4533",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e25349f_f64960ae",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_d625449f",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T14:05:09Z",
      "side": 1,
      "message": "It would be good to create Collections.emptySet() if characteristics.length \u003d\u003d 0. Such collector are used in Collectors",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_cba5cd76",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e25349f_d625449f",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_d646649e",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 126,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:19:30Z",
      "side": 1,
      "message": "I think it makes sense to make it immutable right in the constructor",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_6bd379dc",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collector.java",
        "patchSetId": 10
      },
      "lineNbr": 126,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e25349f_d646649e",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f11b2d59_4374c699",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 55,
      "author": {
        "id": 7220
      },
      "writtenOn": "2016-03-30T22:09:29Z",
      "side": 1,
      "message": "changing this to (stats) -\u003e stats.getAverage() would make this easier to read, in my opinion ;).",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_47723374",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 55,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "The \"dumb\" part is building the whole summary stats just for the average. \n\nI disagree about the method references personally (and why have them at all if the consensus is that a -\u003e a.foo() is better?). They can\u0027t always be used, but I think that I can make this whole method here clearer with an .collectingAndThen() call like the summing* methods - will attempt in my revision.",
      "parentUuid": "f11b2d59_4374c699",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_361918c2",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:19:30Z",
      "side": 1,
      "message": "EnumSet.copyOf",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_8bd835f6",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e25349f_361918c2",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_b6a52877",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:19:30Z",
      "side": 1,
      "message": "0L",
      "range": {
        "startLine": 100,
        "startChar": 20,
        "endLine": 100,
        "endChar": 28
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae14f033_190acb03",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:19:30Z",
      "side": 1,
      "message": "Long::sum ?",
      "range": {
        "startLine": 100,
        "startChar": 48,
        "endLine": 100,
        "endChar": 77
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_96a22c6b",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:19:30Z",
      "side": 1,
      "message": "1L",
      "range": {
        "startLine": 100,
        "startChar": 38,
        "endLine": 100,
        "endChar": 46
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_766790f4",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:58:17Z",
      "side": 1,
      "message": "Btw, what about \u0027 return summingLong(e -\u003e 1L)\u0027 ?",
      "parentUuid": "ae14f033_190acb03",
      "range": {
        "startLine": 100,
        "startChar": 48,
        "endLine": 100,
        "endChar": 77
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_2bcd8135",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "summingLong takes the side trail of computing the other summary stats (for now, subject to optimization), I was going for simplest+readable for the first impl.\n\nOther three: Done.",
      "parentUuid": "4e25349f_766790f4",
      "range": {
        "startLine": 100,
        "startChar": 48,
        "endLine": 100,
        "endChar": 77
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e89420c3_e116a290",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 100,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-04-25T13:47:01Z",
      "side": 1,
      "message": "Then please add summingLong impl as TODO",
      "parentUuid": "085974e9_2bcd8135",
      "range": {
        "startLine": 100,
        "startChar": 48,
        "endLine": 100,
        "endChar": 77
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e89420c3_417756d6",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 115,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-04-25T13:47:01Z",
      "side": 1,
      "message": "mapFactory?",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 115,
        "endChar": 20
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e89420c3_618452ff",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 125,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-04-25T13:47:01Z",
      "side": 1,
      "message": "I guess here we should use downstream.accumulator and downstream.supplier",
      "range": {
        "startLine": 116,
        "startChar": 8,
        "endLine": 125,
        "endChar": 9
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e89420c3_217a4abf",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 136,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-04-25T13:47:01Z",
      "side": 1,
      "message": "I guess it should be Map.merge with downstream.combiner ?",
      "range": {
        "startLine": 126,
        "startChar": 8,
        "endLine": 136,
        "endChar": 9
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_16b73cb4",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 237,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-03-31T11:19:30Z",
      "side": 1,
      "message": "can we reuse array u1 here? I mean can we store the result there?",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "085974e9_67d40f65",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 237,
      "author": {
        "id": 5130
      },
      "writtenOn": "2016-04-24T23:38:00Z",
      "side": 1,
      "message": "Probably doable - as with in the last review from @t.broyer, I tried to keep these methods as functional as possible, never mutating inputs.\n\n(and Done, all tests happy)",
      "parentUuid": "4e25349f_16b73cb4",
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e89420c3_e18f821c",
        "filename": "user/super/com/google/gwt/emul/java/util/stream/Collectors.java",
        "patchSetId": 10
      },
      "lineNbr": 329,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-04-25T13:47:01Z",
      "side": 1,
      "message": "I\u0027d rebase on top of Map.merge pull request because your code does not follow javadoc spec for this method.",
      "range": {
        "startLine": 329,
        "startChar": 12,
        "endLine": 329,
        "endChar": 65
      },
      "revId": "2bdb11cc128c928adf799e89b7e36abe843e236c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}