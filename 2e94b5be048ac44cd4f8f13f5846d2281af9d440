{
  "comments": [
    {
      "key": {
        "uuid": "6732cdd4_6d153150",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Array.java",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-09-17T17:28:36Z",
      "side": 1,
      "message": "Will patching Array.prototype like this have consequences for loading multiple GWT modules in a single page?  Seems like maybe CrossSiteIframeLinker would still be okay because each module will run in a separate iframe and get its own Array.prototype, but probably not with linkers like SingleScriptLinker?\n\nAlso, if we go this way, then it looks like you can combine initExpandos() and patchArrayPrototype() into a single function, and eliminate the expandoNames and expandoValues fields.",
      "revId": "2e94b5be048ac44cd4f8f13f5846d2281af9d440",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44ece779_210aee33",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Array.java",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 5130
      },
      "writtenOn": "2013-09-17T21:31:55Z",
      "side": 1,
      "message": "If this is a problem, then com.google.gwt.core.client.impl.UnloadSupportEnabled.exportUnloadModule() is also a problem:\n\n    String.prototype.@java.lang.Object::___clazz \u003d null;\n\nLikewise, whatever sets that ___clazz will be an issue too (I think this is GenerateJavaScriptAST.generateSeedFuncAndPrototype).",
      "parentUuid": "6732cdd4_6d153150",
      "revId": "2e94b5be048ac44cd4f8f13f5846d2281af9d440",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6732cdd4_2d9099da",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Array.java",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-09-17T21:42:01Z",
      "side": 1,
      "message": "Hm, true, though UnloadModule support is disabled by default still.\n\nOkay, I\u0027m reasonably satisfied modifying Array.prototype like this should be okay.",
      "parentUuid": "44ece779_210aee33",
      "revId": "2e94b5be048ac44cd4f8f13f5846d2281af9d440",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "474ea957_f16ae817",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Array.java",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 5105
      },
      "writtenOn": "2013-09-17T14:17:24Z",
      "side": 1,
      "message": "I think turning of checking should be optional maybe tied to -XdisableCastChecking.\n\nIn any case I wouldn\u0027t change the implementation of setCheck but rather where the compiler replaces the array store by a setCheck in ArrayNormalizer.",
      "revId": "2e94b5be048ac44cd4f8f13f5846d2281af9d440",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}