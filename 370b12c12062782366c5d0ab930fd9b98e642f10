{
  "comments": [
    {
      "key": {
        "uuid": "5ac5b75b_3814c5e4",
        "filename": "dev/core/src/com/google/gwt/dev/javac/testing/impl/JavaResourceBase.java",
        "patchSetId": 18
      },
      "lineNbr": 179,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-13T18:32:10Z",
      "side": 1,
      "message": "Maybe add it to getStandardResources.",
      "range": {
        "startLine": 179,
        "startChar": 39,
        "endLine": 179,
        "endChar": 58
      },
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1a7bb5_e0c1beb9",
        "filename": "dev/core/src/com/google/gwt/dev/javac/testing/impl/JavaResourceBase.java",
        "patchSetId": 18
      },
      "lineNbr": 179,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-14T05:44:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac5b75b_3814c5e4",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac5b75b_385e85bf",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 18
      },
      "lineNbr": 1228,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-13T18:32:10Z",
      "side": 1,
      "message": "whitespace.",
      "range": {
        "startLine": 1228,
        "startChar": 0,
        "endLine": 1228,
        "endChar": 1
      },
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1a7bb5_20f3d632",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 18
      },
      "lineNbr": 1228,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-14T05:44:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac5b75b_385e85bf",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac5b75b_78babd65",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 18
      },
      "lineNbr": 1281,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-13T18:32:10Z",
      "side": 1,
      "message": "Are these functions static? Maybe we should move all LambdaRelated static functions to a LambdaAstBuilderHelper class?",
      "range": {
        "startLine": 1244,
        "startChar": 0,
        "endLine": 1281,
        "endChar": 5
      },
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1a7bb5_a0dea690",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 18
      },
      "lineNbr": 1281,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-14T05:44:21Z",
      "side": 1,
      "message": "Move of them aren\u0027t, and refer to instance methods, typeMap, or currentMethod variables.",
      "parentUuid": "5ac5b75b_78babd65",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab9a7d9_a54fc981",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/Java8AstTest.java",
        "patchSetId": 18
      },
      "lineNbr": 40,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-14T19:56:35Z",
      "side": 1,
      "message": "I think now you can remove this as it is part of getStandardResources which I believe they are included.",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 49
      },
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82eb17_1050cc20",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/Java8AstTest.java",
        "patchSetId": 18
      },
      "lineNbr": 424,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-14T19:56:35Z",
      "side": 1,
      "message": "These should also have been moved to super as they are duplicated for Java7AstTest",
      "range": {
        "startLine": 404,
        "startChar": 0,
        "endLine": 424,
        "endChar": 3
      },
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9c4786_e15ec6e5",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/Java8AstTest.java",
        "patchSetId": 18
      },
      "lineNbr": 424,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-14T23:58:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa82eb17_1050cc20",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac5b75b_f826cd24",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/Java8AstTest.java",
        "patchSetId": 18
      },
      "lineNbr": 437,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-13T18:32:10Z",
      "side": 1,
      "message": "Either create a JavaAstTestBase (super for all AstTEsts like Java7AstTest, etc) or move to JJSTestBase.",
      "range": {
        "startLine": 404,
        "startChar": 1,
        "endLine": 437,
        "endChar": 3
      },
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1a7bb5_00dcda97",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/Java8AstTest.java",
        "patchSetId": 18
      },
      "lineNbr": 437,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-14T05:44:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac5b75b_f826cd24",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac5b75b_18f5492e",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/Java8AstTest.java",
        "patchSetId": 18
      },
      "lineNbr": 438,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-13T18:32:10Z",
      "side": 1,
      "message": "whitespace",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1a7bb5_e0d89ea5",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/Java8AstTest.java",
        "patchSetId": 18
      },
      "lineNbr": 438,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-14T05:44:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac5b75b_18f5492e",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa5ff82_6931e1df",
        "filename": "user/test-super/com/google/gwt/dev/jjs/super/com/google/gwt/dev/jjs/test/Java8Test.java",
        "patchSetId": 18
      },
      "lineNbr": 77,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-11-12T06:57:59Z",
      "side": 1,
      "message": "[error] Got an exception - expecting EOF, found \u0027}\u0027",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac5b75b_c47928b7",
        "filename": "user/test-super/com/google/gwt/dev/jjs/super/com/google/gwt/dev/jjs/test/Java8Test.java",
        "patchSetId": 18
      },
      "lineNbr": 77,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-13T20:34:19Z",
      "side": 1,
      "message": "This error should go away next push with the update to checkstyle v6.",
      "parentUuid": "1aa5ff82_6931e1df",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1a7bb5_4091b2b4",
        "filename": "user/test-super/com/google/gwt/dev/jjs/super/com/google/gwt/dev/jjs/test/Java8Test.java",
        "patchSetId": 18
      },
      "lineNbr": 77,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-14T05:44:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac5b75b_c47928b7",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac5b75b_3ee90d94",
        "filename": "user/test-super/com/google/gwt/dev/jjs/super/com/google/gwt/dev/jjs/test/Java8Test.java",
        "patchSetId": 18
      },
      "lineNbr": 278,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-11-13T19:22:13Z",
      "side": 1,
      "message": "Test clinit scenarios:\ne.g. \n1 What if the SAM needs clinit?\n2 Static method reference and clinit\n3.others?",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1a7bb5_209636ae",
        "filename": "user/test-super/com/google/gwt/dev/jjs/super/com/google/gwt/dev/jjs/test/Java8Test.java",
        "patchSetId": 18
      },
      "lineNbr": 278,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-14T05:44:21Z",
      "side": 1,
      "message": "I added some clinits(), but it is highly unlikely to be an issue. Any code inside of a clinit or references the Lambda type or enclosing reference type in any way will trigger a clinit().",
      "parentUuid": "5ac5b75b_3ee90d94",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82eb17_90391cf9",
        "filename": "user/test-super/com/google/gwt/dev/jjs/super/com/google/gwt/dev/jjs/test/Java8Test.java",
        "patchSetId": 18
      },
      "lineNbr": 278,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-14T19:56:35Z",
      "side": 1,
      "message": "I think the scenario is when you have a class with clinit and you pass static method reference as a Lambda. In this case clinit is called when the method reference is actually executed, but I think it would be nice to have tests that lock down that behaviour (i.e. taking a method reference does not trigger clinits).",
      "parentUuid": "7a1a7bb5_209636ae",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1a7bb5_ed5d366d",
        "filename": "user/test-super/com/google/gwt/dev/jjs/super/com/google/gwt/dev/jjs/test/Java8Test.java",
        "patchSetId": 18
      },
      "lineNbr": 278,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-14T23:58:41Z",
      "side": 1,
      "message": "I\u0027m not sure what the JLS says about whether or not a MethodHandle invokes the clinit(), I can\u0027t find any docs on it, but I would guess the semantics would be similar to reflection, in the sense that merely holding a reference doesn\u0027t eagerly invoke the clinit.\n\nI can probably make a test where the static initializer calls fail() if that happens, but it seems brittle, because an unexecuted lambda might get pruned.\n\n(Added test for it)",
      "parentUuid": "fa82eb17_90391cf9",
      "revId": "370b12c12062782366c5d0ab930fd9b98e642f10",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}