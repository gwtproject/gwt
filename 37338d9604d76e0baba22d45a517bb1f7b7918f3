{
  "comments": [
    {
      "key": {
        "uuid": "9081cf4e_d22cc421",
        "filename": "user/super/com/google/gwt/emul/java/lang/Class.java",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 5030
      },
      "writtenOn": "2014-09-18T12:40:23Z",
      "side": 1,
      "message": "This is wrong.\n\n\u0027$\u0027 is a valid character in names in Java. I can write that kind of code (and I know a few generators, e.g. Dagger, that *will* do it; and GWTQuery uses a class named \u0027$\u0027):\n\n package foo;\n\n public class Bar$Baz {\n   static class Qux$Quux { }\n }\n\n(and you can actually do much worse: https://twitter.com/shs96c/status/505066256643670016)\n\nFor the top-level class, getName() and getCanonicalName() would both be \"foo.Bar$Baz\", and getSimpleName() \"Bar$Baz\". For the inner class, getName() would be \"foo.Bar$Baz$Qux$Quux\", getCanonicalName() \"foo.Bar$Baz.Qux$Quux\", and getSimpleName() \"Qux$Quux\".\n\nThe real fix (that I believe was proposed a while ago and never merged) is to pass the information to the factory-methods.",
      "revId": "37338d9604d76e0baba22d45a517bb1f7b7918f3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10479fed_be3a2eaf",
        "filename": "user/super/com/google/gwt/emul/java/lang/Class.java",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-09-18T16:40:31Z",
      "side": 1,
      "message": "You are absolutely right; however conversion between internal and canonical names is done in this incorrect way in many places in the compiler (where it is more critical IMHO). Here is more benign in the sense most usages are only interested in a \"unique\" textual representation. \n\nI know that two wrongs don\u0027t make a right, I\u0027ll add a bug against this and will fix it soon.\n\nI think the best solution here is to encode it the parameter in the calls as an array of components [Outer Class1, Outer Classn, ClassName] and from there construct all the required names.\n\nTracking it as issue 8905.",
      "parentUuid": "9081cf4e_d22cc421",
      "revId": "37338d9604d76e0baba22d45a517bb1f7b7918f3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}