{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e0dcd4f8_e7b193c0",
        "filename": "user/build.xml",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5030
      },
      "writtenOn": "2021-10-15T17:38:54Z",
      "side": 1,
      "message": "This is left as a \"TODO\" for later when we\u0027ll add JavaX tests where X\u003e8, right? This is actually quite disturbing (same with the comment on the \u003cproperty name\u003d\"isJava8\"\u003e in common.ant.xml)",
      "revId": "3bf9c7b0327ff61b82c7a8baadf99cdc7951d2cc",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "416440d4_bffc8f95",
        "filename": "user/build.xml",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5130
      },
      "writtenOn": "2021-10-15T20:45:28Z",
      "side": 1,
      "message": "Yes, will add TODO and reword to be clearer about what we could be skipping.",
      "parentUuid": "e0dcd4f8_e7b193c0",
      "revId": "3bf9c7b0327ff61b82c7a8baadf99cdc7951d2cc",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "396b9449_77b97782",
        "filename": "user/build.xml",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 5030
      },
      "writtenOn": "2021-10-15T17:38:54Z",
      "side": 1,
      "message": "Note: we can remove that everywhere now that we use that compiler unconditionally.",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 122
      },
      "revId": "3bf9c7b0327ff61b82c7a8baadf99cdc7951d2cc",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8cfa36e_9380d754",
        "filename": "user/build.xml",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 5130
      },
      "writtenOn": "2021-10-15T20:45:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "396b9449_77b97782",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 122
      },
      "revId": "3bf9c7b0327ff61b82c7a8baadf99cdc7951d2cc",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72104813_4516ce59",
        "filename": "user/build.xml",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 5030
      },
      "writtenOn": "2021-10-15T17:38:54Z",
      "side": 1,
      "message": "The best way to solve this would probably be to use an explicit sourcepath (empty, or the srcdir), rather than the implicit sourcepath\u003dclasspath, which then finds source files in the classpath and possibly compiles them.\n\nSee https://blog.ltgt.net/most-build-tools-misuse-javac/ for details.\n\nThis could be done as a followup though.\n\n(I don\u0027t quite understand why we didn\u0027t have the problem previously though)",
      "revId": "3bf9c7b0327ff61b82c7a8baadf99cdc7951d2cc",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97e3f106_ff58b4f2",
        "filename": "user/build.xml",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 5130
      },
      "writtenOn": "2021-10-15T20:45:28Z",
      "side": 1,
      "message": "I also don\u0027t understand, but I get this problem every build locally where I attempt to compile user tests, though I manually workaround it. My only guess is that there is some other details about build.gwtproject.org that causes the behavior to be different, though without access to even logs, this is only a guess.\n\n(pre-submit edit) It also looks like the [last round of tests failed](https://github.com/niloc132/gwt/runs/3908186403), at a guess it seems that testng\u0027s annotations are getting built into the test classes directory, and ingested as tests:\n```\n     [junit] Running org.testng.ISuite\n    [junit] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.106 sec\n    [junit] Test org.testng.ISuite FAILED\n    [junit] Running org.testng.annotations.AfterSuite\n    [junit] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.109 sec\n    [junit] Test org.testng.annotations.AfterSuite FAILED\n    [junit] Running org.testng.annotations.BeforeSuite\n    [junit] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.105 sec\n    [junit] Test org.testng.annotations.BeforeSuite FAILED\n    [junit] Running org.testng.internal.annotations.IAfterSuite\n    [junit] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.106 sec\n    [junit] Test org.testng.internal.annotations.IAfterSuite FAILED\n    [junit] Running org.testng.internal.annotations.IBeforeSuite\n    [junit] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.137 sec\n    [junit] Test org.testng.internal.annotations.IBeforeSuite FAILED\n    [junit] Running org.testng.xml.XmlSuite\n    [junit] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.109 sec\n    [junit] Test org.testng.xml.XmlSuite FAILED\n    [junit] Running test.ServletMappingSuite\n    [junit] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 24.34 sec\n```\n\nThis is directly related to switching from modern to error-prone for the compiler, and local testing indicates that this is not affected by the error-prone-ant version. I\u0027ll experiment with sourcepath to see if I can resolve this before I update the review again.",
      "parentUuid": "72104813_4516ce59",
      "revId": "3bf9c7b0327ff61b82c7a8baadf99cdc7951d2cc",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "355761a1_7e3cbf63",
        "filename": "user/build.xml",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 5130
      },
      "writtenOn": "2021-10-16T16:56:31Z",
      "side": 1,
      "message": "According to https://ant.apache.org/manual/Tasks/javac.html, sourcepath defaults to the srcdir attribute already. Maybe this changes when the errorprone adapter is used? Directly setting sourcepath to src or \"\" has no effect when errorprone is the compiler.\n\nSetting verbose\u003dtrue and sourcepath\u003d\"\" with the ErrorProneAdapter confirms (huge output, I omitted uninteresting content):\n```\n[gwt.javac] [search path for source files: /home/colin/workspace/gwt/build/out/user/bin-test,/home/colin/workspace/gwt/build/out/user/bin,.../home/colin/workspace/tools/lib/testng/testng-5.14.1-sources.jar,/home/colin/workspace/tools/lib/testng/testng-5.14.1-nojunit.jar, ...]\n```\nIn contrast, changing nothing except switching back to modern:\n```\n[gwt.javac] [search path for source files: /home/colin/workspace/gwt/user/src]\n```\nMaybe we fall back to using compiler\u003dmodern for java8, until we can update to a newer errorprone in a separate patch?\n\n---\n\nI revived my patch that upgraded to EP 2.4.0, and also tried latest, 2.9.0. There are a few complications that I think warrant sticking with \"modern\":\n * First, to use this as a -Xplugin, the jars are passed to `-processorpath`. The common.ant.xml file defines a presetdef which must provide this, and then in user/build.xml, the `-compile.tests.java8` task tries to call gwt.javac preset with  a `-processor` arg... which now cannot find the class it was looking for. The solution would be to correctly pass a `-processorpath` argument, but passing a second such arg overrides the first, so the plugin is missing.\n * Second, all `-Xep:...` arg must part of the same argument as the original `-Xplugin:ErrorProne`, and later `-Xplugin:ErrorProne` compilerargs override earlier ones, resulting in a gigantic 500 character long string in the xml, and each usage of the presetdef must re-declare `-Xep:DeadException:ERROR`.\n \nBetween the two of these, my limited ant knowledge says we need to switch to a macrodef or some other more flexible ant tool to better define these.",
      "parentUuid": "97e3f106_ff58b4f2",
      "revId": "3bf9c7b0327ff61b82c7a8baadf99cdc7951d2cc",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46"
    }
  ]
}