{
  "comments": [
    {
      "key": {
        "uuid": "7daa59ed_cc5d6f5e",
        "filename": "user/src/com/google/gwt/dom/client/HasStyle.java",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 5130
      },
      "writtenOn": "2013-06-12T18:13:04Z",
      "side": 1,
      "message": "Might be worth adding hasStyleName, as this was recently added to Element - Goktug indicated in that review that a toggleStyleName is on the way as well. https://gwt-review.googlesource.com/#/c/3070/",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eadf5df0_0ff38525",
        "filename": "user/src/com/google/gwt/dom/client/HasStyle.java",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-16T04:20:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7daa59ed_cc5d6f5e",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd1bf126_ca43937a",
        "filename": "user/src/com/google/gwt/dom/client/IsElement.java",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 5130
      },
      "writtenOn": "2013-06-12T18:13:04Z",
      "side": 1,
      "message": "This method seems out of place - it is the closest we get to dom manipulation - no removeChild(IsElement) nor IsElement getParentElement() or any getChild (which may not be). Is there a reason you picked this and removeFromParent, but not other dom methods? Variance issues almost explain it, but then I noticed that you needed to add new methods just to support this in Element itself.\n\nAnd since you already are needing to add new methods in Element to deal with IsElement vs Node, would it make sense then to add new methods for these?",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eadf5df0_2ff8c9fe",
        "filename": "user/src/com/google/gwt/dom/client/IsElement.java",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-16T04:20:15Z",
      "side": 1,
      "message": "The reason only getChild/removeFromParent are included is simply that those are the only methods I\u0027d needed so far, and I\u0027ve built all of these interfaces lazily/as needed over the last few years.\n\nI agree that if some of these methods are going to be here, then they all should.\n\nI won\u0027t do that just yet, but will after the patch is in/very-close-to-being-2+\u0027d.",
      "parentUuid": "bd1bf126_ca43937a",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d6e75b1_135f6cf5",
        "filename": "user/src/com/google/gwt/dom/client/Style.java",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-06-13T00:46:23Z",
      "side": 1,
      "message": "If you put IsStyle here, no one else can implement this interface - this is a restriction due to JSOs.",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aba299d_4ae97337",
        "filename": "user/src/com/google/gwt/dom/client/Style.java",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-16T04:20:15Z",
      "side": 1,
      "message": "True, but that is fine--IsStyle is not a characteristic interface, which would need to be implemented by many other classes.\n\nThat said, I did make a HasStyle, which is a characteristic interface that both Element (a JSO) and Widget (a regular object/non-JSO) implement.\n\nBut that is also kosher, and I wouldn\u0027t anticipate other JSOs wanting to implement it. (As Element should already be a base class of any element-ish JSO that wanted to implement it.)",
      "parentUuid": "5d6e75b1_135f6cf5",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd62183_73fff24e",
        "filename": "user/src/com/google/gwt/user/client/ui/IndexedPanel.java",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-06-12T09:24:46Z",
      "side": 1,
      "message": "IsWidget2 ?",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aba299d_6aeeb742",
        "filename": "user/src/com/google/gwt/user/client/ui/IndexedPanel.java",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-16T04:20:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3dd62183_73fff24e",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd62183_f34762d3",
        "filename": "user/src/com/google/gwt/user/client/ui/IsImage.java",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-06-12T09:24:46Z",
      "side": 1,
      "message": "Do we really want to expose those unsafe methods? Shouldn\u0027t we try to make people use SafeUri instead?",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aba299d_0af37b25",
        "filename": "user/src/com/google/gwt/user/client/ui/IsImage.java",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-16T04:20:15Z",
      "side": 1,
      "message": "Personally, I think the point of these interfaces (and what makes them handy) is that they expose the widget\u0027s API exactly as it is, so that your code can do anything it would to a real widget, but via the faked interface.\n\nSo, in that regard, I don\u0027t think the interface itself is the place to start enforcing SafeUri--instead, I think we would deprecate-then-remove the non-SafeUris methods in both the interface \u0026 widget at the same time.",
      "parentUuid": "3dd62183_f34762d3",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd62183_1302f682",
        "filename": "user/src/com/google/gwt/user/client/ui/IsUIObject.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-06-12T09:24:46Z",
      "side": 1,
      "message": "Given that Element implements IsElement, and we already have getElement(), couldn\u0027t we just declare\n\n IsElement getElement();\n\nhere and take advantage of covariant return types in UIObject?",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7daa59ed_8c63671e",
        "filename": "user/src/com/google/gwt/user/client/ui/IsUIObject.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5130
      },
      "writtenOn": "2013-06-12T18:13:04Z",
      "side": 1,
      "message": "My concern there would be that we\u0027d no longer have a way to get access to the element as a jso in the code that needs it. If I wanted the element so I could treat it as a InputElement, the JSO.cast() is no longer available to me, only the regular Java cast. Not a huge loss, but it definitely is a breaking change.\n\nSimple/ugly way around that might be to rename IsElement.asElement to IsElement.cast, with the JSO.cast generics. Returns null for stubs, and with a real element lets you cast as usual.",
      "parentUuid": "3dd62183_1302f682",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7daa59ed_6c09db73",
        "filename": "user/src/com/google/gwt/user/client/ui/IsUIObject.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-12T22:05:27Z",
      "side": 1,
      "message": "Oh, right; I had to do that when these were my own interfaces, but that should work now...I\u0027ll try that. Thanks!",
      "parentUuid": "3dd62183_1302f682",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aba299d_2af8bffe",
        "filename": "user/src/com/google/gwt/user/client/ui/IsUIObject.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-16T04:20:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7daa59ed_6c09db73",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aba299d_cafc83f5",
        "filename": "user/src/com/google/gwt/user/client/ui/IsUIObject.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-16T04:20:15Z",
      "side": 1,
      "message": "Colin, I believe Thomas\u0027s suggestion is fine because, as he said, the API of UIObject stays Element, no breaking changes.\n\nBut since Element implements IsElement, it still fulfills the \"IsElement getElement\" contract of IsUIObject.",
      "parentUuid": "7daa59ed_8c63671e",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7daa59ed_2c7353ef",
        "filename": "user/src/com/google/gwt/user/client/ui/IsWidget2.java",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 5130
      },
      "writtenOn": "2013-06-12T18:13:04Z",
      "side": 1,
      "message": "(Sorry if I missed this discussion elsewhere, but) What is the philosophical thinking on IsWidget vs IsWidget2? This is for mocking Widget, while IsWidget is for Composite-free composition? If that is the idea, what about another name than IsWidget2, which seems to suggest \u0027better isWidget\u0027 rather than \u0027mockable iswidget\u0027.",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aba299d_eaf94702",
        "filename": "user/src/com/google/gwt/user/client/ui/IsWidget2.java",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-16T04:20:15Z",
      "side": 1,
      "message": "Np--although feel free to follow up on the mailing list if the thread gets too long...\n\nRE IsWidget vs. IsWidget2, yes, the \"IsWidget2\" is for mocking. Although, AFAIK, this is the same purpose as the original IsWidget, or at least that is what its javadoc insinuates.\n\nThe \"2\" was just an ugly name that means \"the same thing as the original, but with more methods, except we can\u0027t really add them to the original, because it would break backwards compatibility\". E.g. it\u0027s just for versioning the interface.\n\nI\u0027ve since renamed \"IsWidget2\" to \"IsWidget.Extended\", an inner-interface, which is more like how the existing GWT interfaces, like IndexedPanel, were extended for the original IsWidget.",
      "parentUuid": "7daa59ed_2c7353ef",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd62183_b33dea3d",
        "filename": "user/src/com/google/gwt/user/client/ui/Panel.java",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-06-12T09:24:46Z",
      "side": 1,
      "message": "Given that Widget implements IsWidget2 could we just take advantage of type erasure and do an unchecked cast?\n\n return (Iterator\u003cIsWidget2\u003e) ((Iterator) iterator());",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aba299d_8a068b2d",
        "filename": "user/src/com/google/gwt/user/client/ui/Panel.java",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 5025
      },
      "writtenOn": "2013-06-16T04:20:15Z",
      "side": 1,
      "message": "Ah, yes, another great catch--I  believe that I had to do this in Tessell since I couldn\u0027t change Widget itself.\n\nBut now, you\u0027re right, the adaptor isn\u0027t needed, and the cast seems to work just fine.",
      "parentUuid": "3dd62183_b33dea3d",
      "revId": "405fd8cbdb7f06893c9d08a3c18736ba9c40b030",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}