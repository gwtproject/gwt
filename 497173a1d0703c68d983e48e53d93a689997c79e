{
  "comments": [
    {
      "key": {
        "uuid": "7988c4e2_8779aa49",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "this is kind of nit-picky but to me \"build\" sounds like it\u0027s doing some work. i\u0027d rather see this named \"create\", \"wrap\" or \"createFrom\"",
      "range": {
        "startLine": 67,
        "startChar": 32,
        "endLine": 67,
        "endChar": 37
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_47fac223",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 5
      },
      "lineNbr": 82,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "i\u0027ve been letting it slide but really if these variables aren\u0027t containing a Type instance then the variable name shouldn\u0027t sound like it.\n\nthese need to be named \"fooTypeName\"",
      "range": {
        "startLine": 82,
        "startChar": 19,
        "endLine": 82,
        "endChar": 32
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_a7b62e71",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 5
      },
      "lineNbr": 641,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "this reads funny to me. i think it would read better if:\ns/requiredTypes/standardTypes",
      "range": {
        "startLine": 641,
        "startChar": 43,
        "endLine": 641,
        "endChar": 71
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_a705cea1",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 5
      },
      "lineNbr": 815,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "this comment doesn\u0027t make sense after replacing JProgram with an interface, maybe move the comment into JProgram?",
      "range": {
        "startLine": 814,
        "startChar": 10,
        "endLine": 815,
        "endChar": 77
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_47a4025b",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 5
      },
      "lineNbr": 816,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "this \"typeHolder\" object is only being used to access array types (and really primarily to lazily create array types). seems like it\u0027s named wrong",
      "range": {
        "startLine": 816,
        "startChar": 38,
        "endLine": 816,
        "endChar": 48
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_6776e6ea",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 5
      },
      "lineNbr": 897,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "it seems there\u0027s some inconsistency going on in this function. once type.getName() is accessed and then later type.getUnderlyingType().getName() is accessed. shouldn\u0027t this be consistent?",
      "range": {
        "startLine": 897,
        "startChar": 8,
        "endLine": 897,
        "endChar": 23
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_479e42e4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JTypeOracle.java",
        "patchSetId": 5
      },
      "lineNbr": 900,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "extract:\nString typeName \u003d referenceType.getUnderlyingType().getName();",
      "range": {
        "startLine": 900,
        "startChar": 24,
        "endLine": 900,
        "endChar": 77
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_6afa2bdf",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/TypeHolder.java",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "i\u0027m not sure. it does seem like a little too modularized, but if you want to hide JProgram from JTypeOracle and still continue to have uses of getTypeArray() update the contents of the JProgram then I don\u0027t see an alternative.",
      "range": {
        "startLine": 19,
        "startChar": 8,
        "endLine": 19,
        "endChar": 41
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_c72ed2c0",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/TypeHolder.java",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "s/TypeHolder/ArrayTypeCreator",
      "range": {
        "startLine": 21,
        "startChar": 17,
        "endLine": 21,
        "endChar": 27
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_4743a277",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/TypeHolder.java",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "s/getTypeArray/getOrCreateArrayType",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 25
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7988c4e2_ca049735",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ComputeCastabilityInformation.java",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-07-10T18:59:29Z",
      "side": 1,
      "message": "how about save a reference to the typeOracle when the ComputeCastabilityInformation visitor is constructed, and change all these program.typeOracle references to just typeOracle\n\nthat being said, i do think this is an improvement. you\u0027re right that answering these questions is really a job for the JTypeOracle, not JProgram",
      "range": {
        "startLine": 177,
        "startChar": 16,
        "endLine": 177,
        "endChar": 34
      },
      "revId": "497173a1d0703c68d983e48e53d93a689997c79e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}