{
  "comments": [
    {
      "key": {
        "uuid": "6d2c7fd6_f3513ac1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5105
      },
      "writtenOn": "2020-09-23T22:31:02Z",
      "side": 1,
      "message": "Addressed in https://gwt-review.googlesource.com/c/gwt/+/22860",
      "revId": "4b244545c297a4fb19fef3412cc7248f1f67192e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bedb089d_b09cdbda",
        "filename": "user/super/com/google/gwt/emul/java/lang/Math.java",
        "patchSetId": 1
      },
      "lineNbr": 327,
      "author": {
        "id": 5110
      },
      "writtenOn": "2020-09-23T03:52:15Z",
      "side": 1,
      "message": "Double.isInfinite(e2x)",
      "range": {
        "startLine": 327,
        "startChar": 26,
        "endLine": 327,
        "endChar": 33
      },
      "revId": "4b244545c297a4fb19fef3412cc7248f1f67192e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4996b56_12c1a93f",
        "filename": "user/super/com/google/gwt/emul/java/lang/Math.java",
        "patchSetId": 1
      },
      "lineNbr": 327,
      "author": {
        "id": 5105
      },
      "writtenOn": "2020-09-23T22:31:02Z",
      "side": 1,
      "message": "I see,  Double.MAX_DOUBLE + 1 \u003d\u003d Double.MAX_DOUBLE because of underflow. So Double.POSITIVE_INFINITY is never reached through addition, hence checking e2x+1 for infinity is the same as checking e2x.\n\nFixed.",
      "parentUuid": "bedb089d_b09cdbda",
      "range": {
        "startLine": 327,
        "startChar": 26,
        "endLine": 327,
        "endChar": 33
      },
      "revId": "4b244545c297a4fb19fef3412cc7248f1f67192e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a25b280_098a1827",
        "filename": "user/test/com/google/gwt/emultest/java/lang/MathTest.java",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 5110
      },
      "writtenOn": "2020-09-23T03:52:15Z",
      "side": 1,
      "message": "Could you also add:\n\n v \u003d Math.tanh(-500);\n assertEquals(-1.0, v, 1e-7);",
      "range": {
        "startLine": 583,
        "startChar": 0,
        "endLine": 583,
        "endChar": 31
      },
      "revId": "4b244545c297a4fb19fef3412cc7248f1f67192e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16d353e9_145add72",
        "filename": "user/test/com/google/gwt/emultest/java/lang/MathTest.java",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 5105
      },
      "writtenOn": "2020-09-23T22:31:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a25b280_098a1827",
      "range": {
        "startLine": 583,
        "startChar": 0,
        "endLine": 583,
        "endChar": 31
      },
      "revId": "4b244545c297a4fb19fef3412cc7248f1f67192e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}