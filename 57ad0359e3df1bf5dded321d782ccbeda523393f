{
  "comments": [
    {
      "key": {
        "uuid": "bf0a2512_caba25e6",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/JavaToJavaScriptCompiler.java",
        "patchSetId": 13
      },
      "lineNbr": 1429,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "fix comment.",
      "range": {
        "startLine": 1429,
        "startChar": 63,
        "endLine": 1429,
        "endChar": 66
      },
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_59d52377",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/JavaToJavaScriptCompiler.java",
        "patchSetId": 13
      },
      "lineNbr": 1429,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0a2512_caba25e6",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_aabff1d4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JjsUtils.java",
        "patchSetId": 13
      },
      "lineNbr": 131,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "public",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_99b69b5d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JjsUtils.java",
        "patchSetId": 13
      },
      "lineNbr": 131,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0a2512_aabff1d4",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_2aabe198",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MakeCallsStatic.java",
        "patchSetId": 13
      },
      "lineNbr": 244,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "revert this file.",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_f9c357c1",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MakeCallsStatic.java",
        "patchSetId": 13
      },
      "lineNbr": 244,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0a2512_2aabe198",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_8a9d4d72",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ReplaceDefenderMethodReferences.java",
        "patchSetId": 13
      },
      "lineNbr": 57,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "I am surprised that I.super.defender() worked before implementing this pass? Did you find out why, was the test not really testing the scenario?",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_d9c013b8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ReplaceDefenderMethodReferences.java",
        "patchSetId": 13
      },
      "lineNbr": 57,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "I think it was a caching problem, for some reason the test wasn\u0027t being picked up, but I wasn\u0027t noticing it since I only look for non-green. I did a clean rebuild and it started failing.",
      "parentUuid": "bf0a2512_8a9d4d72",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_0a225d9b",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1097,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "remove, this should be part of the predicate if desired (and it is already there.",
      "range": {
        "startLine": 1097,
        "startChar": 5,
        "endLine": 1097,
        "endChar": 37
      },
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_b9e27f5b",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1097,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "But the name of this method implies it excludes static methods, and it would force repetition at both callsites. I\u0027ll make the change cause I don\u0027t want to drag the review out, but if we\u0027re going to allow static methods, it should be called something else.  If someone forgets to add the polymorphic check, they\u0027ll end up with static methods mixed in with non-static of the same signature.",
      "parentUuid": "bf0a2512_0a225d9b",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_82c62026",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1097,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-26T07:33:18Z",
      "side": 1,
      "message": "then rename it to collectSelfAndSuperInstanceMethods, keep the method.canBePolymorphic there and remove it from the predicate.",
      "parentUuid": "df5d1961_b9e27f5b",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "773e1bec_dfde3b8a",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1097,
      "author": {
        "id": 7701
      },
      "writtenOn": "2015-01-29T01:06:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df5d1961_82c62026",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_2ab1a1d5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1119,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "This condition (method.getEnclosingType() !\u003d type) does not seem the be present in the old code;  The filtering in the old code was to only collect method whose signature is one of the signatures in the type.methods and those would have included all polymorphic methods of the type. Methods whose signature are not in any method of the type are effectively filtered in the second loop anyway (so no problem here). Removing the method itself from the list of overrides should not have any effect either but it might so I would take the second part of the condition out.\n\nNIt: the formatting here is off.",
      "range": {
        "startLine": 1119,
        "startChar": 43,
        "endLine": 1119,
        "endChar": 79
      },
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_b9a39f10",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1119,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "In the old code, the methods of the \u0027type\u0027 variable here were not added to the set, they were just used as a flag for what to collect, so this code is just reproducing the logic that existed before. But I\u0027ll remove it.",
      "parentUuid": "bf0a2512_2ab1a1d5",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_62cb0c2e",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1119,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-26T07:33:18Z",
      "side": 1,
      "message": "You are right don\u0027t remove it, I misread the old code.",
      "parentUuid": "df5d1961_b9a39f10",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_ead609d0",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1472,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "I presonally don\u0027t like the term upRefs, AFAIK it is only used in GWT to describe two different this 1) overriding method chains (for supers) and 2) casting to a super type).\n\nI would s/upRefs/overridingMethodBySignature/",
      "range": {
        "startLine": 1472,
        "startChar": 7,
        "endLine": 1472,
        "endChar": 13
      },
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_0a97fd1e",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1472,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "formatting.\n\nThe predicates are awfully similar, I guess they can be abstracted away (the extra condition in the other does not really have any effect).\n\nMaybe simplify into \n\n  collectSelfAndSuperPolymorphicMethods()",
      "range": {
        "startLine": 1468,
        "startChar": 0,
        "endLine": 1472,
        "endChar": 15
      },
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_b9555f49",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1472,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0a2512_0a97fd1e",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_99521b5d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1472,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0a2512_ead609d0",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_4a4f3531",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1475,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "s/cType/type/",
      "range": {
        "startLine": 1475,
        "startChar": 26,
        "endLine": 1475,
        "endChar": 31
      },
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_79458792",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1475,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0a2512_4a4f3531",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0a2512_cabc6594",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1610,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-25T21:31:45Z",
      "side": 1,
      "message": "remove.",
      "range": {
        "startLine": 1605,
        "startChar": 0,
        "endLine": 1610,
        "endChar": 5
      },
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_993b3b0d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 13
      },
      "lineNbr": 1610,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-11-26T00:44:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0a2512_cabc6594",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5d1961_22eab487",
        "filename": "user/test-super/com/google/gwt/dev/jjs/super/com/google/gwt/dev/jjs/test/Java8Test.java",
        "patchSetId": 13
      },
      "lineNbr": 406,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-26T07:51:46Z",
      "side": 1,
      "message": "Can you add tests that test the following scenarios:\n\n  public class package1.A {\n      (default visibility)  int m() {return 1;}\n  }\n \n  public interface pacakge2.B {\n    default int m() { return 2; }\n  }\n\n  public class package3.C extends package1.A implements package2.B {\n  }\n\nIt is expected that C.m() returns 2 (gets the implementation from the interface not through inheritance)\n\n  public class package1.D extends package1.A implements package2.B {}\n\nThis one should get the implementation from the superclass not the interface (the interface just upgrades the visibility of the method, so also make sure that a caller m() from an different package is routed correctly).\n\n \nCan super be used to invoke a default method without the qualifier when it is not ambiguous? If so that also needs to be tested.",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7e7c792_d619c41b",
        "filename": "user/test-super/com/google/gwt/dev/jjs/super/com/google/gwt/dev/jjs/test/Java8Test.java",
        "patchSetId": 13
      },
      "lineNbr": 406,
      "author": {
        "id": 7701
      },
      "writtenOn": "2015-01-29T01:06:14Z",
      "side": 1,
      "message": "public class package1.D extends package1.A implements package2.B {} \nIt does not compile, with the error of \"The inherited method package1.A.m() cannot hide the public abstract method in package2.B\". It cannot automatically upgrade the visibility of the method.\n\nsuper cannot be used to invoke a default method without the qualifier. For an interface, it refers to java.lang.Object.",
      "parentUuid": "df5d1961_22eab487",
      "revId": "57ad0359e3df1bf5dded321d782ccbeda523393f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}