{
  "comments": [
    {
      "key": {
        "uuid": "SVytx.fE",
        "filename": "dev/core/src/com/google/gwt/dev/javac/JdtCompiler.java",
        "patchSetId": 2
      },
      "lineNbr": 235,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-22T03:09:52Z",
      "side": 1,
      "message": "I think this can be a static class? JdtCompiler is getting kind of big, so maybe move this class to top level instead of keeping it as an nested class. Perhaps call it JdtParser?",
      "revId": "5d8a7748e9544651f04cdde79ecfea34786cf88d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SV0u2BYE",
        "filename": "dev/core/src/com/google/gwt/dev/javac/JdtCompiler.java",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-22T03:09:52Z",
      "side": 1,
      "message": "\"recursively\"",
      "revId": "5d8a7748e9544651f04cdde79ecfea34786cf88d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SV2vIIfs",
        "filename": "dev/core/src/com/google/gwt/dev/javac/JdtCompiler.java",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-22T03:09:52Z",
      "side": 1,
      "message": "A possible simplification: if there is a loop in stripGwtIncompatibleElements (see below) then we could move this line there as well. That way stripGwtIncompatibleElements would be self-recursive and there wouldn\u0027t be any mutual recursion.",
      "revId": "5d8a7748e9544651f04cdde79ecfea34786cf88d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SV4uXTdU",
        "filename": "dev/core/src/com/google/gwt/dev/javac/JdtCompiler.java",
        "patchSetId": 2
      },
      "lineNbr": 282,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-22T03:09:52Z",
      "side": 1,
      "message": "\"Modifies the methods array of each type to remove any GwtIncompatible methods.\"\n\nStyle nit: I\u0027m not sure why this method should contain the outer loop? Perhaps it could take one type as an argument, and the loop should be in stripGwtIncompatibleElements. Similarly for stripGwtIncompatibleFields, and then the two loops can be combined.",
      "revId": "5d8a7748e9544651f04cdde79ecfea34786cf88d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SV.ukEUg",
        "filename": "dev/core/src/com/google/gwt/dev/javac/JdtCompiler.java",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-22T03:09:52Z",
      "side": 1,
      "message": "\"Modifies the fields array of each type to remove any GwtIncompatible fields.\"",
      "revId": "5d8a7748e9544651f04cdde79ecfea34786cf88d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SV.u7cVs",
        "filename": "dev/core/src/com/google/gwt/dev/javac/JdtCompiler.java",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-22T03:09:52Z",
      "side": 1,
      "message": "It looks like this method and all the other methods it calls could be static.",
      "revId": "5d8a7748e9544651f04cdde79ecfea34786cf88d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SV0v7pTg",
        "filename": "user/test/com/google/gwt/dev/jjs/test/gwtincompatible/GwtIncompatible.java",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-22T03:09:52Z",
      "side": 1,
      "message": "We will need to explain how GwtIncompatible works somewhere that shows up in GWT\u0027s external javadoc, and it won\u0027t here because this is test code. So I think maybe we should put a copy of this class under com.google.gwt.core.shared in the user package.\n\nIn this class we can say:\n\nA GwtIncompatible annotation for use in a test.\n@see com.google.gwt.core.shared.GwtIncompatible",
      "revId": "5d8a7748e9544651f04cdde79ecfea34786cf88d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}