{
  "comments": [
    {
      "key": {
        "uuid": "16d4f72c_56fbf423",
        "filename": "dev/core/src/com/google/gwt/core/ext/soyc/impl/StoryRecorder.java",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 5010
      },
      "writtenOn": "2014-08-11T21:03:23Z",
      "side": 1,
      "message": "Maybe add some javadoc:\n\n\"Finds a list of non-overlapping ranges that cover the JavaScript fragment and emits a \u003cstory\u003e XML element for each range.\n\nCalculates the set of non-overlapping ranges from the overlapping ranges in the JsSourceMap. Tries to use the smallest ranges available. Splits ranges where necessary and fills in any gaps.\"",
      "range": {
        "startLine": 155,
        "startChar": 15,
        "endLine": 155,
        "endChar": 30
      },
      "revId": "6207c04a338d95c478c74fb8e0aeff0c5b6fb838",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16d4f72c_36219801",
        "filename": "dev/core/src/com/google/gwt/core/ext/soyc/impl/StoryRecorder.java",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 5010
      },
      "writtenOn": "2014-08-11T21:03:23Z",
      "side": 1,
      "message": "\"Remove and record each range that doesn\u0027t contain the current range. Since the ranges are sorted, these are ranges that start before the current range, but may overlap it.\"",
      "range": {
        "startLine": 171,
        "startChar": 9,
        "endLine": 171,
        "endChar": 12
      },
      "revId": "6207c04a338d95c478c74fb8e0aeff0c5b6fb838",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}