{
  "comments": [
    {
      "key": {
        "uuid": "1dc45060_5e56c9d7",
        "filename": "user/super/com/google/gwt/emul/java/lang/Math.java",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5055
      },
      "writtenOn": "2016-02-15T08:15:36Z",
      "side": 1,
      "message": "I feel like also for int and long we should use the NativeMath method, casting the result. Otherwise the result could be not the expected:\n\n    NaN \u003c 1 ? NaN : 1  -\u003e 1\n    Math.min(NaN, 1) -\u003e NaN",
      "revId": "6c5a1062c3723f9936ecb424f39620c2db2590bd",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dc45060_3ed66d70",
        "filename": "user/super/com/google/gwt/emul/java/lang/Math.java",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-02-15T09:33:40Z",
      "side": 1,
      "message": "Well int and long do not have NaN. As soon as you use Double/Float.NaN in either parameter the double/float variant should be used. So the current int/long variants work correctly.",
      "parentUuid": "1dc45060_5e56c9d7",
      "revId": "6c5a1062c3723f9936ecb424f39620c2db2590bd",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7daf0c90_ac741bd9",
        "filename": "user/super/com/google/gwt/emul/java/lang/Math.java",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5055
      },
      "writtenOn": "2016-02-15T10:37:28Z",
      "side": 1,
      "message": "I think in prod mode, if you get an int from a JsType Interface you can get any thing even NaN, and then you could pass it to Math.min",
      "parentUuid": "1dc45060_3ed66d70",
      "revId": "6c5a1062c3723f9936ecb424f39620c2db2590bd",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7daf0c90_6c620316",
        "filename": "user/super/com/google/gwt/emul/java/lang/Math.java",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-02-15T11:11:03Z",
      "side": 1,
      "message": "Right, but I would argue that your JsType / JSNI is wrong then and you should have used double as return value or coerce the value to int on JS side. When coming from JS the developer is responsible to choose the correct Java type.\n\nIf we change int/long variants to use NativeMath then a possible NaN input will always be returned and propagates further as \"wrong\" int/long. \nIf we don\u0027t change it here then NaN will never be selected assuming the other argument is a valid int/long. Then the return value is at least of correct type even though the result might be unexpected. If both arguments are NaN then NaN propagates through again.\n\nNot sure which approach is better. Not that I am against it, just thinking about the consequences.",
      "parentUuid": "7daf0c90_ac741bd9",
      "revId": "6c5a1062c3723f9936ecb424f39620c2db2590bd",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dc45060_5ed5e930",
        "filename": "user/super/com/google/gwt/emul/java/lang/Math.java",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5055
      },
      "writtenOn": "2016-02-15T12:22:40Z",
      "side": 1,
      "message": "I agree that JsType should always use double, but sometimes it\u0027s convenient and more readable for some APIs to use integers (ie. the length property) instead of using double and making the user constantly deal with casting.\nCoercing values in JS side could be sometimes impossible if the type is native.\nI don\u0027t see any mayor problems at first, but you are right there could be some hidden issues.",
      "parentUuid": "7daf0c90_6c620316",
      "revId": "6c5a1062c3723f9936ecb424f39620c2db2590bd",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dc45060_29971566",
        "filename": "user/super/com/google/gwt/emul/java/lang/Math.java",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-02-15T14:19:23Z",
      "side": 1,
      "message": "I think for now I would like to keep this CL as it is now, int/long variants can be updated later. This CL is required to write valid tests for DoubleSummaryStatistics of Java8 (thats where I discovered this bug here) so it would be nice to have this landed relatively soon.",
      "parentUuid": "1dc45060_5ed5e930",
      "revId": "6c5a1062c3723f9936ecb424f39620c2db2590bd",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}