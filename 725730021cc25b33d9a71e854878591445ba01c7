{
  "comments": [
    {
      "key": {
        "uuid": "c498e5f7_62f45265",
        "filename": "user/super/com/google/gwt/emul/java/lang/String.java",
        "patchSetId": 2
      },
      "lineNbr": 694,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-07-04T18:42:18Z",
      "side": 1,
      "message": "I wonder if this String coercing is need at all.\nIt\u0027s used in __equals and compareTo but not used in equalsIgnoreCase",
      "revId": "725730021cc25b33d9a71e854878591445ba01c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79bfe48c_b5cdebf2",
        "filename": "user/super/com/google/gwt/emul/java/lang/String.java",
        "patchSetId": 2
      },
      "lineNbr": 694,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-07-12T18:13:32Z",
      "side": 1,
      "message": "Yes, it is needed for the same reasons. If both strings are boxed JavaScript strings without String(this) the return is false.",
      "parentUuid": "c498e5f7_62f45265",
      "revId": "725730021cc25b33d9a71e854878591445ba01c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f993d415_23420e55",
        "filename": "user/super/com/google/gwt/emul/java/lang/String.java",
        "patchSetId": 2
      },
      "lineNbr": 694,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-07-12T18:15:56Z",
      "side": 1,
      "message": "Hi, Roberto. I\u0027m very interested in this kind of optimization (string comparison) and would love to do work on it.\n\nCan you advice me where I should start investigate code to do that?\nThanks!",
      "parentUuid": "79bfe48c_b5cdebf2",
      "revId": "725730021cc25b33d9a71e854878591445ba01c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79d0c40f_75f57031",
        "filename": "user/super/com/google/gwt/emul/java/lang/String.java",
        "patchSetId": 2
      },
      "lineNbr": 694,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-07-15T16:31:49Z",
      "side": 1,
      "message": "I think the best strategy for this one is to either (1) improve method inliner (but that alone might be counter productive to codesize) or (2) have an automatic specialization optimization.\n\nIf you want to play with the compiler DeadCodeElimination has code to handle String operation when both parameters are known   constants, and EqualityNormalizer is the piece of code that decides how to translate \u003d\u003d into JavaScript and handles Strings in a special way (maybe you can extend that to handle String.equals as well).",
      "parentUuid": "f993d415_23420e55",
      "revId": "725730021cc25b33d9a71e854878591445ba01c7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}