{
  "comments": [
    {
      "key": {
        "uuid": "RQ0KrdII",
        "filename": "user/src/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-08T00:15:56Z",
      "side": 1,
      "message": "I wonder if this should be called fail() or failAsync()",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RRCEryFo",
        "filename": "user/src/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-08T02:10:53Z",
      "side": 1,
      "message": "I think fail and failAsync adds confusion as the semantics of this method is a lot different than other Assert.fail() method and also this may fail synchronously or asynchronously.",
      "parentUuid": "RQ0KrdII",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RQyLGMI8",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-08T00:15:56Z",
      "side": 1,
      "message": "why public instead of protected?",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RRME5RLE",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-08T02:10:53Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "RQyLGMI8",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RQwJd7PU",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-08T00:15:56Z",
      "side": 1,
      "message": "If testIsFinished then we\u0027ve probably detected a handler leak and another test is running now. We probably shouldn\u0027t mess with its handlers - instead, call a method on GWTRunner to report the leak, and it can report a fatal error with the name of the test that caused the leak.",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RRMGDBPo",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-08T02:10:53Z",
      "side": 1,
      "message": "Putting assert and adding a todo for reporting to GWTRunner.\n(I am not sure if it should be reported as fatal as if we do that in a lot of scenarios when a test fails unexpectedly, it may potentially cause all other tests to fail.)",
      "parentUuid": "RQwJd7PU",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RQwLWjEM",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-08T00:15:56Z",
      "side": 1,
      "message": "I think I see a bug: if this method is called twice, the first handler will be installed in both places and the second handler will only be installed in one place, so the first handler won\u0027t be completely uninstalled.\n\nMaybe we should pass null here instead? If a test calls this method then we know that legacy behavior isn\u0027t needed, so we can clear the handler in the old place and install it only in the new place.",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RRCH5CLs",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 224,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-08T02:10:53Z",
      "side": 1,
      "message": "You are right.\nSetting to null was my original implementation. However when uncaught exception handler is null and exception escapes in htmlunit and htmlunit dies.\nhttps://code.google.com/p/google-web-toolkit/issues/detail?id\u003d8007.\nOn the other hand, even that wasn\u0027t the case, perhaps it is also OK to not let the exception to escape to browser if the test adds its own handler.\n\nAnyway, I\u0027ll set it to an empty handler to prevent the potential leak when the method called twice. Also adding a comment to point the issue.",
      "parentUuid": "RQwLWjEM",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RQ8K0pBM",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-08T00:15:56Z",
      "side": 1,
      "message": "why public instead of protected?",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RRMHnhBI",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-08T02:10:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "RQ8K0pBM",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RQ2JOeEU",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-08T00:15:56Z",
      "side": 1,
      "message": "If this method ever gets called when testIsFinished then we\u0027ve detected a handler leak (see above).",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RRGH.cCs",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-08T02:10:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "RQ2JOeEU",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RQ0IdNCM",
        "filename": "user/test/com/google/gwt/dev/jjs/test/RunAsyncTest.java",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-08T00:15:56Z",
      "side": 1,
      "message": "It\u0027s unclear what we\u0027re trying to test here. Add a comment?",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RRKHSOB4",
        "filename": "user/test/com/google/gwt/dev/jjs/test/RunAsyncTest.java",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-08T02:10:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "RQ0IdNCM",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RQ4IXPAM",
        "filename": "user/test/com/google/gwt/junit/client/GWTTestCaseUncaughtExceptionHandlerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-08T00:15:56Z",
      "side": 1,
      "message": "remove Suppressed comment (and below)",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RRMG.ZMA",
        "filename": "user/test/com/google/gwt/junit/client/GWTTestCaseUncaughtExceptionHandlerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-08T02:10:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "RQ4IXPAM",
      "revId": "7e921277a9e007ea75375fdf79397202c593fdb7",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}