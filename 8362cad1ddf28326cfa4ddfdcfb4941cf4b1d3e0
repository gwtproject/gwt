{
  "comments": [
    {
      "key": {
        "uuid": "580da8e8_7cb4d5ce",
        "filename": "user/test/com/google/gwt/dev/jjs/test/GwtIncompatibleTest.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-08-13T23:31:25Z",
      "side": 1,
      "message": "Can you add an assertion?\n\n  assertNull(instance);",
      "revId": "8362cad1ddf28326cfa4ddfdcfb4941cf4b1d3e0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "580da8e8_9cc3a926",
        "filename": "user/test/com/google/gwt/dev/jjs/test/GwtIncompatibleTest.java",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-08-13T23:31:25Z",
      "side": 1,
      "message": "What about other issues?\n\nDoes GwtIncompatible class have a default constructor? It is counter intuitive to be able to instantiate a GwtIncompatible class.\n\nWhat about a test case for the scenario where my GwtIncompatible class extends another class that is not compilable with GWT?",
      "revId": "8362cad1ddf28326cfa4ddfdcfb4941cf4b1d3e0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "580da8e8_3cd37df7",
        "filename": "user/test/com/google/gwt/dev/jjs/test/gwtincompatible/GwtIncompatibleClass.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-08-13T23:31:25Z",
      "side": 1,
      "message": "it is not used in static import.",
      "revId": "8362cad1ddf28326cfa4ddfdcfb4941cf4b1d3e0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}