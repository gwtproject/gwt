{
  "comments": [
    {
      "key": {
        "uuid": "3a4c838a_e10f414f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/OptimizerContext.java",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-11T01:15:34Z",
      "side": 1,
      "message": "this can be a MultiSet",
      "range": {
        "startLine": 63,
        "startChar": 9,
        "endLine": 63,
        "endChar": 30
      },
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1acc1f53_8e39bbc6",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/OptimizerContext.java",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 7701
      },
      "writtenOn": "2014-11-11T17:16:40Z",
      "side": 1,
      "message": "I think we just need a string to integer map here, and the integer is not a count. A Multiset implementation includes both Map\u003cE, Integer\u003e and Collection properties. But we don\u0027t need the collection property. Why is Multiset better than Map?",
      "parentUuid": "3a4c838a_e10f414f",
      "range": {
        "startLine": 63,
        "startChar": 9,
        "endLine": 63,
        "endChar": 30
      },
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7db79e_5ebda98d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/OptimizerContext.java",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-11T17:57:50Z",
      "side": 1,
      "message": "Whenever you need an String-\u003eInteger map you can use a multiset. The advantages is that you don\u0027t need to care about boxing.\n\nIn particular when you do map.get(\"not_in_map_key\") you get null and for example the getLastStepFor will throw a NullPointerException if you do get with a key that is not in the map. Whereas multimap.count(\"not_in_map_key\") \u003d 0.",
      "parentUuid": "1acc1f53_8e39bbc6",
      "range": {
        "startLine": 63,
        "startChar": 9,
        "endLine": 63,
        "endChar": 30
      },
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a4c838a_2149d9ad",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/OptimizerVisitor.java",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-11T01:15:34Z",
      "side": 1,
      "message": "s/OptimizerVisitor/JChangeTrackingVisitor/",
      "range": {
        "startLine": 24,
        "startChar": 22,
        "endLine": 24,
        "endChar": 38
      },
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7db79e_ded0d9d7",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/OptimizerVisitor.java",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-11T17:57:50Z",
      "side": 1,
      "message": "Fields should probably be final and replace accesses with getters.",
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dabfe78a_891c598a",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/OptimizerVisitor.java",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 7701
      },
      "writtenOn": "2014-11-11T18:20:32Z",
      "side": 1,
      "message": "The other four fields other than optimzierCtx cannot be final since they are modified throughout the traverse process.\nAll the accesses are inside the OptimizerVisitor class or its subclasses. I don\u0027t think we need getters.",
      "parentUuid": "5a7db79e_ded0d9d7",
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7db79e_5e4a89a6",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/OptimizerVisitor.java",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-11T18:39:13Z",
      "side": 1,
      "message": "Sorry I meant private.",
      "parentUuid": "dabfe78a_891c598a",
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a4c838a_414a9574",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/Pruner.java",
        "patchSetId": 10
      },
      "lineNbr": 102,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-11T01:15:34Z",
      "side": 1,
      "message": "no need to qualify here just\n \n  super(optimizerCtx)l\n\nshould be sufficient.",
      "range": {
        "startLine": 102,
        "startChar": 12,
        "endLine": 102,
        "endChar": 23
      },
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1acc1f53_ee987f4f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/Pruner.java",
        "patchSetId": 10
      },
      "lineNbr": 102,
      "author": {
        "id": 7701
      },
      "writtenOn": "2014-11-11T17:16:40Z",
      "side": 1,
      "message": "Here I want to use the field of the outer class (optimizerCtx in Pruner) to initialize the inner class (CleanupRefsVisitor).",
      "parentUuid": "3a4c838a_414a9574",
      "range": {
        "startLine": 102,
        "startChar": 12,
        "endLine": 102,
        "endChar": 23
      },
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7db79e_7ee98592",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/Pruner.java",
        "patchSetId": 10
      },
      "lineNbr": 102,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-11-11T17:57:50Z",
      "side": 1,
      "message": "Fields in Optimizer visitor should be final, and there should be getter for currentField and currentMethod; I don\u0027t think you need a getter for optimizerCtx.",
      "parentUuid": "1acc1f53_ee987f4f",
      "range": {
        "startLine": 102,
        "startChar": 12,
        "endLine": 102,
        "endChar": 23
      },
      "revId": "87263758a728acd53381efaf69bb8af80f5b960a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}