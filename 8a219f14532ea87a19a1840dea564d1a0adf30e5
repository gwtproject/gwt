{
  "comments": [
    {
      "key": {
        "uuid": "d038a85e_a41bf664",
        "filename": "user/src/com/google/gwt/core/client/impl/Impl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5010
      },
      "writtenOn": "2014-10-14T21:48:34Z",
      "side": 1,
      "message": "Do we need to reserve $H anywhere to make sure a namer doesn\u0027t try to use it for something else? Or are symbols beginning with \"$\" already reserved?",
      "range": {
        "startLine": 94,
        "startChar": 12,
        "endLine": 94,
        "endChar": 15
      },
      "revId": "8a219f14532ea87a19a1840dea564d1a0adf30e5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d038a85e_24fcc683",
        "filename": "user/src/com/google/gwt/core/client/impl/Impl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-10-14T21:58:39Z",
      "side": 1,
      "message": "No, should be fine. The namer won\u0027t touch a raw JS property name anyway, that is, it won\u0027t rename \u0027o.$H\u0027. It only renames stuff that can provably be renamed (Java fields/funcs, and globals)\n\nThis method is only called on raw JS objects, never Java objects.  Even if another bit of Java code ended up with $H as a property name, it would be fine, since most of the code that tries to filter $H fields makes the implicit assumption that the underlying object is a JSO.\n\nIdeally once IE8 is pruned, we will change this to Object.defineProperty(o, \"$H\", { enumerable: false, writable: false, value: getNextHashId() })",
      "parentUuid": "d038a85e_a41bf664",
      "revId": "8a219f14532ea87a19a1840dea564d1a0adf30e5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d038a85e_78a592bb",
        "filename": "user/src/com/google/gwt/core/client/impl/Impl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-10-14T23:00:14Z",
      "side": 1,
      "message": "\u003e This method is only called on raw JS objects, never Java objects\n\nI don\u0027t think this is correct. This method is called for any object including java objects - this is basically the implementation of System.identityHashCode. If you use bracket notation to access a field will GWT preserve the name? If not it can use the name somewhere else which will break things.\n\nPerhaps closure compiler should be instructed to not touch \"$H\" instead?",
      "parentUuid": "d038a85e_24fcc683",
      "revId": "8a219f14532ea87a19a1840dea564d1a0adf30e5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d038a85e_b839dac7",
        "filename": "user/src/com/google/gwt/core/client/impl/Impl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5010
      },
      "writtenOn": "2014-10-14T23:04:58Z",
      "side": 1,
      "message": "That\u0027s what I was afraid of. Maybe we should add $H to JsProtectedNames?",
      "parentUuid": "d038a85e_78a592bb",
      "revId": "8a219f14532ea87a19a1840dea564d1a0adf30e5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d038a85e_38b2aade",
        "filename": "user/src/com/google/gwt/core/client/impl/Impl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-10-14T23:12:16Z",
      "side": 1,
      "message": "GWT will not obfuscate unknown properties (that don\u0027t map via JSNI field refs) in JSNI methods. Otherwise, JSNI code which calls external third party JS libraries wouldn\u0027t work. (e.g. jQuery.blah would cause \u0027blah\u0027 to be obfuscated)\n\nThis change doesn\u0027t change anything. o.$H and o[\u0027$H\u0027] have the same semantics as far as JSNI is concerned. \n\nI talked to John Lenz about making Closure not touch $H, but it is problematic. It requires turning off a JS compiler optimization pass which will increase code size.",
      "parentUuid": "d038a85e_78a592bb",
      "revId": "8a219f14532ea87a19a1840dea564d1a0adf30e5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}