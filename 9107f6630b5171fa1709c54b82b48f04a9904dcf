{
  "comments": [
    {
      "key": {
        "uuid": "7aaefb66_7a552110",
        "filename": "dev/codeserver/java/com/google/gwt/dev/codeserver/Recompiler.java",
        "patchSetId": 2
      },
      "lineNbr": 283,
      "author": {
        "id": 5010
      },
      "writtenOn": "2014-11-12T01:14:49Z",
      "side": 1,
      "message": "This should be synchronized since the compiler isn\u0027t thread-safe.\n\nAlso, remove \"public\" since the Recompiler isn\u0027t public.\n\n(All package-local methods on Recompiler are synchronized.)",
      "range": {
        "startLine": 283,
        "startChar": 15,
        "endLine": 283,
        "endChar": 16
      },
      "revId": "9107f6630b5171fa1709c54b82b48f04a9904dcf",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aaefb66_ba0f199e",
        "filename": "dev/codeserver/java/com/google/gwt/dev/codeserver/Recompiler.java",
        "patchSetId": 2
      },
      "lineNbr": 283,
      "author": {
        "id": 5010
      },
      "writtenOn": "2014-11-12T01:24:42Z",
      "side": 1,
      "message": "On second thought, \"synchronized\" here doesn\u0027t do the job in the case where there are multiple modules, because there\u0027s a Recompiler per module. It didn\u0027t matter before because everything went through JobRunner.\n\nOne possibility is to make all these methods synchronize on a different lock. Maybe introduce a CompilerLock class and pass it to all the Recompilers at startup?\n\nFor 2.7, it might be a less disruptive change to call a helper method on JobRunner and make sure all the calls from there use a common lock.",
      "parentUuid": "7aaefb66_7a552110",
      "range": {
        "startLine": 283,
        "startChar": 15,
        "endLine": 283,
        "endChar": 16
      },
      "revId": "9107f6630b5171fa1709c54b82b48f04a9904dcf",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}