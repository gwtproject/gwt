{
  "comments": [
    {
      "key": {
        "uuid": "bf0225b9_3bf383b1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-12-04T23:42:32Z",
      "side": 1,
      "message": "[warning] Commit message lines should be 72 characters or fewer.",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0225b9_8c70977a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-05T02:12:01Z",
      "side": 1,
      "message": "update.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 45
      },
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0225b9_2c634bba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-05T02:12:01Z",
      "side": 1,
      "message": "No longer true.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 38,
        "endChar": 32
      },
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43f7ab4_44d50e4d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-12-05T23:53:41Z",
      "side": 1,
      "message": "Still true. The compiler inserts the call, but you still need to define this function in the linker, or concatenate it onto the output before Closure compiler sees it.",
      "parentUuid": "bf0225b9_2c634bba",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0225b9_1e94ad48",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/MonolithicJavaToJavaScriptCompiler.java",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-05T00:33:02Z",
      "side": 1,
      "message": "can you move this into getTypeMapper() and getTypeOrder().",
      "range": {
        "startLine": 121,
        "startChar": 5,
        "endLine": 121,
        "endChar": 74
      },
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43f7ab4_19e08fd5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/MonolithicJavaToJavaScriptCompiler.java",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-12-05T23:53:41Z",
      "side": 1,
      "message": "Done. But since those methods don\u0027t have access to the permutation variable, I pass it as a param.",
      "parentUuid": "bf0225b9_1e94ad48",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0225b9_fea9f972",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 5
      },
      "lineNbr": 2229,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-05T00:33:02Z",
      "side": 1,
      "message": "Comment from revision 4. \n\nLet\u0027s use the the closureStyle (cast maps in an array) for all codepaths. (I don\u0027t think it will contribute noticeable overhead).",
      "range": {
        "startLine": 2220,
        "startChar": 0,
        "endLine": 2229,
        "endChar": 13
      },
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43f7ab4_b9e503de",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 5
      },
      "lineNbr": 2229,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-12-05T23:53:41Z",
      "side": 1,
      "message": "You sure? Seems that you\u0027ll run O(# defineClasses * avg_castmap_size) ops and pay with the creation of an array, a loop, followed by an object literal. \n\nI don\u0027t mind doing this for Inbox, but it may impact startup time for others. It\u0027ll also impact memory since you no longer get castmap interning. I added ArrayLiteral interning here, but ideally, we\u0027d want to intern/hoist the method calls as well.\n\nWhen I originally added castMap interning, it was because Java primitive arrays were eating up huge memory, because unlike classes, where you have one cast map per class definition, for Arrays, you have one cast map *per instance*",
      "parentUuid": "bf0225b9_fea9f972",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0225b9_0cf92790",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JjsUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-05T02:04:27Z",
      "side": 1,
      "message": "Can we unify Mode.Closure and the new compiler property into an experimental Option (-XoptmizeForClosurePostprocessing) or something like that.",
      "range": {
        "startLine": 120,
        "startChar": 27,
        "endLine": 120,
        "endChar": 56
      },
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43f7ab4_3946b3a1",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JjsUtils.java",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-12-05T23:53:41Z",
      "side": 1,
      "message": "That\u0027s likely to break some of the other internal users if I remove Mode.Closure from the enum.  However, I could change the config property to be a flag. \n\nQ1\u002715 I plan to be working on \u0027Bachification\u0027 of the output, outputing Closure friendly JsDoc\u0027ed code, and once that\u0027s done, we could turn on Closure post-processing as default for optimize, disabling optimizeJs() passes.",
      "parentUuid": "bf0225b9_0cf92790",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0225b9_1bf03fa1",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ResolveRuntimeTypeReferences.java",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-12-04T23:42:32Z",
      "side": 1,
      "message": "[error] Unused import - com.google.gwt.dev.jjs.ast.JLiteral.",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43f7ab4_f9ba6bb0",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ResolveRuntimeTypeReferences.java",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-12-05T23:53:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0225b9_1bf03fa1",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0225b9_1e9aed45",
        "filename": "dev/core/src/com/google/gwt/dev/js/JsInliner.java",
        "patchSetId": 5
      },
      "lineNbr": 754,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-05T00:33:02Z",
      "side": 1,
      "message": "remove.",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43f7ab4_5993b73b",
        "filename": "dev/core/src/com/google/gwt/dev/js/JsInliner.java",
        "patchSetId": 5
      },
      "lineNbr": 754,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-12-05T23:53:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0225b9_1e9aed45",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0225b9_fec5791b",
        "filename": "dev/core/src/com/google/gwt/dev/js/JsInliner.java",
        "patchSetId": 5
      },
      "lineNbr": 844,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-05T00:33:02Z",
      "side": 1,
      "message": "Ha, there was already a top level function....\n\nI assumed that the visitor was accepting the global statements directly... \n\ngreat.",
      "range": {
        "startLine": 836,
        "startChar": 0,
        "endLine": 844,
        "endChar": 14
      },
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43f7ab4_198d2f14",
        "filename": "dev/core/src/com/google/gwt/dev/js/JsInliner.java",
        "patchSetId": 5
      },
      "lineNbr": 844,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-12-05T23:53:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0225b9_fec5791b",
      "revId": "92e6a92416de91708050a13fe98d454e415a69d5",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}