{
  "comments": [
    {
      "key": {
        "uuid": "56202fde_5d2fd7a7",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 3
      },
      "lineNbr": 2276,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-08-07T22:31:06Z",
      "side": 1,
      "message": "Is this only needed for classes which are subtypes of another class and override something?\n\nWasn\u0027t this a performance hit on IE10/11 and had to be rolled back? Do we need to special case this for non-IE?",
      "revId": "93d274c636f60d30c11a408389dafa47f8d0a4e4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6e89fcd_42b2761d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 3
      },
      "lineNbr": 2276,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-08-08T00:29:43Z",
      "side": 1,
      "message": "My guess is that in IE10/11 the dynamic property access was causing the problem. (we were doing _[Â¨_$GWT$_\"+ typeid] in defineClass) \n\nI made this patch to test if that was the case.",
      "parentUuid": "56202fde_5d2fd7a7",
      "revId": "93d274c636f60d30c11a408389dafa47f8d0a4e4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56202fde_fd368bfa",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 3
      },
      "lineNbr": 2603,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-08-07T22:31:06Z",
      "side": 1,
      "message": "Since we\u0027re not obfuscating it, maybe we can get away with something shorter, like _$G, or perhaps align it with the way Class.getName() is represented in -XdisableClassMetaData\n\nIf there are 3000 classes, shaving off 4 characters is 12k which a reasonable savings.",
      "revId": "93d274c636f60d30c11a408389dafa47f8d0a4e4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56202fde_7255a585",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 3
      },
      "lineNbr": 2603,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-08-08T00:25:21Z",
      "side": 1,
      "message": "Wouldn\u0027t Gzip handle this kind of recurring patterns pretty well?",
      "parentUuid": "56202fde_fd368bfa",
      "revId": "93d274c636f60d30c11a408389dafa47f8d0a4e4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6e89fcd_221aca60",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 3
      },
      "lineNbr": 2603,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-08-08T00:29:43Z",
      "side": 1,
      "message": "There are many further optimizations, but first I want to see if this patch behaves well.\n\nWe can optimize this field away if there is already a \"distinguishing field\" (any non static field that has a non null initializer) or, as you noted, if there are no overrides.\n\nAs for making it shorter, I don\u0027t think it will make much of a difference in the compressed size.",
      "parentUuid": "56202fde_fd368bfa",
      "revId": "93d274c636f60d30c11a408389dafa47f8d0a4e4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}