{
  "comments": [
    {
      "key": {
        "uuid": "f093eb15_d1c0d463",
        "filename": "user/src/com/google/gwt/core/client/impl/Coercions.java",
        "patchSetId": 12
      },
      "lineNbr": 28,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-09-04T02:21:45Z",
      "side": 1,
      "message": "shouldn\u0027t be needed. double to int cast should already do that.",
      "range": {
        "startLine": 28,
        "startChar": 27,
        "endLine": 28,
        "endChar": 34
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90d1cfe4_06da8af9",
        "filename": "user/src/com/google/gwt/core/client/impl/Coercions.java",
        "patchSetId": 12
      },
      "lineNbr": 28,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-09-07T21:59:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f093eb15_d1c0d463",
      "range": {
        "startLine": 28,
        "startChar": 27,
        "endLine": 28,
        "endChar": 34
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f093eb15_b19c288d",
        "filename": "user/src/com/google/gwt/core/client/impl/Coercions.java",
        "patchSetId": 12
      },
      "lineNbr": 36,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-09-04T02:21:45Z",
      "side": 1,
      "message": "What about calling this ensureInt and using static imports instead? I think that reads better.\nAlso keeping it as a separate call in call sites can help readability. e.g.\n\n  hashCode \u003d ensureInt(hashCode); // make sure we don\u0027t overflow",
      "range": {
        "startLine": 36,
        "startChar": 27,
        "endLine": 36,
        "endChar": 34
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90d1cfe4_26fc6e4b",
        "filename": "user/src/com/google/gwt/core/client/impl/Coercions.java",
        "patchSetId": 12
      },
      "lineNbr": 36,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-09-07T22:14:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f093eb15_b19c288d",
      "range": {
        "startLine": 36,
        "startChar": 27,
        "endLine": 36,
        "endChar": 34
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f04e8b81_44798302",
        "filename": "user/src/com/google/gwt/core/client/impl/Coercions.java",
        "patchSetId": 12
      },
      "lineNbr": 43,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-09-04T02:21:45Z",
      "side": 1,
      "message": "I have patch to remove String boxing support. I guess we can remove this.",
      "range": {
        "startLine": 43,
        "startChar": 30,
        "endLine": 43,
        "endChar": 47
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90d1cfe4_460172a0",
        "filename": "user/src/com/google/gwt/core/client/impl/Coercions.java",
        "patchSetId": 12
      },
      "lineNbr": 43,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-09-07T22:14:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f04e8b81_44798302",
      "range": {
        "startLine": 43,
        "startChar": 30,
        "endLine": 43,
        "endChar": 47
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f093eb15_7118e065",
        "filename": "user/src/com/google/gwt/core/client/impl/Coercions.java",
        "patchSetId": 12
      },
      "lineNbr": 49,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-09-04T02:21:45Z",
      "side": 1,
      "message": "The example doesn\u0027t look like a good example for unsigned int conversion.",
      "range": {
        "startLine": 48,
        "startChar": 45,
        "endLine": 49,
        "endChar": 27
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f093eb15_7141c023",
        "filename": "user/src/com/google/gwt/core/client/impl/Coercions.java",
        "patchSetId": 12
      },
      "lineNbr": 52,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-09-04T02:21:45Z",
      "side": 1,
      "message": "Does this operation really do conversion to unsigned int?",
      "range": {
        "startLine": 52,
        "startChar": 11,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90d1cfe4_e6dc26f8",
        "filename": "user/src/com/google/gwt/core/client/impl/Coercions.java",
        "patchSetId": 12
      },
      "lineNbr": 52,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-09-07T21:59:42Z",
      "side": 1,
      "message": "It actually does but it\u0027s not \u0027java int\u0027 anymore. I moved it to jsni.",
      "parentUuid": "f093eb15_7141c023",
      "range": {
        "startLine": 52,
        "startChar": 11,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f093eb15_d103f42c",
        "filename": "user/super/com/google/gwt/emul/java/math/BigInteger.java",
        "patchSetId": 12
      },
      "lineNbr": 505,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-09-04T02:21:45Z",
      "side": 1,
      "message": "I guess this should be just double to int cast.",
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f093eb15_9127acd4",
        "filename": "user/super/com/google/gwt/emul/java/math/BigInteger.java",
        "patchSetId": 12
      },
      "lineNbr": 509,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-09-04T02:21:45Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 508,
        "startChar": 27,
        "endLine": 509,
        "endChar": 30
      },
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f04e8b81_e4b06fc7",
        "filename": "user/super/com/google/gwt/emul/java/util/AbstractList.java",
        "patchSetId": 12
      },
      "lineNbr": 265,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-09-04T02:21:45Z",
      "side": 1,
      "message": "What about having a utility similar to Objects.hash but work on an iterator? You can put it as a package visible in Collections or AbstractionCollection perhaps?",
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90d1cfe4_a6d61ed4",
        "filename": "user/super/com/google/gwt/emul/java/util/AbstractList.java",
        "patchSetId": 12
      },
      "lineNbr": 265,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-09-07T21:59:42Z",
      "side": 1,
      "message": "Map is not collection so I cannot use AbstractCollection for that.\n\nI cant use common method because AbstractList uses slightly different calculation of hashCode than AbstractSet and AbstractMap do.\n\nIf we don\u0027t care about hashcode compliant with JDK values, I could place this method in Collections.\n\nSo we have 3 methods and I don\u0027t know if it\u0027s worth to change it. What do you think?",
      "parentUuid": "f04e8b81_e4b06fc7",
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0c4cb62_e25c4129",
        "filename": "user/super/com/google/gwt/emul/java/util/AbstractList.java",
        "patchSetId": 12
      },
      "lineNbr": 265,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-09-13T01:46:19Z",
      "side": 1,
      "message": "I think that is ok to have the same calculation and there is a good value in sharing the code.\nWe can put it into Collections via package visible method.",
      "parentUuid": "90d1cfe4_a6d61ed4",
      "revId": "962d55264766be424200cbf9411305a9e3cbb64d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}