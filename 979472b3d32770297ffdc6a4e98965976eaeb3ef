{
  "comments": [
    {
      "key": {
        "uuid": "d25390c8_a241ab57",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:13:50Z",
      "side": 1,
      "message": "You can move the check here and remove the extra constructor.",
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9714aa34_99537b28",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-12T10:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d25390c8_a241ab57",
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2ab34ee_4c8b3f7b",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-11T12:34:33Z",
      "side": 1,
      "message": "I\u0027m not sure about this use case:\nProbably we always want to get here exception asap otherwise it might be deferred",
      "range": {
        "startLine": 57,
        "startChar": 15,
        "endLine": 57,
        "endChar": 40
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25390c8_427c77a3",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:13:50Z",
      "side": 1,
      "message": "In general it doesn\u0027t matter if the exception is delayed as long as you can trace it back in a reasonable way.\n\nHowever since this class generally designed for and used to fail-fast on null; I think having checkCriticalNotNull here is reasonable.",
      "parentUuid": "f2ab34ee_4c8b3f7b",
      "range": {
        "startLine": 57,
        "startChar": 15,
        "endLine": 57,
        "endChar": 40
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92b1185a_f1276854",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-05-11T19:37:08Z",
      "side": 1,
      "message": "Yes I would stick to critical.",
      "parentUuid": "d25390c8_427c77a3",
      "range": {
        "startLine": 57,
        "startChar": 15,
        "endLine": 57,
        "endChar": 40
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9714aa34_992c9b9e",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-12T10:54:03Z",
      "side": 1,
      "message": "What do you think about this check?\nEventually user code will fail on NPE if we make this check not critical.",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 65,
        "endChar": 24
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1239a8b4_ea665e42",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-12T21:30:26Z",
      "side": 1,
      "message": "I think this scenario is no different than the check in constructor for null where we decided to keep critical as the class generally designed for failing fast on null.",
      "parentUuid": "9714aa34_992c9b9e",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 65,
        "endChar": 24
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2ab34ee_aceaa31f",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-11T12:34:33Z",
      "side": 1,
      "message": "I\u0027m not sure about this use case:\nProbably we always want to get here exception asap otherwise it might be deferred",
      "range": {
        "startLine": 94,
        "startChar": 13,
        "endLine": 94,
        "endChar": 52
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25390c8_42055703",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:13:50Z",
      "side": 1,
      "message": "This is one of the case where we don\u0027t go critical.\nThe usage will immediately fail when they make a call and they can trace it back.",
      "parentUuid": "f2ab34ee_aceaa31f",
      "range": {
        "startLine": 94,
        "startChar": 13,
        "endLine": 94,
        "endChar": 52
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f216d4ff_376a72a6",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-05-11T19:37:08Z",
      "side": 1,
      "message": "Well, in the easy case you can trace it back. If you have some complex calculations on optional values it could be that an optional will end up in a collection and suddenly you have a null entry in that collection and you might not know where it came from.",
      "parentUuid": "d25390c8_42055703",
      "range": {
        "startLine": 94,
        "startChar": 13,
        "endLine": 94,
        "endChar": 52
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25390c8_028f5f3d",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:53:25Z",
      "side": 1,
      "message": "That\u0027s true but also true for many other non-critical checks. \nIn many cases it will fail much sooner. As long as some NPE is reported, you know what to look for.\nIf you cannot trace down the issue, you still have the option to do the release with checks enabled to trace it down.\n\nIf you draw the line there (i.e. not leaking null values); people cannot have benefit from the check removal (if they opted-into it) since in many cases returning null instead of exception is the consequence of check removal.",
      "parentUuid": "f216d4ff_376a72a6",
      "range": {
        "startLine": 94,
        "startChar": 13,
        "endLine": 94,
        "endChar": 52
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9714aa34_f925d7b5",
        "filename": "user/super/com/google/gwt/emul/java/util/Optional.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-12T10:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d25390c8_028f5f3d",
      "range": {
        "startLine": 94,
        "startChar": 13,
        "endLine": 94,
        "endChar": 52
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25390c8_62117341",
        "filename": "user/super/com/google/gwt/emul/java/util/PrimitiveIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:13:50Z",
      "side": 1,
      "message": "This is one of the cases where we don\u0027t even need a check because it will fail in the next line.",
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9714aa34_593723ef",
        "filename": "user/super/com/google/gwt/emul/java/util/PrimitiveIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-12T10:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d25390c8_62117341",
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25390c8_221b7b63",
        "filename": "user/super/com/google/gwt/emul/java/util/PrimitiveIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:13:50Z",
      "side": 1,
      "message": "same here and others",
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9714aa34_393c6fcf",
        "filename": "user/super/com/google/gwt/emul/java/util/PrimitiveIterator.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-12T10:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d25390c8_221b7b63",
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2ab34ee_2cdfd378",
        "filename": "user/super/com/google/gwt/emul/java/util/Spliterators.java",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-11T12:36:32Z",
      "side": 1,
      "message": "not sure about this either. what do you think?",
      "range": {
        "startLine": 285,
        "startChar": 25,
        "endLine": 285,
        "endChar": 50
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25390c8_422f977a",
        "filename": "user/super/com/google/gwt/emul/java/util/Spliterators.java",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:13:50Z",
      "side": 1,
      "message": "I think this one is good.",
      "parentUuid": "f2ab34ee_2cdfd378",
      "range": {
        "startLine": 285,
        "startChar": 25,
        "endLine": 285,
        "endChar": 50
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2ab34ee_ecf4ab01",
        "filename": "user/super/com/google/gwt/emul/java/util/Spliterators.java",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-11T12:34:33Z",
      "side": 1,
      "message": "I\u0027m not sure about this:\n\nIf this check would be omitted, it would leave this spliterator in a consistent state but the user code might be looped forever or it might think that spliterator returned null element from iterator",
      "range": {
        "startLine": 303,
        "startChar": 6,
        "endLine": 303,
        "endChar": 37
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25390c8_2264dbd4",
        "filename": "user/super/com/google/gwt/emul/java/util/Spliterators.java",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:13:50Z",
      "side": 1,
      "message": "This seems reasonable.",
      "parentUuid": "f2ab34ee_ecf4ab01",
      "range": {
        "startLine": 303,
        "startChar": 6,
        "endLine": 303,
        "endChar": 37
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2ab34ee_8cefe72f",
        "filename": "user/super/com/google/gwt/emul/java/util/Spliterators.java",
        "patchSetId": 1
      },
      "lineNbr": 718,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-11T12:34:33Z",
      "side": 1,
      "message": "I guess we want it to be always thrown here because returning null in Spliterator.getComparator means spliterator does have natural comparator",
      "range": {
        "startLine": 718,
        "startChar": 4,
        "endLine": 718,
        "endChar": 67
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25390c8_a2a20b0d",
        "filename": "user/super/com/google/gwt/emul/java/util/Spliterators.java",
        "patchSetId": 1
      },
      "lineNbr": 718,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:13:50Z",
      "side": 1,
      "message": "I don\u0027t understand the API enough to judge this one.",
      "parentUuid": "f2ab34ee_8cefe72f",
      "range": {
        "startLine": 718,
        "startChar": 4,
        "endLine": 718,
        "endChar": 67
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d211d00a_d604e26e",
        "filename": "user/super/com/google/gwt/emul/java/util/Spliterators.java",
        "patchSetId": 1
      },
      "lineNbr": 718,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-05-11T19:37:08Z",
      "side": 1,
      "message": "A Spliterator can be sorted or not. If its sorted it can be sorted by a comparator or by natural order. If its sorted by a comparator that comparator will be returned by Spliterator.getComparator(). If its sorted naturally then Spliterator.getComparator() will return null. If you call Spliterator.getComparator() on an unsorted spliterator you should get IllegalStateException.\n\nIf this check here would not exist you would never get an illegalStateException and eventually \"null\" is returned as comparator. But that could cause dependent code think that the spliterator is sorted (natural order) while in reality it is not.\n\nI think I would keep the critical check.",
      "parentUuid": "d25390c8_a2a20b0d",
      "range": {
        "startLine": 718,
        "startChar": 4,
        "endLine": 718,
        "endChar": 67
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d25390c8_0592095a",
        "filename": "user/super/com/google/gwt/emul/java/util/Spliterators.java",
        "patchSetId": 1
      },
      "lineNbr": 718,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-11T19:53:25Z",
      "side": 1,
      "message": "SGTM.",
      "parentUuid": "d211d00a_d604e26e",
      "range": {
        "startLine": 718,
        "startChar": 4,
        "endLine": 718,
        "endChar": 67
      },
      "revId": "979472b3d32770297ffdc6a4e98965976eaeb3ef",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}