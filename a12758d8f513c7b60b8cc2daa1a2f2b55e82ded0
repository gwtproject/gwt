{
  "comments": [
    {
      "key": {
        "uuid": "a48dbaf4_a6bab2dd",
        "filename": "user/super/com/google/gwt/emul/java/util/ArrayList.java",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-12-09T13:07:09Z",
      "side": 1,
      "message": "I\u0027m concernted that ArrayList uses Object.equals to find value but you\u0027ve changed it to find by reference.",
      "revId": "a12758d8f513c7b60b8cc2daa1a2f2b55e82ded0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24a1ca5e_45a3a0b3",
        "filename": "user/super/com/google/gwt/emul/java/util/ArrayList.java",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-12-09T13:17:05Z",
      "side": 1,
      "message": "I agree with Andrei. With this change, I think you break the contract of indexOf() (and contains()) method of a List:\n\"returns the lowest index i\u003c such that (o\u003d\u003dnull ? get(i)\u003d\u003dnull : o.equals(get(i))\"",
      "parentUuid": "a48dbaf4_a6bab2dd",
      "revId": "a12758d8f513c7b60b8cc2daa1a2f2b55e82ded0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a48dbaf4_2624629b",
        "filename": "user/super/com/google/gwt/emul/java/util/ArrayList.java",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5055
      },
      "writtenOn": "2014-12-09T13:34:38Z",
      "side": 1,
      "message": "@Andrey, Well, the gwt Object.equals implementation eventually does an equal comparison which will be implemented in JS in the same way I\u0027m doing\n\n  public boolean equals(Object other) {\n    return this \u003d\u003d other;\n  }",
      "parentUuid": "a48dbaf4_a6bab2dd",
      "revId": "a12758d8f513c7b60b8cc2daa1a2f2b55e82ded0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04ccc652_8b720d7d",
        "filename": "user/super/com/google/gwt/emul/java/util/ArrayList.java",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5055
      },
      "writtenOn": "2014-12-09T13:34:38Z",
      "side": 1,
      "message": "@Julien, maybe I don\u0027t follow what are we breaking here, if our array contains a \u0027null\u0027 and object is \u0027null\u0027 in both cases I\u0027m returning the first occurrence  of the null. Could you elaborate a bit more what is broken?",
      "parentUuid": "24a1ca5e_45a3a0b3",
      "revId": "a12758d8f513c7b60b8cc2daa1a2f2b55e82ded0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a48dbaf4_46e086d6",
        "filename": "user/super/com/google/gwt/emul/java/util/ArrayList.java",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-12-09T13:37:21Z",
      "side": 1,
      "message": "It\u0027s only true for objects that don\u0027t override Object.equals method.",
      "parentUuid": "a48dbaf4_2624629b",
      "revId": "a12758d8f513c7b60b8cc2daa1a2f2b55e82ded0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24a1ca5e_c58ed03c",
        "filename": "user/super/com/google/gwt/emul/java/util/ArrayList.java",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-12-09T13:42:23Z",
      "side": 1,
      "message": "My point is that you are not using the equals() method anymore to compare the equality. Instead you are using the \u0027\u003d\u003d\u0027 operator.",
      "parentUuid": "04ccc652_8b720d7d",
      "revId": "a12758d8f513c7b60b8cc2daa1a2f2b55e82ded0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04ccc652_ab5029a1",
        "filename": "user/super/com/google/gwt/emul/java/util/ArrayList.java",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5055
      },
      "writtenOn": "2014-12-09T15:03:16Z",
      "side": 1,
      "message": "@Andrei, @Julien, since it seems there is no way to change the behaviour of native JS implementation to use equals, it\u0027s better to abandon this. It\u0027s a  shame since improvement in performance is amazing.",
      "parentUuid": "24a1ca5e_c58ed03c",
      "revId": "a12758d8f513c7b60b8cc2daa1a2f2b55e82ded0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a48dbaf4_8351a05c",
        "filename": "user/super/com/google/gwt/emul/java/util/ArrayList.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 5385
      },
      "writtenOn": "2014-12-09T10:46:31Z",
      "side": 1,
      "message": "Can we use deffered binding here like we did in map?",
      "range": {
        "startLine": 49,
        "startChar": 4,
        "endLine": 49,
        "endChar": 34
      },
      "revId": "a12758d8f513c7b60b8cc2daa1a2f2b55e82ded0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04ccc652_eb663109",
        "filename": "user/super/com/google/gwt/emul/java/util/ArrayList.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 5055
      },
      "writtenOn": "2014-12-09T11:14:14Z",
      "side": 1,
      "message": "I think it\u0027s a good idea, maybe we could have a common class to enclose all native optimisation methods, something like GWT.create(JsNative.class). Any better name for it?",
      "parentUuid": "a48dbaf4_8351a05c",
      "range": {
        "startLine": 49,
        "startChar": 4,
        "endLine": 49,
        "endChar": 34
      },
      "revId": "a12758d8f513c7b60b8cc2daa1a2f2b55e82ded0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}