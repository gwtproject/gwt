{
  "comments": [
    {
      "key": {
        "uuid": "8497f201_fe27e147",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JProgram.java",
        "patchSetId": 19
      },
      "lineNbr": 65,
      "author": {
        "id": 5001
      },
      "writtenOn": "2015-08-31T20:53:38Z",
      "side": 1,
      "message": "I\u0027m not really happy with the name given to this, I\u0027d welcome suggestions for a better name.",
      "range": {
        "startLine": 65,
        "startChar": 27,
        "endLine": 65,
        "endChar": 28
      },
      "revId": "a6e022c279d139684c4fc9c4866ddfc7ffd2f7e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_de51c5a4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/EqualityNormalizer.java",
        "patchSetId": 19
      },
      "lineNbr": 154,
      "author": {
        "id": 5001
      },
      "writtenOn": "2015-08-31T20:53:38Z",
      "side": 1,
      "message": "The last bit of hardcoded-ness. It would be nice to get rid of the strategy matrix and this hardcoded lookup here in favor of putting the logic on the enums themselves,  but I\u0027m ok with leaving the table here.",
      "range": {
        "startLine": 154,
        "startChar": 51,
        "endLine": 154,
        "endChar": 52
      },
      "revId": "a6e022c279d139684c4fc9c4866ddfc7ffd2f7e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_81299ccb",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Util.java",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-01T00:52:06Z",
      "side": 1,
      "message": "revert.",
      "revId": "a6e022c279d139684c4fc9c4866ddfc7ffd2f7e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_cd27d576",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Util.java",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 5001
      },
      "writtenOn": "2015-09-01T21:39:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8497f201_81299ccb",
      "revId": "a6e022c279d139684c4fc9c4866ddfc7ffd2f7e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_2155283a",
        "filename": "user/super/com/google/gwt/emul/java/lang/Boolean.java",
        "patchSetId": 19
      },
      "lineNbr": 75,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-01T00:52:06Z",
      "side": 1,
      "message": "Addd a comment here.\n\n// Add a call to $createBoolean(value) here so that the method is referenced and not pruned when new Boolean(value) is replaced by $createBoolean(value) by RewriteConstructorCallsForUnboxedTypes.\n\nor a better written one to this effect. Add to every constructor here, in String and in Double.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 25
      },
      "revId": "a6e022c279d139684c4fc9c4866ddfc7ffd2f7e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8497f201_0d1e1d25",
        "filename": "user/super/com/google/gwt/emul/java/lang/Boolean.java",
        "patchSetId": 19
      },
      "lineNbr": 75,
      "author": {
        "id": 5001
      },
      "writtenOn": "2015-09-01T21:39:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8497f201_2155283a",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 25
      },
      "revId": "a6e022c279d139684c4fc9c4866ddfc7ffd2f7e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}