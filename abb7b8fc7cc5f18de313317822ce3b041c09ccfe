{
  "comments": [
    {
      "key": {
        "uuid": "3e88e4e1_f67866bf",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-10-14T15:39:21Z",
      "side": 1,
      "message": "\"... then toInt32(x) would ...\"",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e58386f_7a3e193e",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5385
      },
      "writtenOn": "2013-10-17T14:34:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e88e4e1_f67866bf",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e88e4e1_16762ad3",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-10-14T15:39:21Z",
      "side": 1,
      "message": "Doh, \"modulo 2^32\".  Also, trailing period.",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e5d4460_5c5a312c",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 5385
      },
      "writtenOn": "2013-10-17T14:34:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e88e4e1_16762ad3",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe5c8c37_6a28d763",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-10-14T22:10:41Z",
      "side": 1,
      "message": "These are internal so any reasons to keep the int versions? i.e. why not just change the return types to double? (for whole patch)",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e58386f_1a39dd54",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 5385
      },
      "writtenOn": "2013-10-17T14:34:53Z",
      "side": 1,
      "message": "This would mean breaking a lot of people who expect this method to return int.",
      "parentUuid": "fe5c8c37_6a28d763",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de51881f_a99b796b",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-10-14T22:10:41Z",
      "side": 1,
      "message": "I got confused. Why all of this newly added methods return int and rounded with toInt32 again? Isn\u0027t returning int from native method same as \"x | 0\". I thought you introduced them to return double?",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e88e4e1_c316bd5d",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-10-14T22:14:41Z",
      "side": 1,
      "message": "I think you\u0027re confusing \"x | 0\" with \"x || 0\"?  \"x | 0\" does the ToInt32() conversion, while \"x || 0\" is like \"x ? x : 0\" so that for if the field is null or undefined we return 0 instead.",
      "parentUuid": "de51881f_a99b796b",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe5c8c37_aa45af24",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-10-14T22:55:29Z",
      "side": 1,
      "message": "I think you misunderstand. Let me try to rephrase:\nAFAIK, any native method returning int (i.e. int return type method signature) suppose to do a bitwise-or with 0 to round; otherwise GWT can not maintain correct semantics for integers in java.\nSo returning int and then doing a bitwise-or with 0 should be a no-op. Am I missing something?",
      "parentUuid": "3e88e4e1_c316bd5d",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e88e4e1_232e8904",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-10-14T23:18:02Z",
      "side": 1,
      "message": "Oh, I see.  Agreed, I always thought the compiler was responsible for converting to int too, but apparently it doesn\u0027t (at least for JSNI return values).  E.g., I just tried compiling\n\npublic class Foo implements EntryPoint {\n  @Override\n  public void onModuleLoad() {\n    alert(get());\n  }\n\n  private native void alert(int x) /*-{\n    $wnd.alert(x);\n  }-*/;\n\n  private native int get() /*-{\n    return 4.2;\n  }-*/;\n}\n\nand in the generated output I see \"$wnd.alert(4.2);\".\n\nI think this is another case of the GWT compiler trusting the JSNI author to fulfill the type contract. :(",
      "parentUuid": "fe5c8c37_aa45af24",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe5c8c37_8a42eb18",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-10-14T23:25:00Z",
      "side": 1,
      "message": "Hmm, I guess it only rounds up in between arithmetic operations - not returns from native methods.\nBut, anyhow, I don\u0027t think that is wise to leave it to the developer if there is no really good reason to do so :)\n\nAdding rluble as a reviewer, so he can chime in.",
      "parentUuid": "3e88e4e1_232e8904",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e88e4e1_e3bd0154",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5105
      },
      "writtenOn": "2013-10-14T23:36:16Z",
      "side": 1,
      "message": "Should the compiler rewrite the return as return round(42) here?\n\nI think that the pass that will check for cast on return of JSNI can also do that.",
      "parentUuid": "3e88e4e1_232e8904",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e588040_8e455f4c",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5385
      },
      "writtenOn": "2013-10-15T12:17:08Z",
      "side": 1,
      "message": "I am guessing that adding \"| 0\" on very JSNI call (and possible other coercion) would significantly increase code size.\nWe have been doing these coercions manually all over GWT. e.g. Cast.java even takes advantage of this being faster and skipping coercion in boolean context.\n\nI am not opposing to adding this to the compiler, but this would be a much bigger change throughout all of the GWT SDK. I would like to see this get in since this blocks IE10. We are not changing any public APIs and are free to follow up with a compiler pass if we decide to go this route.",
      "parentUuid": "3e88e4e1_e3bd0154",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e4b9073_b8f741b5",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5100
      },
      "writtenOn": "2013-10-15T14:43:02Z",
      "side": 1,
      "message": "JSNI has always been a \"no training wheels\" interface - if you have the compiler force everything to match the declared return type, you are dramatically increasing the cost of every JSNI call (many of which are simple property accessors).  I disagree with this proposal, and think it should remain up to the JSNI writer to get the type correct, or add their own coercion if it isn\u0027t constant.\n\nYou also get errors in DevMode when you don\u0027t have the correct type, though if we really are switching to SDM then perhaps there should be a flag which adds assertions on the returned type from JSNI.",
      "parentUuid": "1e588040_8e455f4c",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de51881f_6cb90fbd",
        "filename": "user/src/com/google/gwt/dom/client/DOMImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-10-15T16:55:11Z",
      "side": 1,
      "message": "I don\u0027t think \"| 0\" would increase code size significantly and it\u0027s easy to verify the impact but let\u0027s continue that in a separate discussion.\n\nI\u0027ll follow up on that when I return back.",
      "parentUuid": "9e4b9073_b8f741b5",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e88e4e1_764e969e",
        "filename": "user/src/com/google/gwt/dom/client/DOMImplStandardBase.java",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-10-14T15:39:21Z",
      "side": 1,
      "message": "Nit: Should be only one space after the \u003d.",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e58386f_ba4711cd",
        "filename": "user/src/com/google/gwt/dom/client/DOMImplStandardBase.java",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 5385
      },
      "writtenOn": "2013-10-17T14:34:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e88e4e1_764e969e",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e588040_ebc96da0",
        "filename": "user/src/com/google/gwt/dom/client/Element.java",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 5350
      },
      "writtenOn": "2013-10-14T15:34:07Z",
      "side": 1,
      "message": "Instead of having duplicate method here, it would be better to use the one from DOMImpl (or move that to some utility class). It could be package private.\n\nAlso the javadoc should say it floors the double to int, now it says it is rounding.",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e5d4460_9c4b295f",
        "filename": "user/src/com/google/gwt/dom/client/Element.java",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 5385
      },
      "writtenOn": "2013-10-17T14:34:53Z",
      "side": 1,
      "message": "At this point I would rather not make toInt32 public on the DOMImpl since we have not decided yet, how we want to proceed with sub pixels.",
      "parentUuid": "1e588040_ebc96da0",
      "revId": "abb7b8fc7cc5f18de313317822ce3b041c09ccfe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}