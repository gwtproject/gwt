{
  "comments": [
    {
      "key": {
        "uuid": "0a9e6a2d_a6add6e6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5445
      },
      "writtenOn": "2017-01-26T20:58:50Z",
      "side": 1,
      "message": "[warning] Commit message lines should be 72 characters or fewer.",
      "revId": "ad54c07851d723f89eaf5e93da20e18583076dd4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d912e0c_1cb3d1c8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/Simplifier.java",
        "patchSetId": 2
      },
      "lineNbr": 337,
      "author": {
        "id": 5110
      },
      "writtenOn": "2017-01-28T00:33:58Z",
      "side": 1,
      "message": "if not used in many places, could we update this name?",
      "range": {
        "startLine": 337,
        "startChar": 28,
        "endLine": 337,
        "endChar": 31
      },
      "revId": "ad54c07851d723f89eaf5e93da20e18583076dd4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9efa060b_22d48ecf",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/Simplifier.java",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 5110
      },
      "writtenOn": "2017-01-28T00:33:58Z",
      "side": 1,
      "message": "Isn\u0027t this impossible?\ndefault: throw new AssertionError(\"cannot negate \" +operator)",
      "revId": "ad54c07851d723f89eaf5e93da20e18583076dd4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8318b17_75c1d607",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/Simplifier.java",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 5305
      },
      "writtenOn": "2017-01-28T05:16:37Z",
      "side": 1,
      "message": "This code was already a mess. The convention followed is:\n1) Simplifier.x (not, ifStatement, etc) is the method to simplify the corresponding expression. I will rename then simplifyX\n2) Simplifier.xImpl actually performs the operation, i.e. notImpl negates the expression passed which is implemented as simplify if possible otherwise construct, i.e. notImp(!x) would return x, but notImp(x) return !x.\n\nAlso addressing the comment below, is that the first parameter in all xImpl might be passed null implying don\u0027t simplify but construct..\n\nVery poor implementation but I did not want to refactor all of it. Maybe i will.",
      "revId": "ad54c07851d723f89eaf5e93da20e18583076dd4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cccfda1_dc448505",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/Simplifier.java",
        "patchSetId": 2
      },
      "lineNbr": 420,
      "author": {
        "id": 5110
      },
      "writtenOn": "2017-01-28T00:33:58Z",
      "side": 1,
      "message": "how the expression could be null?",
      "range": {
        "startLine": 420,
        "startChar": 8,
        "endLine": 420,
        "endChar": 18
      },
      "revId": "ad54c07851d723f89eaf5e93da20e18583076dd4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}