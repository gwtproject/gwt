{
  "comments": [
    {
      "key": {
        "uuid": "abbcfece_414d013c",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/JavaToJavaScriptCompiler.java",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 5410
      },
      "writtenOn": "2016-09-13T01:48:49Z",
      "side": 1,
      "message": "why move this down here?",
      "revId": "ae323c75a24f9befcfccc261f8844d509d434162",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abbcfece_45350c2e",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/JavaToJavaScriptCompiler.java",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 5305
      },
      "writtenOn": "2016-09-13T03:04:20Z",
      "side": 1,
      "message": "Although it might not be strictly required, we run TypeReferenceRecorder and ControlFlowRecorder once before any transformations to the AST happened and once at the end so that have all the original references plus the synthetic ones. That was the intention and is documented in the comment above. In some cases, which I believe includes this one, it might not be needed but I think it is best to follow the pattern consistently.",
      "parentUuid": "abbcfece_414d013c",
      "revId": "ae323c75a24f9befcfccc261f8844d509d434162",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abbcfece_d4246822",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/JavaToJavaScriptCompiler.java",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 5410
      },
      "writtenOn": "2016-09-13T18:16:32Z",
      "side": 1,
      "message": "ic, so you\u0027re saying that this transformation needs to be here for the maybeRecordReferencesAndControlFlow() contract to be honored",
      "parentUuid": "abbcfece_45350c2e",
      "revId": "ae323c75a24f9befcfccc261f8844d509d434162",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}