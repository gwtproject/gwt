{
  "comments": [
    {
      "key": {
        "uuid": "b0242aae_c57b1e73",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JClassType.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 7701
      },
      "writtenOn": "2015-04-14T21:43:22Z",
      "side": 1,
      "message": "It seems that super class may be set more than once. Is it possible that a.setSuperClass(superClass) is called before superClass.setSuperClass(superSuperClass) is called? (or maybe superClass\u0027s superclass is reset but childclass.isJso is not reset.)",
      "range": {
        "startLine": 99,
        "startChar": 17,
        "endLine": 99,
        "endChar": 18
      },
      "revId": "aedbff8363215626997f0934e528740545619ec0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0242aae_a03c8043",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JClassType.java",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-04-14T22:11:56Z",
      "side": 1,
      "message": "Added an assertion documenting when setSuperClass is called.\n\nThe case of interest is when a \"resolved\" (not external) superclass is set by UnifyAST. In such case the superclass is already resolved (i.e. its superclass wont change).\n\nI added a check in JavaASTVerifier to make sure that the isJso property is consistent.",
      "parentUuid": "b0242aae_c57b1e73",
      "range": {
        "startLine": 99,
        "startChar": 17,
        "endLine": 99,
        "endChar": 18
      },
      "revId": "aedbff8363215626997f0934e528740545619ec0",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}