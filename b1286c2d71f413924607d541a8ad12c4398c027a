{
  "comments": [
    {
      "key": {
        "uuid": "def0a8a0_519fd64b",
        "filename": "dev/core/src/com/google/gwt/dev/cfg/CompoundCondition.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 5105
      },
      "writtenOn": "2013-10-17T19:19:27Z",
      "side": 1,
      "message": "How is precedence enforced? \n\nare all condition sources atoms or \"(\"  expression  \")\" s ?\n\nI think the code should explicitly enclose operands in parenthesis so that it avoids any confusion.",
      "revId": "b1286c2d71f413924607d541a8ad12c4398c027a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "def0a8a0_17e7fecd",
        "filename": "dev/core/src/com/google/gwt/dev/cfg/CompoundCondition.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 5410
      },
      "writtenOn": "2013-10-18T00:55:10Z",
      "side": 1,
      "message": "mmm. i wanted to avoid this to avoid getting things that looked like:\n(((isFoo)) \u0026\u0026 ((isBar)))\n\nbut you\u0027re right that it\u0027s safer this way (doesn\u0027t rely on all other condition implementations doing things right).\n\ndone.",
      "parentUuid": "def0a8a0_519fd64b",
      "revId": "b1286c2d71f413924607d541a8ad12c4398c027a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "def0a8a0_f1c6c236",
        "filename": "dev/core/src/com/google/gwt/dev/cfg/ConditionNone.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5105
      },
      "writtenOn": "2013-10-17T19:19:27Z",
      "side": 1,
      "message": "I think this way of creating expressions is kind of fragile. What if super.toSource returns a | b (instead of (a|b).\n\nI would prefer that the parenthesis are added here instead of assumed. \"!(\" + + \")\". Same everywhere.",
      "revId": "b1286c2d71f413924607d541a8ad12c4398c027a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "def0a8a0_f7dfd2ee",
        "filename": "dev/core/src/com/google/gwt/dev/cfg/ConditionNone.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5410
      },
      "writtenOn": "2013-10-18T00:55:10Z",
      "side": 1,
      "message": "weeeell, i wrote them all to never return \"a | b\", but you\u0027re right that it\u0027s safer and more future proof to add a wrapping.\n\ndone",
      "parentUuid": "def0a8a0_f1c6c236",
      "revId": "b1286c2d71f413924607d541a8ad12c4398c027a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "def0a8a0_f1dfe2ee",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Cast.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 5105
      },
      "writtenOn": "2013-10-17T19:19:27Z",
      "side": 1,
      "message": "are the paremeters still int ?",
      "revId": "b1286c2d71f413924607d541a8ad12c4398c027a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "def0a8a0_d7dc56fd",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Cast.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 5410
      },
      "writtenOn": "2013-10-18T00:55:10Z",
      "side": 1,
      "message": "in the main separate compilation branch they\u0027re strings. but that code isn\u0027t committed yet, so true to the current state of the world i\u0027ve temporarily implemented canCastSeed() with ints",
      "parentUuid": "def0a8a0_f1dfe2ee",
      "revId": "b1286c2d71f413924607d541a8ad12c4398c027a",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}