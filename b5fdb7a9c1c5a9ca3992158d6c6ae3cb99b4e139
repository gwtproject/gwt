{
  "comments": [
    {
      "key": {
        "uuid": "99349308_8d95a426",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 32
      },
      "lineNbr": 105,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-02T16:31:50Z",
      "side": 1,
      "message": "Is this only relevant for new Js interop or was it also a bug with regular JSOs?\n\nIf it was a bug with JSOs, we should add the relevant regression test.",
      "range": {
        "startLine": 101,
        "startChar": 1,
        "endLine": 105,
        "endChar": 1
      },
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3943a782_c4e4b2c7",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 32
      },
      "lineNbr": 105,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-02T22:49:01Z",
      "side": 1,
      "message": "As far as I can tell, it didn\u0027t cause any problems for JSOs, but it did break once I added JsInterop logic to CFA.  SingleImplJsoTest actually is the regression test in that regard.\n\nI can better explain this in person.",
      "parentUuid": "99349308_8d95a426",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_4da27c95",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 32
      },
      "lineNbr": 960,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-02T16:31:50Z",
      "side": 1,
      "message": "Doesn\u0027t this constructor need to copy rescueViaACast also?\n\nI guess that when this constructor is called all the types in cfa.rescueViaCast have already been rescued right? if so I think you should do rescueViaCast.clear() in RescueVisitor::RescueVisitor and assert here cfa.rescueViaCast.isEmpty().",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3943a782_24ff564b",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 32
      },
      "lineNbr": 960,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-02T22:49:01Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "99349308_4da27c95",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_4d743c56",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 32
      },
      "lineNbr": 3200,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-02T16:31:50Z",
      "side": 1,
      "message": "Could we encapsulate all annotation accessors related to JsInterface into a separate file JsInteropUtil? \n\nand transform this into getExportName(....). Similarly for the rest of accesses below.",
      "range": {
        "startLine": 3195,
        "startChar": 0,
        "endLine": 3200,
        "endChar": 5
      },
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3943a782_448702ba",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 32
      },
      "lineNbr": 3200,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-02T22:49:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99349308_4d743c56",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_cd5facd0",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 32
      },
      "lineNbr": 3431,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-02T16:31:50Z",
      "side": 1,
      "message": "Move all these to JdtUtil.",
      "range": {
        "startLine": 3368,
        "startChar": 0,
        "endLine": 3431,
        "endChar": 3
      },
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3943a782_e498ce18",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 32
      },
      "lineNbr": 3431,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-02T22:49:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99349308_cd5facd0",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_6da8205c",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ImplementCastsAndTypeChecks.java",
        "patchSetId": 32
      },
      "lineNbr": 74,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-02T16:31:50Z",
      "side": 1,
      "message": "remove.",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 74,
        "endChar": 11
      },
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3943a782_64867ebc",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ImplementCastsAndTypeChecks.java",
        "patchSetId": 32
      },
      "lineNbr": 74,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-02T22:49:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99349308_6da8205c",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_cdb84ca7",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ImplementCastsAndTypeChecks.java",
        "patchSetId": 32
      },
      "lineNbr": 116,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-02T16:31:50Z",
      "side": 1,
      "message": "Duplication. Same condition as previous different order.",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 116,
        "endChar": 17
      },
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3943a782_a477e615",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ImplementCastsAndTypeChecks.java",
        "patchSetId": 32
      },
      "lineNbr": 116,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-02T22:49:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99349308_cdb84ca7",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_cde16cb5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ImplementCastsAndTypeChecks.java",
        "patchSetId": 32
      },
      "lineNbr": 261,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-02T16:31:50Z",
      "side": 1,
      "message": "All this instantiation logic does not seem to belong here. I think it should be moved to CFA. Or at worst a completely separate pass ComputeInstantiatedJsoTypes.",
      "range": {
        "startLine": 240,
        "startChar": 4,
        "endLine": 261,
        "endChar": 5
      },
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3943a782_c41cb2c8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ImplementCastsAndTypeChecks.java",
        "patchSetId": 32
      },
      "lineNbr": 261,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-02T22:49:01Z",
      "side": 1,
      "message": "By the time this runs, the Casts are removed, so the CFA can\u0027t really do anything. This information is dependent on logic in this class that would be duplicated here. Basically,I\u0027d have to copy paste the same visitor from here, except remove the mutation. That seems sort of wasteful. If we\u0027re going to refactor this, let\u0027s leave it for later.",
      "parentUuid": "99349308_cde16cb5",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79527f52_38ce69a5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ImplementCastsAndTypeChecks.java",
        "patchSetId": 32
      },
      "lineNbr": 261,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-02T23:11:51Z",
      "side": 1,
      "message": "What am I missing here, they look quite orthogonal to me. I might be missing something looking at it in gerrit but it seems to me that we can introduce the following pass, and call it just before ImplementCastsAndTypeChecks (and the only duplication is the condition in endVisit(JCastOperation)).\n\n\n\npublic class ComputeInstanciatedJsoInterfaces {\n\n  class InstantiatedJsoInterfacesCollector extends JVisitor {\n\n    public void endVisit(JCastOperation x, Context ctx) {\n      JExpression replaceExpr;\n      JType toType \u003d x.getCastType();\n      JExpression expr \u003d x.getExpr();\n\n\n      // Even if disableCastChecking is enabled, we need to rescue JSOs\n      if (toType instanceof JReferenceType \u0026\u0026 !(toType instanceof JNullType)) {\n        JReferenceType refType \u003d ((JReferenceType) toType).getUnderlyingType();\n\n\n          instantiateJsoInterface(refType);\n        }\n      }\n   }\n\n   private void instantiateJsoInterface(JReferenceType toType) {\n      if (instantiatedJsoTypes.add(toType)) {\n        if (program.typeOracle.getSingleJsoImpl(toType) !\u003d null) {\n          // rescuing an Interface via Cast, we record the JSO implementing it\n          instantiateJsoInterface(program.typeOracle.getSingleJsoImpl(toType));\n        }\n        // if it\u0027s a class, and the superType is JSO, rescue it too\n        if (toType instanceof JClassType) {\n          JClassType superType \u003d ((JClassType) toType).getSuperClass();\n          if (superType !\u003d null \u0026\u0026 program.isJavaScriptObject(superType)) {\n            instantiateJsoInterface(superType);\n          }\n        }\n\n        // if we extend another JsInterface, or Interface with JSO implementation, rescue it\n        for (JInterfaceType intf : ((JDeclaredType) toType).getImplements()) {\n          if (intf.isJsInterface() || program.typeOracle.getSingleJsoImpl(intf) !\u003d null) {\n            instantiateJsoInterface(intf);\n          }\n        }\n      }\n    }\n      private final JProgram program;\n\n     private final Set\u003cJReferenceType\u003e instantiatedJsoTypes \u003d new HashSet\u003cJReferenceType\u003e();\n     \n  public static void exec(JProgram program, boolean disableCastChecking) {\n    new ComputeInstanciatedJsoInterfaces(program, disableCastChecking).execImpl();\n  }\n  \n  private ComputeInstanciatedJsoInterfaces(JProgram program) {\n    this.program \u003d program;\n  }\n\n  private void execImpl() {\n    InstantiatedJsoInterfacesCollector replacer \u003d new InstantiatedJsoInterfacesCollector();\n    replacer.accept(program);\n    program.typeOracle.setInstantiatedJsoTypesViaCast(instantiatedJsoTypes);\n  }\n    \n }",
      "parentUuid": "3943a782_c41cb2c8",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_eded50a1",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Cast.java",
        "patchSetId": 32
      },
      "lineNbr": 193,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-02T16:31:50Z",
      "side": 1,
      "message": "Goktug had some comment on this, could you address those.",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 193,
        "endChar": 7
      },
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3943a782_44b2627c",
        "filename": "dev/core/super/com/google/gwt/dev/jjs/intrinsic/com/google/gwt/lang/Cast.java",
        "patchSetId": 32
      },
      "lineNbr": 193,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-02T22:49:01Z",
      "side": 1,
      "message": "I\u0027d rather not remove them just yet, I need this functionality to test on an internal app. I will remove these in followup CLs. Let\u0027s just get this landed and then iterate. This is harmless as is.",
      "parentUuid": "99349308_eded50a1",
      "revId": "b5fdb7a9c1c5a9ca3992158d6c6ae3cb99b4e139",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}