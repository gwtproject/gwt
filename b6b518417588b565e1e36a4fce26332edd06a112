{
  "comments": [
    {
      "key": {
        "uuid": "AAALln////E\u003d",
        "filename": "user/build.xml",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 5030
      },
      "writtenOn": "2012-11-14T10:48:11Z",
      "side": 1,
      "message": "I guess this line is not strictly necessary, but I suppose it could help those who use RequestBuilder but not User.\n\nI actually have no idea why we don\u0027t compile each and every module (coarse grain), and/or what guided the making of this list. It\u0027d be interesting to know what you at Google are compiling to gwtar.",
      "revId": "b6b518417588b565e1e36a4fce26332edd06a112",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALi3///RA\u003d",
        "filename": "user/build.xml",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 5000
      },
      "writtenOn": "2012-11-14T19:59:30Z",
      "side": 1,
      "message": "AFAIK, our internal builds don\u0027t compile anything in gwt-user.jar to gwtar, and only a handful of internal modules are whitelisted to be compiled with CompileModule.  Ray or Brian would know details behind why this is.",
      "parentUuid": "AAALln////E\u003d",
      "revId": "b6b518417588b565e1e36a4fce26332edd06a112",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALln///3I\u003d",
        "filename": "user/build.xml",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 5030
      },
      "writtenOn": "2012-11-15T01:25:53Z",
      "side": 1,
      "message": "OK, I\u0027ve removed it then, though I\u0027m really interested in knowing why you don\u0027t precompile modules on your side and how this list was made up.",
      "parentUuid": "AAALi3///RA\u003d",
      "revId": "b6b518417588b565e1e36a4fce26332edd06a112",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALi3///Vw\u003d",
        "filename": "user/src/com/google/gwt/http/client/Request.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5000
      },
      "writtenOn": "2012-11-14T19:59:30Z",
      "side": 1,
      "message": "So the only thing I don\u0027t like about this approach is the callback stays pending until fired, rather than being cancelled with window.clearTimeout() like how Timer handles cancels.  So potentially apps with a lot of requests and long timeouts will tie up more browser resources this way, I think?",
      "revId": "b6b518417588b565e1e36a4fce26332edd06a112",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALln///3g\u003d",
        "filename": "user/src/com/google/gwt/http/client/Request.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5030
      },
      "writtenOn": "2012-11-14T23:13:10Z",
      "side": 1,
      "message": "Well, ideally, Scheduler would return a Cancellable (much like EventBus returns a HandlerRegistration).\n\nAn alternative to this change could be to create a Timer class in c.g.g.core (and have c.g.g.user.c.Timer extend the new c.g.g.core.c.Timer for backwards compatibility; elemental.util.Timer could also be deprecated in favor of that new Timer class, the only difference seems to be that user/Timer tracks the running timers and automatically cancels them on unload).",
      "parentUuid": "AAALi3///Vw\u003d",
      "revId": "b6b518417588b565e1e36a4fce26332edd06a112",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALln///3M\u003d",
        "filename": "user/src/com/google/gwt/http/client/Request.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5030
      },
      "writtenOn": "2012-11-15T01:25:53Z",
      "side": 1,
      "message": "I searched a bit on the web and found no clear evidence that scheduled timeouts would cause a performance penalty (except that Nokia has some recommendations about cancelling then in pageHide to save the phone\u0027s battery).\n\nAs a \"just in case\" measure, I removed the use of Scheduler and replaced it with direct $wnd.setTimeout/clearTimeout calls, and I\u0027ve run the RequestBuilderTest in prod mode with manual run-style (in Chrome dev) to confirm I didn\u0027t break anything.",
      "parentUuid": "AAALln///3g\u003d",
      "revId": "b6b518417588b565e1e36a4fce26332edd06a112",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}