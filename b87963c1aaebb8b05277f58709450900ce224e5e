{
  "comments": [
    {
      "key": {
        "uuid": "2bfb5b87_b29a7878",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JConditional.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "Th normal process to replace parts of an If statement is to create a new one. This setters would be needed.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 85,
        "endChar": 3
      },
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b17af8b_85dbc2a4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "use the com.google.gwt.dev.collect.Stack instead.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 23
      },
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b17af8b_65e5e662",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "Let\u0027s call it \n\ninferredVariableTypesByVariable",
      "range": {
        "startLine": 77,
        "startChar": 52,
        "endLine": 77,
        "endChar": 90
      },
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bc27b57_34f05021",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "We could also remove redundant instanceof operations, replacing them by a simple null check if the type of the variable is not JnonNull, and remove if the type is JNonNull",
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bc27b57_f4bc1839",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "this could be a canTriviallyCast check, but it may not be worth the cost.",
      "range": {
        "startLine": 95,
        "startChar": 12,
        "endLine": 95,
        "endChar": 86
      },
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb994384_52c89485",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "inferredTypesAtCurrentProgramPoint?",
      "range": {
        "startLine": 141,
        "startChar": 6,
        "endLine": 141,
        "endChar": 43
      },
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bfb5b87_52287470",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "Normally to replace parts of an expression we create a new one instead of setting its members.\n\nHaving the setters introduces the risk that a pass modifies some node but does not record its modification, other than that  but I don\u0027t see why we shouldn\u0027t write the code this way.",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 146,
        "endChar": 91
      },
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b17af8b_054a32f7",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "for",
      "range": {
        "startLine": 161,
        "startChar": 19,
        "endLine": 161,
        "endChar": 24
      },
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb994384_32acf0a6",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "This a a bit over conservative, if there are no assignments in the body to the variable then the current types are still valid.\n\nWouldn\u0027t this prevent optimizing code like\n\n  if (a instance of A) {\n    while b {\n       c \u003d (A) a\n    }\n   }\n\non the other hand this pattern isn\u0027t too common in handwritten code, but it may be it arises during transformations.\n\nCould you add a test for this case documenting the behaviour.",
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb994384_325a3046",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "Should we also handle \n\n  if (! a instanceof A) {\n  } else {\n   // here a is of type A\n  }\n\nalthough is not that common to write code in this way.\n\nAlso the code for If and conditional is almost the same, maybe we can refactor it into a single function?",
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bc27b57_d4263c23",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 296,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "maybe extract as a method, \n\n  multimapIntersection",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 296,
        "endChar": 11
      },
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab202bdf_2be105a9",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 5445
      },
      "writtenOn": "2015-01-20T22:21:43Z",
      "side": 1,
      "message": "[info] First sentence should end with a period.",
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bfb5b87_753d9adf",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/RedundantCastRemover.java",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-01-21T17:52:51Z",
      "side": 1,
      "message": "maybe updateIndicatedTypes, or propagateTypeDefinitions",
      "range": {
        "startLine": 313,
        "startChar": 17,
        "endLine": 313,
        "endChar": 38
      },
      "revId": "b87963c1aaebb8b05277f58709450900ce224e5e",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}