{
  "comments": [
    {
      "key": {
        "uuid": "314ea583_c5f8da91",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 19
      },
      "lineNbr": 205,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-03-25T23:34:26Z",
      "side": 1,
      "message": "Why don\u0027t we use NEGATIVE_INFINITY and POSITIVE_INFINITY here and in isInfinite() ?",
      "range": {
        "startLine": 205,
        "startChar": 11,
        "endLine": 205,
        "endChar": 33
      },
      "revId": "b99985704948444f22e0e0c0afb374e36b902087",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae14f033_7c3535d4",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 19
      },
      "lineNbr": 205,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-04-01T11:55:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "314ea583_c5f8da91",
      "range": {
        "startLine": 205,
        "startChar": 11,
        "endLine": 205,
        "endChar": 33
      },
      "revId": "b99985704948444f22e0e0c0afb374e36b902087",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91d6710b_c6d13618",
        "filename": "user/test/com/google/gwt/emultest/java/lang/DoubleTest.java",
        "patchSetId": 19
      },
      "lineNbr": 173,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-03-26T02:09:26Z",
      "side": 1,
      "message": "I didn\u0027t review the CL but just want to point this kind of testing is error prone. I would put go with two lists;\n\ndouble finiteNumbers \u003d [....];\nfor each \u0026 assertTrue\n\ndouble infiniteNumbers \u003d [....];\nfor each \u0026 assertFalse",
      "range": {
        "startLine": 168,
        "startChar": 1,
        "endLine": 173,
        "endChar": 6
      },
      "revId": "b99985704948444f22e0e0c0afb374e36b902087",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e25349f_398eab21",
        "filename": "user/test/com/google/gwt/emultest/java/lang/DoubleTest.java",
        "patchSetId": 19
      },
      "lineNbr": 173,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-04-01T12:34:16Z",
      "side": 1,
      "message": "Good point. Done.",
      "parentUuid": "91d6710b_c6d13618",
      "range": {
        "startLine": 168,
        "startChar": 1,
        "endLine": 173,
        "endChar": 6
      },
      "revId": "b99985704948444f22e0e0c0afb374e36b902087",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "314ea583_2541ee87",
        "filename": "user/test/com/google/gwt/emultest/java/lang/MathTest.java",
        "patchSetId": 19
      },
      "lineNbr": 162,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-03-25T23:34:26Z",
      "side": 1,
      "message": "Can you also add tests for divisions that result in -1.75, -1.5, 1.5, 1.75 to verify its really does a floor? Currently its only a division that result in +-1.33. Same for the other floor methods.",
      "range": {
        "startLine": 162,
        "startChar": 14,
        "endLine": 162,
        "endChar": 26
      },
      "revId": "b99985704948444f22e0e0c0afb374e36b902087",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}