{
  "comments": [
    {
      "key": {
        "uuid": "NrBCbHNU",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 269,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-01-04T20:24:07Z",
      "side": 1,
      "message": "I don\u0027t think we should call gwtSetUp() first because then we won\u0027t have any uncaught exception handler installed when it\u0027s running, and those errors should be reported too.\n\nI\u0027m also not convinced that we should allow user code to install an uncaught exception handler within gwtSetUp(). The original bug was complaining that error reporting should be better, not that they actually wanted to do this. Instead, how about this?\n\n- assert uncaught handler is null\n- install our own uncaught handler\n- run gwtSetUp()\n- Assert that our own uncaught handler is still installed.\n\nWe could also do assertions before and after running the test and gwtTearDown() to make sure no changes happen there either.\n\nOr perhaps we could even modify GWT.setUncaughtExceptionHandler() to allow us to internally disable it while the test is running. (That is, it should fail fast when called during a GWTTestCase, except for GWTTestCase itself.)\n\nOr is there a good reason for a test to install an uncaught handler?",
      "revId": "ba4e27f2bb0a411bf0fb78aac769b02caeff00a3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N73m4fxU",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 269,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-01-07T20:45:08Z",
      "side": 1,
      "message": "I agree that we should report errors from gwtSetup, I missed that.\nHowever, we cannot assert if uncaught handler is null as it will potentially break projects that already have an uncaught handler intentionally or not. Unfortunately it is not always in the control of the developer as reported in the bug. On the other hand, some test cases may potentially depend on an error being reported by uncaught handler; especially in more integration style test cases.\n\nSo ideally, we should not put restrictions here and we should avoid any side effects. That is, we will be just \u0027spying\u0027 and test cases we will work exactly same with or without our handlers. That would require to have GWT#addUncaughtHandler instead of GWT#setUncaughtHandler but that is a much bigger change.\n\nGiving it a second thought, perhaps, we should not even touch anything if the developer has some handlers already set. Because with the original behavior, developers were being able to opt-out from \u0027test cases failing due to uncaught hander being called\u0027 by setting their own handler. I changed that and it doesn\u0027t look like a good idea to me now.\n\nFor now, we can do the best effort to have minimal side effect:\n{\n  ensureUncaughtHandler() // install our own uncaught handler that also calls the original\n  gwtSetup();\n}\n\nI think this is fairly good solution and improvement as\n - developer can still opt-out from our handlers\n - less side effects (original handler will not be lost )\n\nOptionally, we can expose ensureUncaughtHandler so that developers will have an option to add handlers back if a code out of their control has changed it or needs to change it.\n\nWhat do you think?",
      "parentUuid": "NrBCbHNU",
      "revId": "ba4e27f2bb0a411bf0fb78aac769b02caeff00a3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3FWKlnA",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 269,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-01-07T21:25:18Z",
      "side": 1,
      "message": "Hmm, I hadn\u0027t thought it through. I\u0027ll try again.\n\nIf a test needs to then it can already turn off GWTTestCase\u0027s uncaught exception handling by overriding catchExceptions() so we already have an option for code that\u0027s using them deliberately. But I\u0027m guessing those cases are rare, and it\u0027s better to be more strict by default so that errors can more easily be found and fixed.\n\nSo the question is how many tests are relying on our previous  (unspecified) default behavior and whether it\u0027s feasible to improve it. If only a few tests in google3 need to be fixed then I think it\u0027s better to improve the specification and fix them. If that\u0027s not feasible then we can do something more conservative.\n\nWe were already clobbering any uncaught exception handler installed before setUp. We could either assert that it\u0027s null since that indicates a problem tearing down a previous test (which could more easily be found and fixed), or just remove it and log a warning. Calling a leftover handler during the test or restoring it after the test is over doesn\u0027t seem to accomplish anything; it just adds hard-to-diagnose order dependencies between tests.\n\nDuring gwtSetUp(), it\u0027s certainly possible that some code was inadvertently installing uncaught exception handlers via calls to production code, but it seems unlikely they were also relying on the handler actually being called. If we added an assert after gwtSetUp() returns then either the production code could be fixed, or the test could uninstall the handler at the end of the gwtSetUp() method (overriding the production code), and this would serve as documentation that something odd is happening.\n\nAlternately, if another handler is installed at the end of gwtSetUp() we could log a warning and replace it again. So the problem probably wouldn\u0027t be cleaned up, but at least it would make errors in the test itself easier to diagnose.\n\nWhat do you think?",
      "parentUuid": "N73m4fxU",
      "revId": "ba4e27f2bb0a411bf0fb78aac769b02caeff00a3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "NrFCxlEg",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 288,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-01-04T20:24:07Z",
      "side": 1,
      "message": "Similarly, calling gwtTearDown() last seems problematic - we should report uncaught exceptions that happen there.",
      "revId": "ba4e27f2bb0a411bf0fb78aac769b02caeff00a3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N71bOMlU",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 288,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-01-07T20:45:08Z",
      "side": 1,
      "message": "Actually exceptions thrown from teardown are already ignored per original implementation (see a couple of lines below). So this is consistent with that though we might want to change that behavior all together in a later CL.",
      "parentUuid": "NrFCxlEg",
      "revId": "ba4e27f2bb0a411bf0fb78aac769b02caeff00a3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "NrPCVQKE",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-01-04T20:24:07Z",
      "side": 1,
      "message": "log the exception?",
      "revId": "ba4e27f2bb0a411bf0fb78aac769b02caeff00a3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N7-kWTwk",
        "filename": "user/super/com/google/gwt/junit/translatable/com/google/gwt/junit/client/GWTTestCase.java",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-01-07T20:45:08Z",
      "side": 1,
      "message": "I\u0027m not sure how to log it so it will show up in test output. (Last time I tried, GWT.log didn\u0027t work but System.out worked in the hosted mode)",
      "parentUuid": "NrPCVQKE",
      "revId": "ba4e27f2bb0a411bf0fb78aac769b02caeff00a3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "NrFCK9HA",
        "filename": "user/test/com/google/gwt/junit/client/GWTTestCaseAsyncTest.java",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-01-04T20:24:07Z",
      "side": 1,
      "message": "It seems like we should also test these various error conditions in gwtSetUp() and gwtTearDown()?",
      "revId": "ba4e27f2bb0a411bf0fb78aac769b02caeff00a3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N73lV38A",
        "filename": "user/test/com/google/gwt/junit/client/GWTTestCaseAsyncTest.java",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-01-07T20:45:08Z",
      "side": 1,
      "message": "I will take a look but that might be tricky.",
      "parentUuid": "NrFCK9HA",
      "revId": "ba4e27f2bb0a411bf0fb78aac769b02caeff00a3",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}