{
  "comments": [
    {
      "key": {
        "uuid": "246b81de_7d4aef3c",
        "filename": "user/super/com/google/gwt/emul/java/util/AbstractHashMap.java",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-06-19T14:11:45Z",
      "side": 1,
      "message": "maybe move this code and code of removeStringValue to StringMap as you did it with a code of IntHashMap?\nThere could be possible optimization for contains and get in one operation.\n\nAlso size of this HashMap could be calculated as hashCodeMap.size() + stringMap.size()\n\nAnd since stringMap contains size we could move MapEntryString in it (InternalJsStringMap).",
      "revId": "babaad60bfa97553a6f7894fd8ff6ae4c628861c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84ba6d9a_1e265dac",
        "filename": "user/super/com/google/gwt/emul/java/util/AbstractHashMap.java",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-06-19T17:27:12Z",
      "side": 1,
      "message": "\u003e There could be possible optimization for contains and get\n\nI thought about it but couldn\u0027t see any improvement as value could be \u0027null\u0027 so we still needs the contains but I might be missing something. Do you have something particular in your mind?\n\n\u003e size of this HashMap could be calculated as hashCodeMap.size() + stringMap.size()\n\u003e And since stringMap contains size we could move MapEntryString in it (InternalJsStringMap).\n\nI was planning to do that in the next patch. When I add new refactorings, the patch becomes bigger and bigger. I\u0027ll take a look how disruptive that would be if it is not much, I\u0027ll make it part of this one.",
      "parentUuid": "246b81de_7d4aef3c",
      "revId": "babaad60bfa97553a6f7894fd8ff6ae4c628861c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04803dc3_9c0cadcb",
        "filename": "user/super/com/google/gwt/emul/java/util/AbstractHashMap.java",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-06-19T17:35:59Z",
      "side": 1,
      "message": "\u003e  value could be \u0027null\u0027\nWe can use undefined to check if values is contained but this change would require us to use jsni code.\n\n\n\u003e\u003e we could move MapEntryString in it (InternalJsStringMap).\nEven if it\u0027s not for optimization, maybe it\u0027s ok to move that code to stringMap.",
      "parentUuid": "84ba6d9a_1e265dac",
      "revId": "babaad60bfa97553a6f7894fd8ff6ae4c628861c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0443dd81_7ef731f6",
        "filename": "user/super/com/google/gwt/emul/java/util/AbstractHashMap.java",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-06-19T17:45:23Z",
      "side": 1,
      "message": "AFAIK, undefined and null used interchangeably in GWT so what happens if somebody ands up putting undefined as value instead of null?",
      "parentUuid": "04803dc3_9c0cadcb",
      "revId": "babaad60bfa97553a6f7894fd8ff6ae4c628861c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e47c09a6_5ba4db94",
        "filename": "user/super/com/google/gwt/emul/java/util/InternalJsHashCodeMap.java",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-06-19T14:11:45Z",
      "side": 1,
      "message": "@java.util.Map.Entry here and below",
      "revId": "babaad60bfa97553a6f7894fd8ff6ae4c628861c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246b81de_dd9e9b82",
        "filename": "user/super/com/google/gwt/emul/java/util/InternalJsHashCodeMap.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5542
      },
      "writtenOn": "2014-06-19T14:11:45Z",
      "side": 1,
      "message": "can we remove second parameter of parseInt?",
      "revId": "babaad60bfa97553a6f7894fd8ff6ae4c628861c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84ba6d9a_5e73756b",
        "filename": "user/super/com/google/gwt/emul/java/util/InternalJsHashCodeMap.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-06-19T17:27:12Z",
      "side": 1,
      "message": "Actually, I am not sure but looking at the description of the behavior without the parameter I can imagine that it will be slower.",
      "parentUuid": "246b81de_dd9e9b82",
      "revId": "babaad60bfa97553a6f7894fd8ff6ae4c628861c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}