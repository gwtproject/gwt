{
  "comments": [
    {
      "key": {
        "uuid": "4e733d24_ba96f553",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 478,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-01-09T03:42:09Z",
      "side": 1,
      "message": "I forgot to add a test case that reproduces this problem.",
      "revId": "bd2eefcbe314fe13ba8cf84e8f335aff3dd204c2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce380d5f_4781e28b",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 478,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-01-10T01:20:04Z",
      "side": 1,
      "message": "I\u0027m not gonna bother adding a test here as exporting fields is already broken pretty bad.",
      "parentUuid": "4e733d24_ba96f553",
      "revId": "bd2eefcbe314fe13ba8cf84e8f335aff3dd204c2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6eaba19e_1201fcfb",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 670,
      "author": {
        "id": 5001
      },
      "writtenOn": "2015-01-10T00:39:23Z",
      "side": 1,
      "message": "Did you also ensure that the return type of the method also isn\u0027t tightened?",
      "revId": "bd2eefcbe314fe13ba8cf84e8f335aff3dd204c2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce380d5f_27d13e0c",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 670,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-01-10T01:14:16Z",
      "side": 1,
      "message": "We can type tighten return type because we know the body unlike the parameters where we don\u0027t know all callers.",
      "parentUuid": "6eaba19e_1201fcfb",
      "revId": "bd2eefcbe314fe13ba8cf84e8f335aff3dd204c2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6eaba19e_d25714cb",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 670,
      "author": {
        "id": 5001
      },
      "writtenOn": "2015-01-10T01:36:35Z",
      "side": 1,
      "message": "I don\u0027t believe that\u0027s true, because it will still tighten a type to null based on instantiability.  There\u0027s a call like if(!program.typeOracle.isInstantiatedType(refType)) which will tighten to null if the return type isn\u0027t instantiable.\n\nSo if refType is a pure @JsType interface, and there\u0027s no Java implementor, then this method will be marked as returning null.",
      "parentUuid": "ce380d5f_27d13e0c",
      "revId": "bd2eefcbe314fe13ba8cf84e8f335aff3dd204c2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}