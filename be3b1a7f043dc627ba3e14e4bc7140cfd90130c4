{
  "comments": [
    {
      "key": {
        "uuid": "e6fd3aea_0329ed25",
        "filename": "user/test/com/google/gwt/emultest/java8/util/ArrayListTest.java",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5445
      },
      "writtenOn": "2016-06-06T14:05:23Z",
      "side": 1,
      "message": "[error] Unused import - java.util.Arrays.asList.",
      "revId": "be3b1a7f043dc627ba3e14e4bc7140cfd90130c4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63f21c57_e0ac02fd",
        "filename": "user/test/com/google/gwt/emultest/java8/util/ArrayListTest.java",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-06T14:19:13Z",
      "side": 1,
      "message": "jenkins is wrong here",
      "parentUuid": "e6fd3aea_0329ed25",
      "revId": "be3b1a7f043dc627ba3e14e4bc7140cfd90130c4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6fd3aea_631ef100",
        "filename": "user/test/com/google/gwt/emultest/java8/util/ArrayListTest.java",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 5445
      },
      "writtenOn": "2016-06-06T14:05:23Z",
      "side": 1,
      "message": "[error] Unused import - java.util.Collections.",
      "revId": "be3b1a7f043dc627ba3e14e4bc7140cfd90130c4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63f21c57_00b0064d",
        "filename": "user/test/com/google/gwt/emultest/java8/util/ArrayListTest.java",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-06T14:19:13Z",
      "side": 1,
      "message": "jenkins is wrong here",
      "parentUuid": "e6fd3aea_631ef100",
      "revId": "be3b1a7f043dc627ba3e14e4bc7140cfd90130c4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c611160b_d31eb44f",
        "filename": "user/test/com/google/gwt/emultest/java8/util/ArrayListTest.java",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-06T14:20:14Z",
      "side": 1,
      "message": "turns out its right we are just out of sync (since we have not gardened all patches in)",
      "parentUuid": "63f21c57_00b0064d",
      "revId": "be3b1a7f043dc627ba3e14e4bc7140cfd90130c4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e34c4c8d_a433a2f8",
        "filename": "user/test/com/google/gwt/emultest/java8/util/OptionalDoubleTest.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-06-06T14:54:46Z",
      "side": 1,
      "message": "Couldn\u0027t we add some isNullPointerException helper that could use \"e instanceof NullPointerException || e instanceof JavaScriptException\" in GWT and just \"e instanceof NullPointerException\" in J2Cl? Then we could do:\n\n assertTrue(Xxx.isNullPointerException(e));\n\nand guard against false-positives in case another exception is ever thrown.",
      "revId": "be3b1a7f043dc627ba3e14e4bc7140cfd90130c4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63f21c57_40d16e67",
        "filename": "user/test/com/google/gwt/emultest/java8/util/OptionalDoubleTest.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5385
      },
      "writtenOn": "2016-06-06T15:00:17Z",
      "side": 1,
      "message": "I thought about this, but did not like the extra complexity (yet another super sourcing). Since the test is already vague in optimzed mode (any JavaScriptException) I am kinda fine with making it more vague.\n\nIf you feel strongly I can add the extra layer, but I prefer not to.",
      "parentUuid": "e34c4c8d_a433a2f8",
      "revId": "be3b1a7f043dc627ba3e14e4bc7140cfd90130c4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e34c4c8d_e40bda16",
        "filename": "user/test/com/google/gwt/emultest/java8/util/OptionalDoubleTest.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-06-06T15:16:23Z",
      "side": 1,
      "message": "No, sounds good.",
      "parentUuid": "63f21c57_40d16e67",
      "revId": "be3b1a7f043dc627ba3e14e4bc7140cfd90130c4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}