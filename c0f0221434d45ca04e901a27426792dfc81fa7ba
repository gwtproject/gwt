{
  "comments": [
    {
      "key": {
        "uuid": "Sl99QK.M",
        "filename": "user/src/com/google/gwt/logging/impl/FormatterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-03-27T16:31:49Z",
      "side": 1,
      "message": "Maybe @link to the StackTracePrintStream as well?",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SwUFmUmE",
        "filename": "user/src/com/google/gwt/logging/impl/FormatterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-29T03:43:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "Sl99QK.M",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Sk3UeAH0",
        "filename": "user/src/com/google/gwt/logging/impl/StackTracePrintStream.java",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-26T22:03:37Z",
      "side": 1,
      "message": "This class is a bit confusing because it extends PrintStream but it\u0027s not a general-purpose PrintStream. It doesn\u0027t seem like a great API. Perhaps instead, we could stop calling Throwable.printStackTrace() and instead write a different utility method:\n\n  void appendStackTrace(Throwable t, StringBuilder out);\n\nThe implementation can use getStackTrace() and avoid using a PrintStream at all.",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Sr9NltPg",
        "filename": "user/src/com/google/gwt/logging/impl/StackTracePrintStream.java",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-27T04:41:21Z",
      "side": 1,
      "message": "Throwable#printStackTrace is already the established way of printing formatted stack traces in java and ideally we should not replicate that (on dev mode this provides even fancier printing by detecting duplicate stack trace items).\nAlso this approach works well with different formatting styles to handle new lines and tabs.\nAlso note that, this is not a public API so it didn\u0027t make sense to me to implement the full PrintStream API for internal use case and I put some tests in place that will fail if the contract changes.",
      "parentUuid": "Sk3UeAH0",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Sk2NKyto",
        "filename": "user/src/com/google/gwt/logging/impl/StackTracePrintStream.java",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-27T20:53:40Z",
      "side": 1,
      "message": "Good point about devmode. Looking at how it\u0027s used, perhaps the subclass interface could be made clearer by making this class abstract and the methods final except for the ones that are intended to be overridden. Something like this:\n\n/**\n * Appends some text (not containing a newline) to the output.\n */\nprotected abstract String append(String text);\n\n/**\n * Appends a newline to the output.\n */\nprotected abstract void newline();\n\nThen all the other methods can call these abstract methods, so it\u0027s clear that all the data will flow through these two methods.",
      "parentUuid": "Sr9NltPg",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SweHjJpg",
        "filename": "user/src/com/google/gwt/logging/impl/StackTracePrintStream.java",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-29T03:43:38Z",
      "side": 1,
      "message": "Thanks, I liked the idea of explicit stating which methods that all data will flow through and are meant to be overridden. I added those two methods and marked the rest as final. Also documented them in the class javadoc. It looks better now.",
      "parentUuid": "Sk2NKyto",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Sk.N1mt0",
        "filename": "user/src/com/google/gwt/logging/server/JsonLogRecordServerUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-27T20:53:40Z",
      "side": 1,
      "message": "I doubt it matters, but out of paranoia, could you introduce a nested class so it has a name?",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SweH6BjQ",
        "filename": "user/src/com/google/gwt/logging/server/JsonLogRecordServerUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-29T03:43:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "Sk.N1mt0",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SkwNYnmk",
        "filename": "user/src/com/google/gwt/user/client/rpc/core/java/util/logging/LogRecord_CustomFieldSerializer.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-27T20:53:40Z",
      "side": 1,
      "message": "I think we should keep the instanceof check just in case there is a protocol version mismatch. It\u0027s better to return some data than to throw a ClassCastException.",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SwaGr3hs",
        "filename": "user/src/com/google/gwt/user/client/rpc/core/java/util/logging/LogRecord_CustomFieldSerializer.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-29T03:43:38Z",
      "side": 1,
      "message": "With protocol mismatch do you mean the case where client and server versions doesn\u0027t match?\n\nIn that case how the rest of the system will work and why would we get a ClassCastException? Other serialization/deserialization related to logging rpc will also fail right?\n\nPerhaps I didn\u0027t get what you mean.",
      "parentUuid": "SkwNYnmk",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Sl39gF7Q",
        "filename": "user/test/com/google/gwt/logging/LoggingTest.gwt.xml",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-03-27T16:31:49Z",
      "side": 1,
      "message": "I\u0027m curious why you need this LoggingTest module: won\u0027t JUnitShell synthesize a module that inherits com.google.gwt.junit.JUnit and the module returned by GWTTEstCase#getModuleName() ? (so returning \"com.google.gwt.logging.Logging\" from StackTracePrintStreamTest#getModuleName() would be equivalent)",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SwWGidjs",
        "filename": "user/test/com/google/gwt/logging/LoggingTest.gwt.xml",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-29T03:43:38Z",
      "side": 1,
      "message": "My bad. Removed.",
      "parentUuid": "Sl39gF7Q",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Skz4ilbM",
        "filename": "user/test/com/google/gwt/logging/client/StackTracePrintStreamTest.java",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-27T20:53:40Z",
      "side": 1,
      "message": "nit: rename to \"actual\"?",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SwcHNQg4",
        "filename": "user/test/com/google/gwt/logging/client/StackTracePrintStreamTest.java",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-29T03:43:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "Skz4ilbM",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Sk34oHZU",
        "filename": "user/test/com/google/gwt/logging/client/StackTracePrintStreamTest.java",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5010
      },
      "writtenOn": "2013-03-27T20:53:40Z",
      "side": 1,
      "message": "nit: rename to \"expected\"",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SwaHSvqc",
        "filename": "user/test/com/google/gwt/logging/client/StackTracePrintStreamTest.java",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5110
      },
      "writtenOn": "2013-03-29T03:43:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "Sk34oHZU",
      "revId": "c0f0221434d45ca04e901a27426792dfc81fa7ba",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}