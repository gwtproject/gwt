{
  "comments": [
    {
      "key": {
        "uuid": "44725a92_9737e6c7",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 1
      },
      "lineNbr": 523,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-11T23:27:04Z",
      "side": 1,
      "message": "The scope defined here is only used for declaring fields. Methods all go into the interface scope. \n\nI think by having it jsnative in the object scope makes names defined there avoided by normal classes/interfaces.\n\nCan native classes extend other classes?",
      "range": {
        "startLine": 522,
        "startChar": 1,
        "endLine": 523,
        "endChar": 30
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_f7d73a7f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 1
      },
      "lineNbr": 523,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-11T23:46:03Z",
      "side": 1,
      "message": "Hmm. Native jstypes shouldn\u0027t be any different than other jstypes in this context so this seems unnecessary and if we want to be conservative we should probably do it for all jstypes.\n\nTo answer your question: native classes can only extend/implement native classes. But a regular class can extend/implement native class.",
      "parentUuid": "44725a92_9737e6c7",
      "range": {
        "startLine": 522,
        "startChar": 1,
        "endLine": 523,
        "endChar": 30
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_77e08a37",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 1
      },
      "lineNbr": 523,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-11T23:49:14Z",
      "side": 1,
      "message": "Then it should be safe to remove that part of the condition.",
      "parentUuid": "44725a92_f7d73a7f",
      "range": {
        "startLine": 522,
        "startChar": 1,
        "endLine": 523,
        "endChar": 30
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_17c7569f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 1
      },
      "lineNbr": 523,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-12T00:27:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44725a92_77e08a37",
      "range": {
        "startLine": 522,
        "startChar": 1,
        "endLine": 523,
        "endChar": 30
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_f7365ac8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 1
      },
      "lineNbr": 1304,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-11T23:27:04Z",
      "side": 1,
      "message": "I guess that native classes can not have clinits. If so getClinitTarget should return null for these.",
      "range": {
        "startLine": 1304,
        "startChar": 8,
        "endLine": 1304,
        "endChar": 77
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_77324a8b",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 1
      },
      "lineNbr": 1304,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-11T23:46:03Z",
      "side": 1,
      "message": "Yeah, I\u0027m planning to have a check to ensure there are not static initialization (at least at the beginning - this might be relaxed later).",
      "parentUuid": "44725a92_f7365ac8",
      "range": {
        "startLine": 1304,
        "startChar": 8,
        "endLine": 1304,
        "endChar": 77
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_77a5eae5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAST.java",
        "patchSetId": 1
      },
      "lineNbr": 1304,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-12T00:27:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44725a92_77324a8b",
      "range": {
        "startLine": 1304,
        "startChar": 8,
        "endLine": 1304,
        "endChar": 77
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_5742ae05",
        "filename": "user/test/com/google/gwt/core/client/interop/JsFunctionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-11T23:27:04Z",
      "side": 1,
      "message": "This seems out of place now.",
      "range": {
        "startLine": 190,
        "startChar": 5,
        "endLine": 190,
        "endChar": 24
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_97e44653",
        "filename": "user/test/com/google/gwt/core/client/interop/JsFunctionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-11T23:46:03Z",
      "side": 1,
      "message": "What do you mean? This is making it consistent with the current casting behavior (we couldn\u0027t change the cast behavior due inbox).",
      "parentUuid": "44725a92_5742ae05",
      "range": {
        "startLine": 190,
        "startChar": 5,
        "endLine": 190,
        "endChar": 24
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_57e38e44",
        "filename": "user/test/com/google/gwt/core/client/interop/JsFunctionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-11T23:49:14Z",
      "side": 1,
      "message": "The assertNotNull line should not be reached as the previous line should have thrown.",
      "parentUuid": "44725a92_97e44653",
      "range": {
        "startLine": 190,
        "startChar": 5,
        "endLine": 190,
        "endChar": 24
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_b7b7822e",
        "filename": "user/test/com/google/gwt/core/client/interop/JsFunctionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-12T00:27:23Z",
      "side": 1,
      "message": "This is what the rest of the class is doing. Probably helps to prevent pruning.",
      "parentUuid": "44725a92_57e38e44",
      "range": {
        "startLine": 190,
        "startChar": 5,
        "endLine": 190,
        "endChar": 24
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_7a3dd1f0",
        "filename": "user/test/com/google/gwt/core/client/interop/JsFunctionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5105
      },
      "writtenOn": "2015-09-12T00:35:44Z",
      "side": 1,
      "message": "I see. But these tests are both run in draft and optimized mode, so shouldn\u0027t we let the optimizer do its job and assert its correctness.\n\nCast operations always return hasSideEffects \u003d true so there is no danger from them being pruned by the optimization pipeline due to it result not being referenced. So I am not sure why all these asserts are here.",
      "parentUuid": "44725a92_b7b7822e",
      "range": {
        "startLine": 190,
        "startChar": 5,
        "endLine": 190,
        "endChar": 24
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44725a92_5a973536",
        "filename": "user/test/com/google/gwt/core/client/interop/JsFunctionTest.java",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-12T00:40:17Z",
      "side": 1,
      "message": "The tests are not running in draft mode but I agree we should run them in both modes once we enable them by default (otherwise becomes harder to manage the build rules).\n\nI think we can do cleanup in a later cl though.",
      "parentUuid": "44725a92_7a3dd1f0",
      "range": {
        "startLine": 190,
        "startChar": 5,
        "endLine": 190,
        "endChar": 24
      },
      "revId": "c56689c99007532addf8e4bd989b4cdbc3d8ecbb",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}