{
  "comments": [
    {
      "key": {
        "uuid": "33daed33_e2338826",
        "filename": "dev/codeserver/java/com/google/gwt/dev/codeserver/WebServer.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 5055
      },
      "writtenOn": "2014-08-24T08:06:50Z",
      "side": 1,
      "message": "I\u0027d rather [\\\\dA-F]{32} to be more secure",
      "range": {
        "startLine": 85,
        "startChar": 54,
        "endLine": 85,
        "endChar": 63
      },
      "revId": "c888a71f110e441fca2e59a33bdae2ddcc09be0f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33a82d90_63c22a18",
        "filename": "dev/codeserver/java/com/google/gwt/dev/codeserver/WebServer.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 5010
      },
      "writtenOn": "2014-08-25T18:58:52Z",
      "side": 1,
      "message": "What security threat do you have in mind?\n\nIt seems like if the file doesn\u0027t exist then we will get a file not found error, and it\u0027s not possible to access a file in a different directory using the allowed characters.",
      "parentUuid": "33daed33_e2338826",
      "range": {
        "startLine": 85,
        "startChar": 54,
        "endLine": 85,
        "endChar": 63
      },
      "revId": "c888a71f110e441fca2e59a33bdae2ddcc09be0f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f389353b_b320e0ff",
        "filename": "dev/codeserver/java/com/google/gwt/dev/codeserver/WebServer.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 5055
      },
      "writtenOn": "2014-08-25T21:48:17Z",
      "side": 1,
      "message": "If the regexp does not match we return a not-found 404 , otherwise we raise a server error 500 with a stacktrace. I prefer not to give those code errors to the user.\nAdditionally a more accurate regexp must perform better, for instance X.cache.js will be rejected when evaluating the second character since with this regexp it will loop until the end of the string, then a call to the fs, and eventually raise an exception.\nAnyway we are running a dev instance, and either security or performance are not very important here.",
      "parentUuid": "33a82d90_63c22a18",
      "range": {
        "startLine": 85,
        "startChar": 54,
        "endLine": 85,
        "endChar": 63
      },
      "revId": "c888a71f110e441fca2e59a33bdae2ddcc09be0f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f389353b_81e1ca5e",
        "filename": "dev/codeserver/java/com/google/gwt/dev/codeserver/WebServer.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 5010
      },
      "writtenOn": "2014-08-25T23:05:46Z",
      "side": 1,
      "message": "You could still get the 500 error by changing one character in the strong name so it\u0027s still valid but doesn\u0027t exist. If we\u0027re concerned about that then I think we could do a more systematic review to make sure we never return a stack trace.\n\nI\u0027m not too worried about performance for an error. I guess if we were concerned about a denial of service attack, we could cache the list of sourcemaps in memory, so this becomes a memory-only check. But then again, the recompile call is unauthenticated so there\u0027s a much easier way to DOS this server. (This is one reason why it runs on localhost by default.)\n\nThe reason I didn\u0027t want to put in a length restriction is in case we change the length of a strong name someday. But we have a test for that so it\u0027s not a big deal.",
      "parentUuid": "f389353b_b320e0ff",
      "range": {
        "startLine": 85,
        "startChar": 54,
        "endLine": 85,
        "endChar": 63
      },
      "revId": "c888a71f110e441fca2e59a33bdae2ddcc09be0f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}