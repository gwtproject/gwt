{
  "comments": [
    {
      "key": {
        "uuid": "7f10a43e_0085aa47",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JDeclaredType.java",
        "patchSetId": 7
      },
      "lineNbr": 537,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-05-16T22:45:23Z",
      "side": 1,
      "message": "This might not be always correct if the class already has a $ in its name (not due to inner classes). Wouldn\u0027t it be best to name.substring(getEnclosingType().getName().length + 1) ?",
      "range": {
        "startLine": 535,
        "startChar": 0,
        "endLine": 537,
        "endChar": 3
      },
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_a38de8df",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JDeclaredType.java",
        "patchSetId": 7
      },
      "lineNbr": 537,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f10a43e_0085aa47",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_409a8262",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 7
      },
      "lineNbr": 714,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-05-16T22:45:23Z",
      "side": 1,
      "message": "Is this necessary? I looked in JDeclaredType and artificial rescues are initilized as an empty list.",
      "range": {
        "startLine": 713,
        "startChar": 7,
        "endLine": 714,
        "endChar": 40
      },
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_a0d6fecd",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 7
      },
      "lineNbr": 714,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "I got an NPE on this line for some reason, I\u0027ll try running without it and see why",
      "parentUuid": "7f10a43e_409a8262",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_209f8e52",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 7
      },
      "lineNbr": 1903,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-05-16T22:45:23Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 1900,
        "startChar": 2,
        "endLine": 1903,
        "endChar": 1
      },
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_c367bc61",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 7
      },
      "lineNbr": 1903,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f10a43e_209f8e52",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_4095e226",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 7
      },
      "lineNbr": 1304,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-05-16T22:45:23Z",
      "side": 1,
      "message": "Codestyle here and elsewhere in this file.",
      "range": {
        "startLine": 1304,
        "startChar": 0,
        "endLine": 1304,
        "endChar": 40
      },
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_eedce7f3",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 7
      },
      "lineNbr": 1304,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "fixed (argh, I tried IntelliJ 13.1 \"import eclipse codestyle\" feature and it made it worse. Had to use a diff tool to fix)",
      "parentUuid": "7f10a43e_4095e226",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_69aa1162",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "Extending non jsinterface\u0027d classes was forbidden by the spec. There were several reasons for that to ensure correct behavior but unfortunately I cannot recall them. I need to think about it again.",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff281483_97d0ce83",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "Neither can I, fortunately, I don\u0027t need it for this test, because what I\u0027m using for my other project is something like this:\n\nList extends Collection, JsListInterface {}\n\nTo cause List to be a JsInterface without putting @JsInterface on List itself.\n\nI just need to fix the test.",
      "parentUuid": "7f10a43e_69aa1162",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_c9c23d16",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 46,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "Not really abstract. Perhaps CollectionBase?",
      "range": {
        "startLine": 46,
        "startChar": 15,
        "endLine": 46,
        "endChar": 33
      },
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff281483_d799b6f2",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 46,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f10a43e_c9c23d16",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_09b955b6",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "o.toString() + \"AbstractCollection\"",
      "range": {
        "startLine": 49,
        "startChar": 10,
        "endLine": 49,
        "endChar": 11
      },
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff281483_176f3e10",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f10a43e_09b955b6",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_e9b501ba",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "o.toString() + \"ListImpl\"",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff281483_f783927a",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f10a43e_e9b501ba",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_69d1f1db",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "you might want to split this to\n\n o.toString() + \"FooImpl\"\n\nand another function addWithSuper\n\n addWithSuper() {\n   x \u003d super.addWithSuper() + \"FooImpl\"\n }\n\nand test them independently.",
      "range": {
        "startLine": 64,
        "startChar": 26,
        "endLine": 64,
        "endChar": 27
      },
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_4922ad2f",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 66,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "Can you add a test for the case how JsType works with public methods from non-jstyped parent classes.",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_8941e5c9",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 67,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "It might be good test to include something like following:\n\n@JsType interface X{ void a(); }\n\nclass XImpl { void a(){} }\n\n@JsType class Y extends XImpl {\n void b() {}\n}",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_c90b5db2",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "is this required?",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff281483_57470684",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "Yes, because name2() is a prototype method",
      "parentUuid": "7f10a43e_c90b5db2",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_091275e6",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "Perhaps we should special-case Enum#name and make it always exported?",
      "range": {
        "startLine": 86,
        "startChar": 19,
        "endLine": 86,
        "endChar": 20
      },
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff281483_e2e50e44",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "There might harm enum obfuscation and increase bloat (due to enum() always assumed to be called).  We need to provide a solution for \u0027interop overlay\u0027 I think, which is, how to configure classes you don\u0027t own and can\u0027t modify to be jsinterop. I\u0027d save that for a later cl.",
      "parentUuid": "7f10a43e_091275e6",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_494bcde7",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 233,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "perhaps add tests for static initializer in @JsExport classes and @JStype interfaces?",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f9d5828_4ae40b49",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 233,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f10a43e_494bcde7",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f10a43e_2950998d",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 340,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-05-17T02:18:51Z",
      "side": 1,
      "message": "what happens if a JSNI method returns JsType concrete object?",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f9d5828_6afc67db",
        "filename": "user/test/com/google/gwt/core/client/interop/JsTypeTest.java",
        "patchSetId": 7
      },
      "lineNbr": 340,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-05-22T23:39:44Z",
      "side": 1,
      "message": "Right now there\u0027s no difference, I\u0027m going to introduce code to handle @JsProperty overrides on concrete classes in a separate patch as that requires more complicated class setup.",
      "parentUuid": "7f10a43e_2950998d",
      "revId": "d0f246064f212139bb73b3d3744b5955a05715fe",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}