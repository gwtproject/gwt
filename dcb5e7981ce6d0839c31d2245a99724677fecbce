{
  "comments": [
    {
      "key": {
        "uuid": "b9df977e_45ff7c7e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[warning] Commit message lines should be 72 characters or fewer.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_25fcf887",
        "filename": "/home/mdempsky/gwt/dev/core/src/com/google/gwt/dev/javac/JdtUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[error] \u0027\u003d\u0027 is not followed by whitespace.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_85f9849a",
        "filename": "/home/mdempsky/gwt/dev/core/src/com/google/gwt/dev/jjs/ast/JMethod.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[error] Missing a Javadoc comment.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_65f600aa",
        "filename": "/home/mdempsky/gwt/dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[error] Missing a Javadoc comment.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_c5b38cee",
        "filename": "/home/mdempsky/gwt/dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[warning] \u0027(\u0027 should be on the previous line.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_a5b808ca",
        "filename": "/home/mdempsky/gwt/dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[error] Line matches the illegal pattern \u0027newline before }\u0027.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_05be14b4",
        "filename": "/home/mdempsky/gwt/user/super/com/google/gwt/emul/java/util/AbstractHashMap.java",
        "patchSetId": 1
      },
      "lineNbr": 249,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[error] \u0027\u003d\u0027 is not followed by whitespace.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_e5c21046",
        "filename": "/home/mdempsky/gwt/user/super/com/google/gwt/emul/java/util/AbstractHashMap.java",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[error] \u0027\u003d\u0027 is not followed by whitespace.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_45c81c64",
        "filename": "/home/mdempsky/gwt/user/test/com/google/gwt/dev/jjs/test/SpecializationTest.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[info] First sentence should end with a period.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_25c5184c",
        "filename": "/home/mdempsky/gwt/user/test/com/google/gwt/dev/jjs/test/SpecializationTest.java",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[info] Line matches the illegal pattern \u0027more than one blank line\u0027.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_85d22410",
        "filename": "/home/mdempsky/gwt/user/test/com/google/gwt/dev/jjs/test/SpecializationTest.java",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-04-10T22:37:11Z",
      "side": 1,
      "message": "[error] \u0027catch\u0027 is not followed by whitespace.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_680c1755",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JMethod.java",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-11T01:33:16Z",
      "side": 1,
      "message": "I have seen this code elsewhere. Could you have it only in one place and reuse it here?",
      "range": {
        "startLine": 93,
        "startChar": 3,
        "endLine": 109,
        "endChar": 22
      },
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59d5bb77_8abb4bed",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JMethod.java",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-23T21:16:59Z",
      "side": 1,
      "message": "Not exactly identical, but I extracted a static method with extra params.",
      "parentUuid": "b9df977e_680c1755",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_281b2f87",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 3370,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-11T01:33:16Z",
      "side": 1,
      "message": "This should emit a legible error. Also emit an error when the target method can not be resolved.",
      "range": {
        "startLine": 3370,
        "startChar": 4,
        "endLine": 3370,
        "endChar": 62
      },
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_682537bd",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 3372,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-11T01:33:16Z",
      "side": 1,
      "message": "We probably want to have here an actual JMethod. That is what we do in JMethodCall isn\u0027t it? We should be able to leverage JDT (like in JSNIReferenceResolver (formerly JSNIChecker)) to validate and get a MethodBinding.",
      "range": {
        "startLine": 3372,
        "startChar": 10,
        "endLine": 3372,
        "endChar": 22
      },
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59d5bb77_6a47f73b",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/GwtAstBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 3372,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-23T21:16:59Z",
      "side": 1,
      "message": "It might be easier to do it during the UnifyAst JMethod.resolve() since I can lookup a resolved JMethod at that point in time. Otherwise, it\u0027s a lot of code just to stash a JMethod here which isn\u0027t even useful until much later passes. \n\nThe only justification really for doing it this early would be to print errors early in the compile. \n\nI think it would overcomplexify to add something like JSNIReferenceResolver just for this.",
      "parentUuid": "b9df977e_682537bd",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_28e96f23",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-11T01:33:16Z",
      "side": 1,
      "message": "isn\u0027t \n(x.isVolatile() || x.canBePolymorphic() || !x.getTarget().isStatic() x.canBePolymophic() \n\nenough here? (also doesn\u0027t x.getTarget().isAbstract \u003d\u003e x.canBePolymorphic? If not it should I think).\n\nAre there circumstances in which the method is not final but the dispatch is static and specialization is not desired?",
      "range": {
        "startLine": 46,
        "startChar": 27,
        "endLine": 47,
        "endChar": 38
      },
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59bcdb31_0f1485cc",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-23T21:16:59Z",
      "side": 1,
      "message": "Constructors?",
      "parentUuid": "b9df977e_28e96f23",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_c800c323",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-11T01:33:16Z",
      "side": 1,
      "message": "I guess that you only expect to run for statified method and all the first condition is to avoid the hash lookup.\n\nI suggest to move the optimization condition to instanceMethodForStaticImpl() and delete from here.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 75
      },
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59bcdb31_8f399557",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-23T21:16:59Z",
      "side": 1,
      "message": "You mean move the above if statement (isFinal || isStatic||....) into that? Are you sure all of the callers have the same restriction?",
      "parentUuid": "b9df977e_c800c323",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_e8ff87cd",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-11T01:33:16Z",
      "side": 1,
      "message": "You should add to control flow analysis to rescue specializers. That task would be easier if MakeClassStatic copied specializers from the instance method.",
      "range": {
        "startLine": 85,
        "startChar": 1,
        "endLine": 86,
        "endChar": 20
      },
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59bcdb31_cfac3d3f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-23T21:16:59Z",
      "side": 1,
      "message": "I will add rescue during non-final passes. (Final pruner will allow them to be pruned, since if no specialization happened at all, you want them to go away)\n\nI will change MakeCallsStatic to copy the specializers. It\u0027ll have to rescue both the target method, as well as it\u0027s static version as well. \n\nYou have instanceMethod1 rescues specializedMethod1 \n\nrescue of staticInstanceMethod1 implies rescue of staticSpecializedMethod1",
      "parentUuid": "b9df977e_e8ff87cd",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_08fbcbe5",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-11T01:33:16Z",
      "side": 1,
      "message": "could you rewrite this to\nif (instanceMethod \u003d\u003d null) {\n  return;\n}\n\n...\n\nif (specialization \u003d\u003d null) {\nreturn;\n}\n\n..\n\nso that is not so nested?",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 101,
        "endChar": 6
      },
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59d5bb77_eaebe7cc",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/MethodCallSpecializer.java",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-23T21:16:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9df977e_08fbcbe5",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_6897f778",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 1
      },
      "lineNbr": 1009,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-11T01:33:16Z",
      "side": 1,
      "message": "I think we should do resolve like on line 978.",
      "range": {
        "startLine": 994,
        "startChar": 0,
        "endLine": 1009,
        "endChar": 7
      },
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39cac7de_6643aed0",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/UnifyAst.java",
        "patchSetId": 1
      },
      "lineNbr": 1009,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-23T21:16:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9df977e_6897f778",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9df977e_889a3b9f",
        "filename": "dev/core/super/com/google/gwt/core/client/impl/CompilerHint.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-04-11T01:33:16Z",
      "side": 1,
      "message": "When I metioned compiler hint my though was to have a single annotation @CompilerHint for all hints so that we don\u0027t bloat GWTastBuilder with annotations.\n\n@CompilerHint(type\u003d\"specializeMethod\" , target\u003d, when\u003d{ .... here would be the signature})\n\nand then have @CompilerHints(@CompilerHint(...)) when multiple compiler hints are needed.",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59bcdb31_6f9c310c",
        "filename": "dev/core/super/com/google/gwt/core/client/impl/CompilerHint.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 5001
      },
      "writtenOn": "2014-04-23T21:16:59Z",
      "side": 1,
      "message": "I don\u0027t think this will really make the code any cleaner, it\u0027ll just overload the meanings of all the fields on CompilerHint. If eventually, CompilerHint ends up dealing with Classes, Methods, Parameters, and sprouts lots of extra parameters, you might end up with a maddening bunch of if/else checks. The JavaDoc for this would also get ballooned since it would have to describe every hint syntax.\n\nIt also sounds like you want the \"when\" condition to be a String, but that seems less safe and require more error checking in GwtAstBuilder.",
      "parentUuid": "b9df977e_889a3b9f",
      "revId": "dcb5e7981ce6d0839c31d2245a99724677fecbce",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}