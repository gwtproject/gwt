{
  "comments": [
    {
      "key": {
        "uuid": "dcf999ff_d5b5fcfa",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/JavaToJavaScriptCompiler.java",
        "patchSetId": 1
      },
      "lineNbr": 1066,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-03-24T21:49:29Z",
      "side": 1,
      "message": "Isn\u0027t it better to get the source info from the block (like the old code); that at least would point to the generated init  (which should have a comment about being magically filled in).",
      "range": {
        "startLine": 1065,
        "startChar": 49,
        "endLine": 1066,
        "endChar": 47
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcfc9dee_2575149d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/JavaToJavaScriptCompiler.java",
        "patchSetId": 1
      },
      "lineNbr": 1066,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-03-24T22:31:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcf999ff_d5b5fcfa",
      "range": {
        "startLine": 1065,
        "startChar": 49,
        "endLine": 1066,
        "endChar": 47
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcf999ff_75ca288c",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/JavaToJavaScriptCompiler.java",
        "patchSetId": 1
      },
      "lineNbr": 1077,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-03-24T21:49:29Z",
      "side": 1,
      "message": "Nice. I like how it is clearer with findMethod/find instead of the indexed method hack.",
      "range": {
        "startLine": 1050,
        "startChar": 1,
        "endLine": 1077,
        "endChar": 89
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcfc9dee_656f1ccf",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/JavaToJavaScriptCompiler.java",
        "patchSetId": 1
      },
      "lineNbr": 1077,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-03-24T22:31:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcf999ff_75ca288c",
      "range": {
        "startLine": 1050,
        "startChar": 1,
        "endLine": 1077,
        "endChar": 89
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcf999ff_15b00407",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/LibraryJavaToJavaScriptCompiler.java",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-03-24T21:49:29Z",
      "side": 1,
      "message": "Maybe move nameOf out of JGwtCreate. It is strange to see it here.",
      "range": {
        "startLine": 197,
        "startChar": 12,
        "endLine": 197,
        "endChar": 22
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcfc9dee_45c30079",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/LibraryJavaToJavaScriptCompiler.java",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-03-24T22:31:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcf999ff_15b00407",
      "range": {
        "startLine": 197,
        "startChar": 12,
        "endLine": 197,
        "endChar": 22
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcf999ff_55aa8c9a",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JDeclaredType.java",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-03-24T21:49:29Z",
      "side": 1,
      "message": "What if there are more than one? I suggest an assertion that covers that case. Or maybe better always use the full signature",
      "range": {
        "startLine": 161,
        "startChar": 1,
        "endLine": 168,
        "endChar": 3
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcfc9dee_c5cef0a4",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/ast/JDeclaredType.java",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-03-24T22:31:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcf999ff_55aa8c9a",
      "range": {
        "startLine": 161,
        "startChar": 1,
        "endLine": 168,
        "endChar": 3
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cb2c15a_dde06e7e",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/FullCompileTestBase.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-03-24T21:57:50Z",
      "side": 1,
      "message": "goktug: the test infrastructure doesn\u0027t rely on special compiler handling of EntryPoints and onModuleLoad. instead right here it registers the function that it wants treated as the \"entry method\" for code splitting purposes.\n\nfor a test to be getting any the benefit of \"real\" special handling in the Compiler for EntryPoint classes with onModuleLoad functions, it would need to be exercising the JavaToJavaScriptCompiler class code path. But basically no tests do this. Instead they depend on a test replica of that code path in JavaAstConstructor.",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 58
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cb2c15a_905c0dde",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/FullCompileTestBase.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-03-24T22:34:10Z",
      "side": 1,
      "message": "I see. As it is really an entry method, wouldn\u0027t it be more appropriate to keep the names accordingly?",
      "parentUuid": "9cb2c15a_dde06e7e",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 58
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcfc9dee_051bb85a",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/FullCompileTestBase.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-03-24T23:03:13Z",
      "side": 1,
      "message": "from the perspective of the test it is just \"some function\". it\u0027s not getting special treatment by the compiler (it\u0027s only getting special treatment by the test itself).\n\nso, i would say it\u0027s not an \"onModuleLoad\" function.",
      "parentUuid": "9cb2c15a_905c0dde",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 58
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cb2c15a_b3567b1f",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/FullCompileTestBase.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-03-24T23:25:45Z",
      "side": 1,
      "message": "The method is special treated and test is basically trying to emulate an entry point; naming it accordingly just helps the reader to understand the special treatment and I can\u0027t see any strong reason to change it. Anyway I would recommend you to not change but that\u0027s your call.",
      "parentUuid": "fcfc9dee_051bb85a",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 58
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cb2c15a_10cadd37",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAstTest.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-03-24T22:34:10Z",
      "side": 1,
      "message": "perhaps this one was an entryPoint to ensure that it never gets inlined?",
      "range": {
        "startLine": 60,
        "startChar": 38,
        "endLine": 60,
        "endChar": 42
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcfc9dee_e51fac42",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/GenerateJavaScriptAstTest.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-03-24T23:03:13Z",
      "side": 1,
      "message": "there is no special handling that prevents entry methods from being inlined.",
      "parentUuid": "9cb2c15a_10cadd37",
      "range": {
        "startLine": 60,
        "startChar": 38,
        "endLine": 60,
        "endChar": 42
      },
      "revId": "dfdc9e599f65189e2fadd08a9120e7d615edad8f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}