{
  "comments": [
    {
      "key": {
        "uuid": "f2011d89_692d010b",
        "filename": "user/src/com/google/gwt/logging/client/LoggingPopup.java",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-09-05T09:52:13Z",
      "side": 1,
      "message": "I believe we\u0027ll want to change that to event.preventDefault() (in a followup pass, probably when we\u0027ll think about deprecating eventGetCurrentEvent; I believe we should have deprecated it when we deprecated listeners in favor of handlers)",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f25d9dd3_4f77c543",
        "filename": "user/src/com/google/gwt/user/client/ui/AbsolutePanel.java",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5060
      },
      "writtenOn": "2013-09-05T04:18:05Z",
      "side": 1,
      "message": "Why not use setPosition(Position.RELATIVE)?",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f25d9dd3_ef98f162",
        "filename": "user/src/com/google/gwt/user/client/ui/AbsolutePanel.java",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-09-05T04:23:51Z",
      "side": 1,
      "message": "I\u0027ll look into doing that as a followup pass.",
      "parentUuid": "f25d9dd3_4f77c543",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f25d9dd3_6fa5e19a",
        "filename": "user/src/com/google/gwt/user/client/ui/ComplexPanel.java",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 5060
      },
      "writtenOn": "2013-09-05T04:41:03Z",
      "side": 1,
      "message": "elem.getParentElement().removeChild(elem)?",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f25d9dd3_4fd105ea",
        "filename": "user/src/com/google/gwt/user/client/ui/ComplexPanel.java",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-09-05T05:01:53Z",
      "side": 1,
      "message": "I haven\u0027t tackled DOM.getParent(Element) yet, because done the same way I\u0027ve refactored the other methods, this would end up as\n\n   elem.getParentElement().\u003ccom.google.gwt.dom.client.Element\u003ecast().removeChild(elem);\n\nunless I can find a clever way to prevent introducing unnecessary cast() operations in a context-sensitive manner.",
      "parentUuid": "f25d9dd3_6fa5e19a",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2011d89_89695d2b",
        "filename": "user/src/com/google/gwt/user/client/ui/ComplexPanel.java",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-09-05T09:52:13Z",
      "side": 1,
      "message": "What if this was transformed to:\n\n    ((Element) elem.getParentElement()).removeChild(elem)\n\ninstead? I believe there are tools that could point out the unnecessary casts (oh, and it would avoid the potential NPEs in some cases)",
      "parentUuid": "f25d9dd3_4fd105ea",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f25d9dd3_0fb22de2",
        "filename": "user/src/com/google/gwt/user/client/ui/CustomButton.java",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 5060
      },
      "writtenOn": "2013-09-05T04:41:03Z",
      "side": 1,
      "message": "Document.get().createDivElement()",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f25d9dd3_6fce414d",
        "filename": "user/src/com/google/gwt/user/client/ui/CustomButton.java",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-09-05T05:01:53Z",
      "side": 1,
      "message": "DOM.createDiv() returns a user.Element, so it would need a cast() too.  I don\u0027t plan to tackle those methods until the next release cycle, when we can change them from user.Element to dom.Element (or dom.DivElement/etc as appropriate), and then they can be automatically refactored too.",
      "parentUuid": "f25d9dd3_0fb22de2",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12695174_1b026b20",
        "filename": "user/src/com/google/gwt/user/client/ui/CustomButton.java",
        "patchSetId": 1
      },
      "lineNbr": 1021,
      "author": {
        "id": 5060
      },
      "writtenOn": "2013-09-05T04:41:03Z",
      "side": 1,
      "message": "getElement().appendChild(curFaceElement)?",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f25d9dd3_0fcb0d3c",
        "filename": "user/src/com/google/gwt/user/client/ui/CustomButton.java",
        "patchSetId": 1
      },
      "lineNbr": 1021,
      "author": {
        "id": 5000
      },
      "writtenOn": "2013-09-05T05:01:53Z",
      "side": 1,
      "message": "DOM.appendChild() has some extra sillyness for handling PotentialElement that Node.appendChild(Node) doesn\u0027t do.  I\u0027d like to get rid of PotentialElement so we can make this change, but at the moment eliminating it wouldn\u0027t be behavior preserving.",
      "parentUuid": "12695174_1b026b20",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2011d89_89903d09",
        "filename": "user/src/com/google/gwt/user/client/ui/CustomButton.java",
        "patchSetId": 1
      },
      "lineNbr": 1021,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-09-05T09:52:13Z",
      "side": 1,
      "message": "Re. eliminating PotentialElement; does it mean the Renderable experiment from Orkut didn\u0027t turn well? Or you think it can be done without PotentialElement?",
      "parentUuid": "f25d9dd3_0fcb0d3c",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2011d89_298029b6",
        "filename": "user/src/com/google/gwt/user/client/ui/TabBar.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-09-05T09:52:13Z",
      "side": 1,
      "message": "Strange that we\u0027re casting to a \u0027char\u0027 whereas we have \u0027int\u0027 on both sides. We should have removed the cast when we introduced the KeyCodes interface.\n\nDo you have static-analysis tools at Google that could point out those kind of things?",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2011d89_e96a1120",
        "filename": "user/test/com/google/gwt/user/client/ui/DOMTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5030
      },
      "writtenOn": "2013-09-05T09:52:13Z",
      "side": 1,
      "message": "I think many/most of these are tested in com.google.gwt.dom.client.ElementTest.\n\nWe should probably leave this file as-is so it continues to test the c.g.g.u.c.DOM methods.",
      "revId": "e0618c51c026b4d116afdbf373daae061acabab2",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}