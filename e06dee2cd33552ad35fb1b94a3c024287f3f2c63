{
  "comments": [
    {
      "key": {
        "uuid": "3ea2e98c_ea6bbd3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 5445
      },
      "writtenOn": "2017-01-25T23:45:40Z",
      "side": 1,
      "message": "[warning] Commit message lines should be 72 characters or fewer.",
      "revId": "e06dee2cd33552ad35fb1b94a3c024287f3f2c63",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94497cae_92bf61d8",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 3
      },
      "lineNbr": 945,
      "author": {
        "id": 5110
      },
      "writtenOn": "2017-01-26T01:55:14Z",
      "side": 1,
      "message": "nit: pls initialize only in the constructor that you don\u0027t overwrite the value.",
      "range": {
        "startLine": 945,
        "startChar": 41,
        "endLine": 945,
        "endChar": 76
      },
      "revId": "e06dee2cd33552ad35fb1b94a3c024287f3f2c63",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac541d7d_b5185f1e",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 3
      },
      "lineNbr": 945,
      "author": {
        "id": 5305
      },
      "writtenOn": "2017-01-26T05:00:07Z",
      "side": 1,
      "message": "Not sure I understand the wording of this comment. I made it a final ImmutableMultimap.",
      "range": {
        "startLine": 945,
        "startChar": 41,
        "endLine": 945,
        "endChar": 76
      },
      "revId": "e06dee2cd33552ad35fb1b94a3c024287f3f2c63",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2261fd18_7151615e",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 3
      },
      "lineNbr": 990,
      "author": {
        "id": 5110
      },
      "writtenOn": "2017-01-26T01:55:14Z",
      "side": 1,
      "message": "Direct loop seems easier to follow or am I missing something?\n\n    for (JDeclaredType type : program.getRepresentedAsNativeTypes()) {\n      for (JDeclaredType superType : getSupertypesIncludingSelf(type)) {\n        representedAsNativeTypesBySupertype.put(superType, type)\n      }\n    }",
      "range": {
        "startLine": 977,
        "startChar": 0,
        "endLine": 990,
        "endChar": 5
      },
      "revId": "e06dee2cd33552ad35fb1b94a3c024287f3f2c63",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "371aa7f7_fed868f3",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 3
      },
      "lineNbr": 990,
      "author": {
        "id": 5305
      },
      "writtenOn": "2017-01-26T05:00:07Z",
      "side": 1,
      "message": "Yes. Much simpler. Initially I had a map for type to all represented as native subclass plus their super classes (but that is not necessary).",
      "range": {
        "startLine": 977,
        "startChar": 0,
        "endLine": 990,
        "endChar": 5
      },
      "revId": "e06dee2cd33552ad35fb1b94a3c024287f3f2c63",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c8878df_390f9d7d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 3
      },
      "lineNbr": 993,
      "author": {
        "id": 5110
      },
      "writtenOn": "2017-01-26T01:55:14Z",
      "side": 1,
      "message": "don\u0027t we have a such method already somewhere?",
      "revId": "e06dee2cd33552ad35fb1b94a3c024287f3f2c63",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d63acc74_52df17ee",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/ControlFlowAnalyzer.java",
        "patchSetId": 3
      },
      "lineNbr": 993,
      "author": {
        "id": 5305
      },
      "writtenOn": "2017-01-26T05:00:07Z",
      "side": 1,
      "message": "I look around and did not find a method that does this (surprising). A similar private method existed in JsniRestrictionChecker. I refactored both and moved it to the right location JjsUtils.\n\nMy feeling is that a method with this logic should already exist lurking somewhere but I did not find it.",
      "revId": "e06dee2cd33552ad35fb1b94a3c024287f3f2c63",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}