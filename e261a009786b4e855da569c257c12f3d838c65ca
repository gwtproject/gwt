{
  "comments": [
    {
      "key": {
        "uuid": "e99c0776_bd8b4a11",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeCategory.java",
        "patchSetId": 24
      },
      "lineNbr": 43,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-19T05:15:27Z",
      "side": 1,
      "message": "why do we have both java_lang_double and type_primitive_number? They should be the same with this patch.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "e261a009786b4e855da569c257c12f3d838c65ca",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e99c0776_9df5a690",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeCategory.java",
        "patchSetId": 24
      },
      "lineNbr": 43,
      "author": {
        "id": 5570
      },
      "writtenOn": "2015-09-19T06:30:04Z",
      "side": 1,
      "message": "Not exactly. These types have to line up with similar ordinals in Array.java. Primitive Boolean/Number are not the same semantics as Unboxed Boolean/Double.  Primitives aren\u0027t nullable, unboxed types are.\n\nPrimitive arrays are initialized to false/0, unboxed arrays are initialized to null. Primitive arrays can set array elements without doing Cast.isJavaBoolean()/Cast.isJavaDouble().\n\nIf you don\u0027t have this distinction, then\n\nDouble d[] \u003d new Double[10]; \n\ngets initialized with all 0s, and d[n] !\u003d null, even though it should be null.",
      "parentUuid": "e99c0776_bd8b4a11",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "e261a009786b4e855da569c257c12f3d838c65ca",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c98bc36e_532d3670",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeCategory.java",
        "patchSetId": 24
      },
      "lineNbr": 43,
      "author": {
        "id": 5110
      },
      "writtenOn": "2015-09-21T19:33:32Z",
      "side": 1,
      "message": "I see; basically we want two categories differentiated for array initialization purposes. Makes sense.",
      "parentUuid": "e99c0776_9df5a690",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "e261a009786b4e855da569c257c12f3d838c65ca",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c98bc36e_73ef1a7a",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeCategory.java",
        "patchSetId": 24
      },
      "lineNbr": 43,
      "author": {
        "id": 5001
      },
      "writtenOn": "2015-09-21T19:35:01Z",
      "side": 1,
      "message": "It\u0027s a good point you raised though, because the comments/documentation aren\u0027t clear enough as to why this exists.",
      "parentUuid": "c98bc36e_532d3670",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "e261a009786b4e855da569c257c12f3d838c65ca",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}