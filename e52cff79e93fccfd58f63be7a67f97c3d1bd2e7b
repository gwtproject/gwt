{
  "comments": [
    {
      "key": {
        "uuid": "10116099_bd8d2f91",
        "filename": "user/src/com/google/gwt/resources/gss/CreateRuntimeConditionalNodes.java",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-10-07T05:10:45Z",
      "side": 1,
      "message": "Perhaps just visitConditionalRule or some other adverb, manually makes it sound like we\u0027re going to kick this back to the user and ask them to sort it out...",
      "range": {
        "startLine": 62,
        "startChar": 15,
        "endLine": 62,
        "endChar": 23
      },
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_12072d3f",
        "filename": "user/src/com/google/gwt/resources/gss/CreateRuntimeConditionalNodes.java",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-07T21:50:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10116099_bd8d2f91",
      "range": {
        "startLine": 62,
        "startChar": 15,
        "endLine": 62,
        "endChar": 23
      },
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_fd87a76a",
        "filename": "user/src/com/google/gwt/resources/gss/ExternalClassesCollector.java",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-10-07T05:10:45Z",
      "side": 1,
      "message": "return; - no need to keep going, right?",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_b203c12f",
        "filename": "user/src/com/google/gwt/resources/gss/ExternalClassesCollector.java",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-07T21:50:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10116099_fd87a76a",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_9d8af374",
        "filename": "user/src/com/google/gwt/resources/gss/ExternalClassesCollector.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-10-07T05:10:45Z",
      "side": 1,
      "message": "If we\u0027re testing with endsWith, it should be called STAR_SUFFIX - prefix would imply startsWith.\n\nBut externalClassPrefixes makes sense, since we ignore the suffix (star) and use the remainder (the prefix).",
      "range": {
        "startLine": 96,
        "startChar": 28,
        "endLine": 96,
        "endChar": 48
      },
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_d200b524",
        "filename": "user/src/com/google/gwt/resources/gss/ExternalClassesCollector.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-07T21:50:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10116099_9d8af374",
      "range": {
        "startLine": 96,
        "startChar": 28,
        "endLine": 96,
        "endChar": 48
      },
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_3d613f32",
        "filename": "user/src/com/google/gwt/resources/gss/ExternalClassesCollector.java",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-10-07T05:10:45Z",
      "side": 1,
      "message": "Just double checking here, but this can\u0027t be *\u0027d since it is already a css rule? Should that be asserted or otherwise checked? Is it possible someone passed in something stupid like a comment, @-rule, or A_DEF_EXPRESSION of some kind?",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_d22e75ac",
        "filename": "user/src/com/google/gwt/resources/gss/ExternalClassesCollector.java",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-07T21:50:18Z",
      "side": 1,
      "message": "@external externalClass \"dateBox*\";\n\nexternalClass will be mapped to a CssLiteralNode and \"dateBox*\" to a CssStringNode.\n\nThe last else is to handle the CssLiteralNode.\n\nNow, you\u0027re right, I could be more defensive and test if the value is a CssLiteralNode and throw an exception if it\u0027s not the case to warn the user that something is wrong with the external at rule . Moreover, after some tests, you can use constant (that is replaced before to call this visitor) and pass everything in the at-rule via a constant (like a function, a java expression and so on).",
      "parentUuid": "10116099_3d613f32",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_bd540f4d",
        "filename": "user/src/com/google/gwt/resources/gss/ImageSpriteCreator.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-10-07T05:10:45Z",
      "side": 1,
      "message": "Very likely too little too late... but why not as a mixin? Could set a precedent for a few that are built-in that GWT/GSS solves for us, maybe look something like\n\n    @mixin sprite(\u0027someImageResource\u0027);",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_0835bafa",
        "filename": "user/src/com/google/gwt/resources/gss/ImageSpriteCreator.java",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-07T21:50:18Z",
      "side": 1,
      "message": "This is not possible to do that with a mixin. We need to access annotations (@ImageOptions and @RepeatStyle) defined for the method that returns the instance of the ImageResource.",
      "parentUuid": "10116099_bd540f4d",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_e6e9e0bd",
        "filename": "user/src/com/google/gwt/resources/rg/GssResourceGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-10-06T15:36:29Z",
      "side": 1,
      "message": "[info] Line matches the illegal pattern \u0027check that a space is left after a colon on an assembled error message\u0027.",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_c321ca93",
        "filename": "user/src/com/google/gwt/resources/rg/GssResourceGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-06T15:49:08Z",
      "side": 1,
      "message": "Could someone explain what is the added value of this checkstyle rule ?",
      "parentUuid": "10116099_e6e9e0bd",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0268cf7_aa9a0446",
        "filename": "user/src/com/google/gwt/resources/rg/GssResourceGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 5900
      },
      "writtenOn": "2014-10-06T17:45:07Z",
      "side": 1,
      "message": "Maybe it\u0027s a way not to flee the Java logging standard, in which the exception messages follow the skeleton [exception-class-name][colon][whitespace][message], as in \"java.io.IOException: Cannot find specified path\".\n\nAlso, when assigning variables in log messages, it\u0027s common to use the equals sign, instead of the colon. At least, in my experience through some libraries this is the pattern I\u0027ve observed. \nHere\u0027s an example: \"java.io.IOException: Cannot run program \"dot\": CreateProcess error\u003d2, O sistema n√£o pode encontrar o arquivo especificado\". \n(the message is adapted to pt-br)\n\nPlease, consider reading the best practices for logging linked below. They all apply the above comments. (although they\u0027re not from Java)\nhttp://dev.splunk.com/view/logging-best-practices/SP-CAAADP6\nhttp://sourceforge.net/adobe/cairngorm/wiki/BestPracticesforLogging/",
      "parentUuid": "d0bfc88a_c321ca93",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_9d51535d",
        "filename": "user/src/com/google/gwt/resources/rg/GssResourceGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 225,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-10-07T05:10:45Z",
      "side": 1,
      "message": "What about mixing and matching GssResource and CssResource?",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_686b16e4",
        "filename": "user/src/com/google/gwt/resources/rg/GssResourceGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 225,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-07T21:50:18Z",
      "side": 1,
      "message": "Good point... We cannot mix both because we have the risk (even if the probability is very low) to have a conflict in the style class names...",
      "parentUuid": "10116099_9d51535d",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_c6e664eb",
        "filename": "user/test/com/google/gwt/resources/client/gss/GssResourceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-10-06T15:36:29Z",
      "side": 1,
      "message": "[info] Line matches the illegal pattern \u0027check that a space is left after a colon on an assembled error message\u0027.",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_7d7457fa",
        "filename": "user/test/com/google/gwt/resources/client/gss/GssResourceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-10-07T03:58:17Z",
      "side": 1,
      "message": "If I am reading this right (and runtimeConditional.gss as well), then we are *assuming* here that user.agent can *never* equal ie8 or gecko_1_8 (or gecko1_8 if that was what you really meant instead). That means that if unit tests are run via htmlunit as IE8 (see http://mojo.codehaus.org/gwt-maven-plugin/test-mojo.html#htmlunit) or using selenium/rmi in IE8, this will rather mysteriously fail. \n\nIf nothing else the comment in the .gss file needs a cleanup, but you probably also want to either check/force user.agent\u0027s value, or better yet, change the .gwt.xml for this test to support a custom property, and have two methods that each check one case?",
      "range": {
        "startLine": 136,
        "startChar": 46,
        "endLine": 136,
        "endChar": 52
      },
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_88576a1b",
        "filename": "user/test/com/google/gwt/resources/client/gss/GssResourceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-07T21:50:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10116099_7d7457fa",
      "range": {
        "startLine": 136,
        "startChar": 46,
        "endLine": 136,
        "endChar": 52
      },
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_c885622c",
        "filename": "user/test/com/google/gwt/resources/client/gss/GssResourceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-07T21:50:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10116099_7d7457fa",
      "range": {
        "startLine": 136,
        "startChar": 46,
        "endLine": 136,
        "endChar": 52
      },
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_26a3f893",
        "filename": "user/test/com/google/gwt/resources/client/gss/GssResourceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-10-06T15:36:29Z",
      "side": 1,
      "message": "[info] Line matches the illegal pattern \u0027check that a space is left after a colon on an assembled error message\u0027.",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_06a87c6c",
        "filename": "user/test/com/google/gwt/resources/client/gss/GssResourceTest.java",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-10-06T15:36:29Z",
      "side": 1,
      "message": "[info] Line matches the illegal pattern \u0027check that a space is left after a colon on an assembled error message\u0027.",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_3d7adfe9",
        "filename": "user/test/com/google/gwt/resources/client/gss/runtimeConditional.gss",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-10-07T03:58:17Z",
      "side": 1,
      "message": "...Shouldn\u0027t this be gecko1_8? Either that, or the comment is wrong, this \u0027will be evaluated to false\u0027 since gecko_1_8 isn\u0027t a real value for user.agent.",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_6852362e",
        "filename": "user/test/com/google/gwt/resources/client/gss/runtimeConditional.gss",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5035
      },
      "writtenOn": "2014-10-07T21:50:18Z",
      "side": 1,
      "message": "replaced by a custom property",
      "parentUuid": "10116099_3d7adfe9",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10116099_66adf07c",
        "filename": "user/test/com/google/gwt/resources/gss/ExternalClassesCollectorTest.java",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 5445
      },
      "writtenOn": "2014-10-06T15:36:29Z",
      "side": 1,
      "message": "[info] First sentence should end with a period.",
      "revId": "e52cff79e93fccfd58f63be7a67f97c3d1bd2e7b",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}