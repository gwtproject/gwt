{
  "comments": [
    {
      "key": {
        "uuid": "1239a8b4_d875ee1f",
        "filename": "user/super/com/google/gwt/emul/java/util/StringJoiner.java",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-16T19:42:39Z",
      "side": 1,
      "message": "What is the generated code?",
      "revId": "e6b5ef896e7bc14105e703b72b7c205728ad479f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9714aa34_6268ec0e",
        "filename": "user/super/com/google/gwt/emul/java/util/StringJoiner.java",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-05-16T20:27:56Z",
      "side": 1,
      "message": "Just did a quick example by copying a StringJoiner without any checks and doing method calls similar to the test case.\n\nThe generated JS does not contain a toString() call anymore in the StringJoiner constructor and setEmptyValue() method (pretty compile with -optimize 9):\n\n  function StringJoiner(prefix, suffix, delimiter){\n    this.prefix \u003d prefix;\n    this.suffix \u003d suffix;\n    this.delimiter \u003d delimiter;\n    this.emptyValue \u003d this.prefix + (\u0027\u0027 + this.suffix);\n  }\n  \n  function $setEmptyValue(this$static, emptyValue){\n    this$static.emptyValue \u003d emptyValue;\n    return this$static;\n  }",
      "parentUuid": "1239a8b4_d875ee1f",
      "revId": "e6b5ef896e7bc14105e703b72b7c205728ad479f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1239a8b4_c9e6fe54",
        "filename": "user/super/com/google/gwt/emul/java/util/StringJoiner.java",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-16T22:43:28Z",
      "side": 1,
      "message": "Thanks. My guess is, we upgraded the type for charsequence to String since its only subclass then called toString on the instance which is implemented as \u0027return this\u0027.\n\nActually this is known problem and should do \u0027return checkNotNull(this)\u0027 instead. As I didn\u0027t verify the impact of that, I never get around adding the check.\n\nBut, I\u0027m also guessing there might be other problems since StringBuilder instance probably exists in the test hence may not have specialized your specific example.\n\nIf you don\u0027t mind as you already created an example, can you update it to also pass a StringBuilder instance to this class? That will prevent type specialization and we could see if there are also other problems or not.",
      "parentUuid": "9714aa34_6268ec0e",
      "revId": "e6b5ef896e7bc14105e703b72b7c205728ad479f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1720ba90_3b10dfef",
        "filename": "user/super/com/google/gwt/emul/java/util/StringJoiner.java",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 5031
      },
      "writtenOn": "2016-05-17T00:05:08Z",
      "side": 1,
      "message": "If I do something like new StringJoiner(null, \"prefix\", new StringBuilder(\"suffix\")) the JS looks like\n\n  function StringJoiner(delimiter, prefix, suffix){\n    this.delimiter \u003d delimiter;\n    this.prefix \u003d prefix;\n    this.suffix \u003d ($clinit_String() , instanceOfString(suffix)?suffix:suffix.toString_0());\n    this.emptyValue \u003d this.prefix + (\u0027\u0027 + this.suffix);\n  }\n\nSo only the StringBuilder handling looks ok.",
      "parentUuid": "1239a8b4_c9e6fe54",
      "revId": "e6b5ef896e7bc14105e703b72b7c205728ad479f",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}