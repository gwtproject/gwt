{
  "comments": [
    {
      "key": {
        "uuid": "edd85c6d_0eb0cbd5",
        "filename": "user/src/com/google/gwt/user/datepicker/client/CalendarModel.java",
        "patchSetId": 3
      },
      "lineNbr": 255,
      "author": {
        "id": 5100
      },
      "writtenOn": "2013-08-23T15:40:47Z",
      "side": 1,
      "message": "I don\u0027t think this is particularly safe -- having any character before it would break this test, and a given local isn\u0027t necessarily going to have the exact pattern as a substring.  I suggest instead:\n\nString monthAndYearPattern \u003d getMonthAndYearFormatter().getPattern();\nfor (int i \u003d 0; i \u003c monthAndYearPattern.length(); ++i) {\n  switch (monthAndYearPattern.charAt(i)) {\n    case \u0027Y\u0027: return false;\n    case \u0027M\u0027: case \u0027L\u0027: return true;\n  }\n  return true;\n}",
      "revId": "eb51a76694c9e83b1ea916827a5250d5fe686299",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edd85c6d_4ea6d3a8",
        "filename": "user/src/com/google/gwt/user/datepicker/client/DefaultMonthSelector.java",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 5100
      },
      "writtenOn": "2013-08-23T15:40:47Z",
      "side": 1,
      "message": "Space before {",
      "revId": "eb51a76694c9e83b1ea916827a5250d5fe686299",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8df8c0d3_437106dc",
        "filename": "user/test/com/google/gwt/user/client/ui/DatePickerTest.java",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 5035
      },
      "writtenOn": "2013-08-23T15:38:37Z",
      "side": 1,
      "message": "The test is not in the same package that the DatePicker, so I don\u0027t have access to the protected method.",
      "revId": "eb51a76694c9e83b1ea916827a5250d5fe686299",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}