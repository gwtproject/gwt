{
  "comments": [
    {
      "key": {
        "uuid": "bef97ec1_6ea65fb2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5030
      },
      "writtenOn": "2018-11-26T09:46:09Z",
      "side": 1,
      "message": "nit: move link to issue in footer; something like:\n\n Cache Gecko version in DOMImplMozilla to save CPU\n\n Bug: #9644\n Bug-Link: https://github.com/gwtproject/gwt/issues/9644\n Change-Id: Ifdb57f5b18ced91a7b7a35b601d2a24fea1d068b",
      "revId": "ee7dc22844ecd5104afe4653f4d75f36c0c722f4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "934ab7d7_e0a44187",
        "filename": "user/src/com/google/gwt/dom/client/DOMImplMozilla.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5030
      },
      "writtenOn": "2018-11-26T09:46:09Z",
      "side": 1,
      "message": "How about using geckoVersion -2 and -1? or 0 and -1? or maybe \u0027null\u0027 and -1? (I\u0027d use a java.lang.Double then to make it \"lighter\")\n\n if (geckoVersion \u003d\u003d null) { // or \u003d\u003d -1, or \u003d\u003d 0\n   geckoVersion \u003d getNativeGeckoVersion();\n }\n return geckoVersion;\n\nAn alternative would be to compute this eagerly\n\n private static int geckoVersion \u003d getGeckoVersion();",
      "revId": "ee7dc22844ecd5104afe4653f4d75f36c0c722f4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ba40699_0f41ab7f",
        "filename": "user/src/com/google/gwt/dom/client/DOMImplMozilla.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 11267
      },
      "writtenOn": "2018-11-26T11:52:55Z",
      "side": 1,
      "message": "Great,\n\nThis approach seems the most understable as well : \n\n private static int geckoVersion \u003d getGeckoVersion();\n\nI\u0027ll update it.",
      "parentUuid": "934ab7d7_e0a44187",
      "revId": "ee7dc22844ecd5104afe4653f4d75f36c0c722f4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "019f27ea_f6ac673a",
        "filename": "user/src/com/google/gwt/dom/client/DOMImplMozilla.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5030
      },
      "writtenOn": "2018-11-26T12:31:39Z",
      "side": 1,
      "message": "It introduces a clinit (class initialization) though, which has a runtime cost (fwiw, the one from DOMImpl creating a DOMImpl instance would be optimized out as DOMImpl methods are \"static-ified\")\n\nI did a bit of testing (compiling a small app in PRETTY style and looking at the produced JS) and using a static field initialized with a constant doesn\u0027t produce a clinit (the field is transformed to a \"global\" variable), so the solutions with -2 or 0 as a sentinel value for \"not initialized\" would work.",
      "parentUuid": "7ba40699_0f41ab7f",
      "revId": "ee7dc22844ecd5104afe4653f4d75f36c0c722f4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee6208b0_eae0d277",
        "filename": "user/src/com/google/gwt/dom/client/DOMImplMozilla.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5030
      },
      "writtenOn": "2018-11-26T09:46:09Z",
      "side": 1,
      "message": "Not really useful",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 46,
        "endChar": 6
      },
      "revId": "ee7dc22844ecd5104afe4653f4d75f36c0c722f4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "978f2298_792b7693",
        "filename": "user/src/com/google/gwt/dom/client/DOMImplMozilla.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 11267
      },
      "writtenOn": "2018-11-26T11:52:55Z",
      "side": 1,
      "message": "Old habit to document everything I do.",
      "parentUuid": "ee6208b0_eae0d277",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 46,
        "endChar": 6
      },
      "revId": "ee7dc22844ecd5104afe4653f4d75f36c0c722f4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "703e4d13_4ed0cdbb",
        "filename": "user/src/com/google/gwt/dom/client/DOMImplMozilla.java",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 5030
      },
      "writtenOn": "2018-11-26T09:46:09Z",
      "side": 1,
      "message": "nit: keep the original indent",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 6
      },
      "revId": "ee7dc22844ecd5104afe4653f4d75f36c0c722f4",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    }
  ]
}