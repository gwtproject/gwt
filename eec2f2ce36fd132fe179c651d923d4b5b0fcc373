{
  "comments": [
    {
      "key": {
        "uuid": "d439b2d1_609c7c92",
        "filename": "user/test/com/google/gwt/dev/jjs/optimized/CastOptimizationTest.java",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-01-22T08:25:34Z",
      "side": 1,
      "message": "Why don\u0027t you follow the same pattern as the other test? Create a field. move the field initialization gwtSetup and assert if \n\n if(field \u003d\u003d null) throw new RTE()\n\nis completely optimized.",
      "revId": "eec2f2ce36fd132fe179c651d923d4b5b0fcc373",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54aa2254_250f8e10",
        "filename": "user/test/com/google/gwt/dev/jjs/optimized/CastOptimizationTest.java",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 5105
      },
      "writtenOn": "2016-01-22T18:34:51Z",
      "side": 1,
      "message": "Yeah that was the idea, it should have been optimized away as it does not have any side effects. Now I understand why: the cast potentially has side effects, it is replaced by the call that gets optimized away too late (it is the normalization pass that replaces the cast with a call that is empty). \n\nHaving it as a field is not a solution, because it has a complex initialization it can not be determined that the initial null value is not seen, hence the compiler thinks it can be null. \n\nThis test is correct if not beautiful, so let\u0027s move one. I really don\u0027t want to spend time in making the test pretty.",
      "parentUuid": "d439b2d1_609c7c92",
      "revId": "eec2f2ce36fd132fe179c651d923d4b5b0fcc373",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}