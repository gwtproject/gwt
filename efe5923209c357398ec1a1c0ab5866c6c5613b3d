{
  "comments": [
    {
      "key": {
        "uuid": "0fd6913f_b61b4e5a",
        "filename": "dev/core/src/com/google/gwt/core/ext/linker/TypeIndexedSet.java",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-02-15T01:31:32Z",
      "side": 1,
      "message": "I\u0027m lost here. How does this work? Class is not comparable which will yield to runtime error as soon as you start adding items??",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 215,
        "endChar": 6
      },
      "revId": "efe5923209c357398ec1a1c0ab5866c6c5613b3d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fd6913f_f69e7653",
        "filename": "dev/core/src/com/google/gwt/core/ext/linker/TypeIndexedSet.java",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 5010
      },
      "writtenOn": "2014-02-15T01:50:53Z",
      "side": 1,
      "message": "TREE_SETS isn\u0027t used for the key of the Multimap. It\u0027s used to store the set of items with the same Class. If you look below, newSortedSetMultimap takes a HashSet.",
      "parentUuid": "0fd6913f_b61b4e5a",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 215,
        "endChar": 6
      },
      "revId": "efe5923209c357398ec1a1c0ab5866c6c5613b3d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fd6913f_96b852aa",
        "filename": "dev/core/src/com/google/gwt/core/ext/linker/TypeIndexedSet.java",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-02-15T02:15:23Z",
      "side": 1,
      "message": "Then the values should be comparable. i.e. T extends Comparable? It still looks like we are missing some type enforcements here.",
      "parentUuid": "0fd6913f_f69e7653",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 215,
        "endChar": 6
      },
      "revId": "efe5923209c357398ec1a1c0ab5866c6c5613b3d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fd6913f_36c75edb",
        "filename": "dev/core/src/com/google/gwt/core/ext/linker/TypeIndexedSet.java",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-02-15T03:15:42Z",
      "side": 1,
      "message": "The TreeSet\u003cT\u003e class in the JRE does not declare its type parameter T extends Comparable\u003cT\u003e. It is enforced at addition time, where a ClassCastException is thrown if the inserted element does not implement Comparable. A consequence of this choice is that it will call a.compareTo(b) for completely unrelated a and b.",
      "parentUuid": "0fd6913f_96b852aa",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 215,
        "endChar": 6
      },
      "revId": "efe5923209c357398ec1a1c0ab5866c6c5613b3d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fd6913f_167a22ce",
        "filename": "dev/core/src/com/google/gwt/core/ext/linker/TypeIndexedSet.java",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-02-15T03:37:23Z",
      "side": 1,
      "message": "JRE\u0027s TreeSet cannot declare a requirement for Comparable because TreeSet has option to use Comparator so Object doesn\u0027t need to be Comparable. However for this class; if the items are not comparable, it is guaranteed to cause problem at runtime.",
      "parentUuid": "0fd6913f_36c75edb",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 215,
        "endChar": 6
      },
      "revId": "efe5923209c357398ec1a1c0ab5866c6c5613b3d",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}