{
  "comments": [
    {
      "key": {
        "uuid": "7f33447f_9fdac1a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-06-04T07:00:27Z",
      "side": 1,
      "message": "issue 8478?",
      "revId": "f08d65387fc76ea3fa1a06f0450a3784885a8c9c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2c3030_c98413bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-06-08T05:00:18Z",
      "side": 1,
      "message": "Not deliberately, but I can link that as well. The goal of this fix was making it possible for other unknown useragents to be given a standard impl (safari in all likelihood, though gecko_18 could be reasonable too). The target here in fact is a \u0027Mozilla/5.0 compatible\u0027 browser that apparently can run safari/gecko permutations, but doesn\u0027t report an engine in a usable way - the googlebot ;).\n\nFor 8487, it seems already to be possible to define \u0027unknown\u0027 as a user.agent value, and define a replace-with for the entrypoint with the warning/redirect. An implementation will still be required for each useragent-specific class, so fallback can be defined to some browser that is likely to at least get it that far.",
      "parentUuid": "7f33447f_9fdac1a6",
      "revId": "f08d65387fc76ea3fa1a06f0450a3784885a8c9c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f33447f_ffe42d72",
        "filename": "user/src/com/google/gwt/useragent/rebind/UserAgentGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 5110
      },
      "writtenOn": "2014-06-04T07:00:27Z",
      "side": 1,
      "message": "Actually it might be better to return \u0027unknown\u0027 for runtimeValue so that developers could detect the fallback mode. As a side effect, this state will be logged by UserAgentAsserter as well, which sounds fare to me.\n\nWhat do you think?",
      "revId": "f08d65387fc76ea3fa1a06f0450a3784885a8c9c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2c3030_69913ff7",
        "filename": "user/src/com/google/gwt/useragent/rebind/UserAgentGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 5130
      },
      "writtenOn": "2014-06-08T05:00:18Z",
      "side": 1,
      "message": "My concern would be that any project that needs to support otherwise un-supported browsers would then need to disable this runtime check, and wouldn\u0027t be able to take advantage of the feature for other browsers (or miss accidental checkins of \u003cset-property name\u003d\u0027user.agent\u0027 value\u003d\u0027safari\u0027 /\u003e). \n\nIs there a way to get it both ways? Give the runtime check four modes perhaps, with fallback on/off and standard useragents on/off? \n\nThe writeUserAgentPropertyJavaScript impl will default to \u0027unknown\u0027 if left null, so unless some one explicitly defines a fallback for user.agent property, behavior will not change.",
      "parentUuid": "7f33447f_ffe42d72",
      "revId": "f08d65387fc76ea3fa1a06f0450a3784885a8c9c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}