{
  "comments": [
    {
      "key": {
        "uuid": "2f69f0dc_212eada1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 5030
      },
      "writtenOn": "2017-06-29T11:11:41Z",
      "side": 1,
      "message": "I don\u0027t think we need to have that \"re-apply\" label here.",
      "revId": "f2d1e0a54d2ce3732664331ce49e8ad0d786c4de",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9377d8f3_8a04fda8",
        "filename": "user/src/com/google/gwt/i18n/rebind/LookupMethodCreator.java",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 5030
      },
      "writtenOn": "2017-06-29T11:11:41Z",
      "side": 1,
      "message": "Use\n\n {@value #DEFAULT_PARTITIONS_SIZE}\n\ninstead of hard-coding the value.\n\nhttps://docs.oracle.com/javase/7/docs/technotes/tools/solaris/javadoc.html#value",
      "range": {
        "startLine": 47,
        "startChar": 85,
        "endLine": 47,
        "endChar": 88
      },
      "revId": "f2d1e0a54d2ce3732664331ce49e8ad0d786c4de",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d7026f0_4860b745",
        "filename": "user/src/com/google/gwt/i18n/rebind/LookupMethodCreator.java",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 5030
      },
      "writtenOn": "2017-06-29T11:11:41Z",
      "side": 1,
      "message": "Isn\u0027t that redundant? This assignment is already done in the other constructor that we defer to above.",
      "revId": "f2d1e0a54d2ce3732664331ce49e8ad0d786c4de",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21e60e26_6e08627d",
        "filename": "user/src/com/google/gwt/i18n/rebind/LookupMethodCreator.java",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 5030
      },
      "writtenOn": "2017-06-29T11:11:41Z",
      "side": 1,
      "message": "Why not reuse the \u0027target\u0027 variable here?",
      "revId": "f2d1e0a54d2ce3732664331ce49e8ad0d786c4de",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20529262_0b30abf7",
        "filename": "user/src/com/google/gwt/i18n/rebind/LookupMethodCreator.java",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 5030
      },
      "writtenOn": "2017-06-29T11:11:41Z",
      "side": 1,
      "message": "Will this indirection be properly inlined in the most common case where partitioning isn\u0027t needed? If not, then it should only be generated if there\u0027s a need for partitioning, and the generated code should be the same as before/now otherwise (large majority of cases).\n\nIf might be a good idea to factor out the loop over methods (rather than the \u0027printLookup\u0027), passing the methods as argument so it can easily be either the \u0027methods\u0027 array itself, or a partition of the array. Using a List\u003cJMethod\u003e (Arrays.asList) would even allow us to use Guava\u0027s Lists.partition() [1], which uses List#sublist so the code doesn\u0027t even need to allocate new arrays.\n\n[1] https://google.github.io/guava/releases/19.0/api/docs/com/google/common/collect/Lists.html#partition(java.util.List,%20int)",
      "revId": "f2d1e0a54d2ce3732664331ce49e8ad0d786c4de",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea4a2704_4e87c4ea",
        "filename": "user/src/com/google/gwt/i18n/rebind/LookupMethodCreator.java",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 5030
      },
      "writtenOn": "2017-06-29T11:11:41Z",
      "side": 1,
      "message": "Rewrap at \u0027,\u0027 like the original source line.",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 128,
        "endChar": 35
      },
      "revId": "f2d1e0a54d2ce3732664331ce49e8ad0d786c4de",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c73a608_de8a207f",
        "filename": "user/src/com/google/gwt/i18n/rebind/LookupMethodCreator.java",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 5030
      },
      "writtenOn": "2017-06-29T11:11:41Z",
      "side": 1,
      "message": "Wrap at \u0027;\u0027 (assuming the line really is too long and needs wrapping)\n\nApparently, simplifying the \"0 +\" in \u0027i\u0027 initialization would be enough to pass under the 100chars threshold.",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 144,
        "endChar": 34
      },
      "revId": "f2d1e0a54d2ce3732664331ce49e8ad0d786c4de",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68d49ec3_50bfcc4e",
        "filename": "user/test/com/google/gwt/i18n/rebind/LookupMethodCreatorTest.java",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 5030
      },
      "writtenOn": "2017-06-29T11:11:41Z",
      "side": 1,
      "message": "Remove this comment. It possibly belongs in the commit message (but I don\u0027t think it\u0027s worth it), or a comment in the review.",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 153,
        "endChar": 11
      },
      "revId": "f2d1e0a54d2ce3732664331ce49e8ad0d786c4de",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": true
    }
  ]
}