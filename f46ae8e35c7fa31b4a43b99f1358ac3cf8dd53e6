{
  "comments": [
    {
      "key": {
        "uuid": "1239a8b4_38db525f",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-16T19:29:15Z",
      "side": 1,
      "message": "Can be simplified to:\n\n      if (isNegativeZero(x)) {\n        return 1/y \u003c 0 ? 0 : -1;\n      } else {\n        return 1/y \u003e 0 ? 0 : 1;\n      }",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 111,
        "endChar": 7
      },
      "revId": "f46ae8e35c7fa31b4a43b99f1358ac3cf8dd53e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1239a8b4_f8b70a04",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-16T19:29:15Z",
      "side": 1,
      "message": "Given my comment below probably it is best to not change this as well.",
      "revId": "f46ae8e35c7fa31b4a43b99f1358ac3cf8dd53e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77dc96fd_107ba469",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-17T15:36:46Z",
      "side": 1,
      "message": "Sorry didnt quite understand what you mean here.\nIs it best to not change compare method too?",
      "parentUuid": "1239a8b4_f8b70a04",
      "revId": "f46ae8e35c7fa31b4a43b99f1358ac3cf8dd53e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1239a8b4_58d1fe61",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 339,
      "author": {
        "id": 5110
      },
      "writtenOn": "2016-05-16T19:29:15Z",
      "side": 1,
      "message": "Double is an overlay type for primitive number so with this change:\n\n  new Double(-0).equals(new Double(0))\n\nwill return false, but\n\n  new Double(-0) \u003d\u003d new Double(0)\n\nwill return true. \u0027\u003d\u003d\u0027 returning true but equals returning false is a bigger semantic issue that consistently returning true.\n\nSo I think we should keep the behavior and a test that verifies this consistency with a comment.",
      "revId": "f46ae8e35c7fa31b4a43b99f1358ac3cf8dd53e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77dc96fd_50812c5f",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 339,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-17T15:36:46Z",
      "side": 1,
      "message": "Good point. Done.\n\nBut at least we can support NaN here.\nIn our case it would be \nnew Double(NaN).equals(new Double(NaN)) is false\nand\nnew Double(NaN) \u003d\u003d new Double(NaN) is false",
      "parentUuid": "1239a8b4_58d1fe61",
      "revId": "f46ae8e35c7fa31b4a43b99f1358ac3cf8dd53e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77dc96fd_d0943c9d",
        "filename": "user/super/com/google/gwt/emul/java/lang/Double.java",
        "patchSetId": 2
      },
      "lineNbr": 339,
      "author": {
        "id": 5542
      },
      "writtenOn": "2016-05-17T15:38:10Z",
      "side": 1,
      "message": "Forget it. It wont work with NaN either",
      "parentUuid": "77dc96fd_50812c5f",
      "revId": "f46ae8e35c7fa31b4a43b99f1358ac3cf8dd53e6",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}