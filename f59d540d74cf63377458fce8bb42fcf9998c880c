{
  "comments": [
    {
      "key": {
        "uuid": "5f44c9e8_12a8fa95",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/CallGraph.java",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-04T17:04:05Z",
      "side": 1,
      "message": "This would be incomplete for use in TypeTightener because a call should include all possible overrides, e.g. in the following code\n\n  class A {\n    m()\n  }\n\n  class B extends A {\n    m()\n  }\n\n\n  f(A a) {\n    a.m()   \u003c-- this call that in the AST shows as A:m() can also be B:m().\n  }",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 55,
        "endChar": 5
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_12955aa1",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FieldReferencesGraph.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 30,
        "startChar": 3,
        "endLine": 30,
        "endChar": 8
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_923c0a06",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FieldReferencesGraph.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "isn\u0027t this the same as buildFieldUsesVisitor.accept(method);",
      "range": {
        "startLine": 78,
        "startChar": 1,
        "endLine": 79,
        "endChar": 51
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_e62cafc2",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FieldReferencesGraph.java",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "maybe nicer like:\n\nCollection\u003cJField\u003e referencedFields \u003d referencedFieldsByMethod.removeAll(method);\nfor (JField referencedField : referencedFields) {\n  methodsByReferencedField.remove(referencedField, method);\n}",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 98,
        "endChar": 47
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_2656171f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FieldReferencesGraph.java",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "s/getMethodsByReferencedFields/getReferencingMethodsForFields",
      "range": {
        "startLine": 115,
        "startChar": 22,
        "endLine": 115,
        "endChar": 50
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_e64fcf7f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FieldReferencesGraph.java",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "s/result/referencingMethods",
      "range": {
        "startLine": 117,
        "startChar": 17,
        "endLine": 117,
        "endChar": 23
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_c6c3b366",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FullOptimizerContext.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "line too long",
      "range": {
        "startLine": 46,
        "startChar": 96,
        "endLine": 46,
        "endChar": 101
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_862b6b20",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FullOptimizerContext.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "the other collections here all seem to keep track of on which step their fields or methods were modified.\n\nwhy is it that removedCalleeMethods doesn\u0027t have a similar need?",
      "range": {
        "startLine": 54,
        "startChar": 23,
        "endLine": 54,
        "endChar": 43
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_26229719",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FullOptimizerContext.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-04T17:04:05Z",
      "side": 1,
      "message": "Also I think we should abstract this, basically you want to now if the callsites for a method has changed, not only removed and we should keep track of that then.\n\nIn general it seems that we need to keep track whether some aspect of a method is modified, whether it is its body, callsites, or other aspect, and we should probably abstract that and implement it uniformly.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 54,
        "endChar": 70
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2da928_e47824f0",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FullOptimizerContext.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 7701
      },
      "writtenOn": "2014-12-04T21:27:18Z",
      "side": 1,
      "message": "How about we keep track of the modifications of the dependent context (CallGraph, FieldReferencesGraph) at each step? Then we can get the information we need. Currently the dependent context is kept updated so we lost its modification information between steps.",
      "parentUuid": "5f44c9e8_26229719",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 54,
        "endChar": 70
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_4691e357",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FullOptimizerContext.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "line too long",
      "range": {
        "startLine": 110,
        "startChar": 92,
        "endLine": 110,
        "endChar": 109
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_2609371f",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FullOptimizerContext.java",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "spelling",
      "range": {
        "startLine": 112,
        "startChar": 36,
        "endLine": 112,
        "endChar": 44
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_66a5ff40",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/FullOptimizerContext.java",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "i suspect that there wouldn\u0027t be a need for this method if removedCalleeMethods kept track of on which step it\u0027s modifications occurred, like the other collections here do",
      "range": {
        "startLine": 215,
        "startChar": 14,
        "endLine": 215,
        "endChar": 35
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_c6fdf314",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/JChangeTrackingVisitor.java",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "sort method within file",
      "range": {
        "startLine": 188,
        "startChar": 13,
        "endLine": 188,
        "endChar": 22
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_a6b78759",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/Pruner.java",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "this line is hard for me to read, please make it clearer",
      "range": {
        "startLine": 466,
        "startChar": 10,
        "endLine": 466,
        "endChar": 49
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2da928_0450c050",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/Pruner.java",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 7701
      },
      "writtenOn": "2014-12-04T21:27:18Z",
      "side": 1,
      "message": "What I what to do here is to add the callee methods of the pruned methods (type.getMethods()) to removedCalleeMethods.",
      "parentUuid": "5f44c9e8_a6b78759",
      "range": {
        "startLine": 466,
        "startChar": 10,
        "endLine": 466,
        "endChar": 49
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff1c9dfc_9a718dd3",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "this name sounds like a Map, but it\u0027s not.\n\nshould be something like \"callTraceInArgs\" or \"nestedCallTrace\"",
      "range": {
        "startLine": 223,
        "startChar": 27,
        "endLine": 223,
        "endChar": 42
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff1c9dfc_7a9a7947",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 919,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "i think this name is wrong, isn\u0027t it really \"calledMethodsByMethodCallArg\" ?",
      "range": {
        "startLine": 919,
        "startChar": 43,
        "endLine": 919,
        "endChar": 65
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2da928_6f094d53",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 919,
      "author": {
        "id": 7701
      },
      "writtenOn": "2014-12-04T21:27:18Z",
      "side": 1,
      "message": "Maybe that\u0027s not what I mean. What I mean is that, for example, if there is a call\nfun1(fun2());\nI want to put {fun2, fun1} into the map.\nThen if fun2 is modified, we can get fun1.",
      "parentUuid": "ff1c9dfc_7a9a7947",
      "range": {
        "startLine": 919,
        "startChar": 43,
        "endLine": 919,
        "endChar": 65
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0225b9_db49a7ae",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 919,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-05T00:08:51Z",
      "side": 1,
      "message": "yes i know that\u0027s what you mean, but i\u0027m objecting to the name.\n\nhere\u0027s an example and how the name makes me want to interpret it:\n\nvoid fun3() {\n  fun1(fun2());\n}\n\n\nhere, fun2 is the arg, fun1 is a method being called, and fun3 is the caller.\n\n\nso when you name this map as \"callersByMethodCallArg\" i intepret \"caller\" to be fun3, when you really intend it to be fun2.\n\n\nthe name i\u0027ve suggested makes more sense to me. but granted, it\u0027s hard to pick a name that captures these fine-grained distinctions",
      "parentUuid": "5f2da928_6f094d53",
      "range": {
        "startLine": 919,
        "startChar": 43,
        "endLine": 919,
        "endChar": 65
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff1c9dfc_7acd993d",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 946,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "s/first/firstStep",
      "range": {
        "startLine": 946,
        "startChar": 8,
        "endLine": 946,
        "endChar": 13
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff1c9dfc_9ab3cd91",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 949,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "the body of this while loop looks kind of messy now.\n\ncan you make it looks a little more organized? some combination of add whitespace/comments/pull out functions",
      "range": {
        "startLine": 949,
        "startChar": 0,
        "endLine": 949,
        "endChar": 2
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2da928_75f60870",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 952,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-04T17:04:05Z",
      "side": 1,
      "message": "I don\u0027t like special casing by iteration, we should be doing the same as in MethodInliner.",
      "range": {
        "startLine": 952,
        "startChar": 58,
        "endLine": 952,
        "endChar": 68
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff1c9dfc_9ade6de3",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 989,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "s/affectedMethods/computeAffectedMethods",
      "range": {
        "startLine": 989,
        "startChar": 23,
        "endLine": 989,
        "endChar": 38
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff1c9dfc_7a84b99b",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 1018,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "make this a field of the TypeTightener class so it does\u0027nt have to be written here and can be reused multiple times.\n\nactually, please do so for all 3 of these predicate definitions.",
      "range": {
        "startLine": 1018,
        "startChar": 23,
        "endLine": 1018,
        "endChar": 28
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2da928_d557dca1",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 1043,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-04T17:04:05Z",
      "side": 1,
      "message": "I don\u0027t think we need to be so granular here. If a method changed  (no matter whether it is its parameters or body) assume that everything as changed and include in the affected methods the callers, the callees etc.",
      "range": {
        "startLine": 1028,
        "startChar": 0,
        "endLine": 1043,
        "endChar": 5
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2da928_f55c58c6",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 1054,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-04T17:04:05Z",
      "side": 1,
      "message": "I see that we are handling the overrides here instead of representing them in the call graph; you can probably ignore the comment I left there.",
      "range": {
        "startLine": 1045,
        "startChar": 0,
        "endLine": 1054,
        "endChar": 5
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2da928_95616485",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 1067,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-04T17:04:05Z",
      "side": 1,
      "message": "You can add the modified methods always and not keep track of the iteration number.",
      "range": {
        "startLine": 1066,
        "startChar": 0,
        "endLine": 1067,
        "endChar": 46
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2da928_3522d043",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 1069,
      "author": {
        "id": 5105
      },
      "writtenOn": "2014-12-04T17:04:05Z",
      "side": 1,
      "message": "I see that you are trying to do actually the minimal recomputation but sometimes it is better to have simpler (albeit less efficient) code and that is what is generally preferred unless the gains are significant.",
      "range": {
        "startLine": 1028,
        "startChar": 2,
        "endLine": 1069,
        "endChar": 8
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff1c9dfc_daee254c",
        "filename": "dev/core/src/com/google/gwt/dev/jjs/impl/TypeTightener.java",
        "patchSetId": 1
      },
      "lineNbr": 1072,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "s/affectedFields/computeAffectedFields",
      "range": {
        "startLine": 1072,
        "startChar": 22,
        "endLine": 1072,
        "endChar": 36
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f44c9e8_267e17da",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/TypeTightenerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "how about you pull this test file out of this patch into it\u0027s own separate patch, and get it reviewed and committed first.\n\nthat way the test can help prove that there is no change in behavior before and after your changes to TypeTightener",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2da928_ef1d5d8a",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/TypeTightenerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 7701
      },
      "writtenOn": "2014-12-04T21:27:18Z",
      "side": 1,
      "message": "will do.",
      "parentUuid": "5f44c9e8_267e17da",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f4ed10c_fe4f5db1",
        "filename": "dev/core/test/com/google/gwt/dev/jjs/impl/TypeTightenerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 5410
      },
      "writtenOn": "2014-12-04T00:54:03Z",
      "side": 1,
      "message": "nice tests.",
      "range": {
        "startLine": 39,
        "startChar": 14,
        "endLine": 39,
        "endChar": 29
      },
      "revId": "f59d540d74cf63377458fce8bb42fcf9998c880c",
      "serverId": "84fdd5b9-d3fc-3149-9ae9-e619898c4c46",
      "unresolved": false
    }
  ]
}