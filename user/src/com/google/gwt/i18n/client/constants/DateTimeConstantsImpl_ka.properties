# Following code is generated from CLDR data by script. You can do
# emergency fix here, but you fix will be lost unless it is also
# fixed in CLDR. The data generation scripts exists outside GWT and
# will be run manually after each major CLDR updates. Each update
# will be manually checked before check in to make sure undesired
# changes in CLDR will not break existing applications as possible.
# File generated from CLDR ver. 25

eras = ძვ. წ., ახ. წ.
eraNames = ძველი წელთაღრიცხვით, ახალი წელთაღრიცხვით
narrowMonths = ი, თ, მ, ა, მ, ი, ი, ა, ს, ო, ნ, დ
months = იანვარი, თებერვალი, მარტი, აპრილი, მაისი, ივნისი, ივლისი, აგვისტო, სექტემბერი, ოქტომბერი, ნოემბერი, დეკემბერი
shortMonths = იან, თებ, მარ, აპრ, მაი, ივნ, ივლ, აგვ, სექ, ოქტ, ნოე, დეკ
standaloneNarrowMonths = ი, თ, მ, ა, მ, ი, ი, ა, ს, ო, ნ, დ
standaloneMonths = იანვარი, თებერვალი, მარტი, აპრილი, მაისი, ივნისი, ივლისი, აგვისტო, სექტემბერი, ოქტომბერი, ნოემბერი, დეკემბერი
standaloneShortMonths = იან, თებ, მარ, აპრ, მაი, ივნ, ივლ, აგვ, სექ, ოქტ, ნოე, დეკ
weekdays = კვირა, ორშაბათი, სამშაბათი, ოთხშაბათი, ხუთშაბათი, პარასკევი, შაბათი
shortWeekdays = კვი, ორშ, სამ, ოთხ, ხუთ, პარ, შაბ
narrowWeekdays = კ, ო, ს, ო, ხ, პ, შ
standaloneWeekdays = კვირა, ორშაბათი, სამშაბათი, ოთხშაბათი, ხუთშაბათი, პარასკევი, შაბათი
standaloneShortWeekdays = კვი, ორშ, სამ, ოთხ, ხუთ, პარ, შაბ
standaloneNarrowWeekdays = კ, ო, ს, ო, ხ, პ, შ
shortQuarters = I კვ., II კვ., III კვ., IV კვ.
quarters = I კვარტალი, II კვარტალი, III კვარტალი, IV კვარტალი
ampms = დილის, საღამოს
dateFormats = EEEE\\, dd MMMM\\, y, d MMMM\\, y, d MMM\\, y, dd.MM.yy
timeFormats = HH:mm:ss zzzz, HH:mm:ss z, HH:mm:ss, HH:mm
dateTimeFormats = {1} {0}, {1}\\, {0}, {1} {0}, {1}\\, {0}
firstDayOfTheWeek = 2
weekendRange = 7, 1
