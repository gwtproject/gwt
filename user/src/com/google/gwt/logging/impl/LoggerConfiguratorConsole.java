package com.google.gwt.logging.impl;

import java.util.logging.Handler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;

/**
 * TODO: Insert description here. (generated by goktug)
 */
public class LoggerConfiguratorConsole implements LoggerConfigurator {
  @Override
  public void configure(Logger logger) {
    if (logger.getName().isEmpty()) {
      logger.addHandler(new SimpleConsoleLogHandler());
    }
  }

  public class SimpleConsoleLogHandler extends Handler {
    @Override
    public void publish(LogRecord record) {
      if (!isSupported()) {
        return;
      }
      int val = record.getLevel().intValue();
      if (val >= Level.SEVERE.intValue()) {
        error(record.getMessage());
      } else if (val >= Level.WARNING.intValue()) {
        warn(record.getMessage());
      } else if (val >= Level.INFO.intValue()) {
        info(record.getMessage());
      } else {
        log(record.getMessage());
      }
    }

    private native boolean isSupported() /*-{
      return console != null;
    }-*/;

    private native void error(String message) /*-{
      console.error(message);
    }-*/;

    private native void warn(String message) /*-{
      console.warn(message);
    }-*/;

    private native void info(String message) /*-{
      console.info(message);
    }-*/;

    private native void log(String message) /*-{
      console.log(message);
    }-*/;

    @Override
    public void close() {
      // No action needed
    }

    @Override
    public void flush() {
      // No action needed
    }
  }
}
